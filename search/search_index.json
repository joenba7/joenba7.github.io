{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"about/","title":"About","text":"<p>I'm Jorge, and this is my blog, The Road to Elysium, where I keep some of my thoughts, small bits of code, and various other things stored. During the day I work as a Linux infrastructure engineer, and during the night.. I'm Batman. Really though, I spend the rest of my time with the wife and kids, and even technical things when time allows! </p> <p>In case you were wondering:</p> <p></p> <p>An elysium is a place of ideal happiness.</p>"},{"location":"2009/12/01/accelerating-openssh-connections/","title":"Accelerating OpenSSH connections","text":"<p>You\u2019ve probably been in the situation before where you have to connect to a server several times, which means that you most likely have to re-authenticate each time. There are several workarounds to this. You can use ssh-keys, or a socket to bypass it. How? In this round we\u2019ll learn about sockets.</p> <p>Open up your /etc/ssh/sshd_config and find the line Host *. Right below it, paste the following:</p> <pre><code>ControlMaster auto\nControlPath ~/.ssh/socket-%r@%h:%p\n</code></pre> <p>And voila, that should speed up your OpenSSH-connection a bit, not to mention you won\u2019t have to re-authenticate each time. Example?</p>"},{"location":"2009/12/01/accelerating-openssh-connections/#first-time","title":"First time:","text":"<pre><code>ssh jorge@totoro\njorge@totoro\u2019s password:\nLast login: Mon Dec 14 08:24:54 2009 from home.example.com\n[jorge@totoro ~]$\n</code></pre>"},{"location":"2009/12/01/accelerating-openssh-connections/#second-time","title":"Second time:","text":"<pre><code>ssh jorge@totoro\nLast login: Mon Dec 14 08:24:54 2009 from home.example.com\n[jorge@totoro ~]$\n</code></pre> <p>As you can see from the first try we have to authenticate at least once. When done with that, you SSH to the same server, without the need to authenticate again. Without the sockets-setup you\u2019d have to authenticate twice. Nifty huh?</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/","title":"Acer Aspire One Tips and Tricks","text":"<p>Unfortunately, I no longer maintain this guide. Being that I myself now use Fedora for the Acer Aspire One, I don\u2019t spend much time investigating how to tweak Linpus. All things you try based on this guide are at your own risk! I still recommend using http://www.aspireoneuser.com/forum/ for further questions about the Acer Aspire One. If you need help on IRC, you can find me on the channel #linuxhjelp on the IRC-network DALnet (irc.dal.net).</p> <p>I have, well had, a Powerbook G4 which was driving me nuts. Having been using Linux for a such a long time, I wasn\u2019t quite able to adjust to how a Mac dealt with software \u2013 most of the stuff out there isn\u2019t free. That was just one of the problems I had with a Mac. Making a long story short, I ended up with giving my Powerbook to my parents. I\u2019m sure they\u2019ll enjoy it way more than I do.</p> <p>So, having gotten rid of that laptop, I suddenly found myself laptop-less, which, to be honest, left me feeling quite naked. I did find a solution though! Getting hold of an Acer Aspire One.</p> <p>I\u2019ve now ordered it, and it should be in my hands in about a week. Till then, I\u2019ll just gather some tips and tricks concerning it and its system. The machine is finally in my hands. :) You can find the following tips and tricks here:</p> <p>Please keep in mind that most changes done to the system will require you to have root-access. So unless specified otherwise, run all the commands as root. Whether you are root or not is indicated by the first character in your terminal. $ signifies that you\u2019re a regular user, # is for when you are root.</p> <p>Oh, and if you\u2019re wondering about what the root password is, I believe it is the same as your regular user password. If you\u2019d like to change it though, do the following:</p> <pre><code>1\n2\n3\n4\n5\n</code></pre> <pre><code>$ sudo su -\n# passwd root\nNew Unix password:\nRetype new Unix password:\npasswd: all authentication tokens updates successfully.\n</code></pre> <p>Before we proceed though, I need to emphasize that every instruction here is done at your own risk. There is no guarantee that any of this will work on your Acer Aspire One. Most people have reported these instructions to be a success, while others report failure. So, be cautious!</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#changing-to-the-default-desktop","title":"Changing to the default desktop","text":"<p>The Acer Aspire One runs a Linux distribution called Linpus. This distribution comes with XFCE as the default windowmanager. Of course Acer has modified it a bit, which makes it look like this:</p> <p>Word of caution though. Most websites will tell you to do the following:</p> <p>su to root:</p> <pre><code>1\n</code></pre> <pre><code>$ sudo su -\n</code></pre> <p>and open the file /etc/xdg/xfce4-session/xfce4-session.rc:</p> <pre><code>1\n</code></pre> <pre><code># mousepad /etc/xdg/xfce4-session/xfce4-session.rc\n</code></pre> <p>and find the line:</p> <pre><code>1\n</code></pre> <pre><code>Client0_Command=xfdesktopnew\n</code></pre> <p>Change it to:</p> <pre><code>1\n</code></pre> <pre><code>Client0_Command=xfdesktop-xfce\n</code></pre> <p>But the thing is, when you replace xfdesktopnew with xfdesktop-xfce, a script called xfce-mcs-manager won\u2019t start up, and that is what some people find so \u201chorrible\u201d about the regular xfce-desktop. If we open up the file xfdesktopnew located in /usr/bin/, we find the following:</p> <pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre> <pre><code>#!/bin/sh\nif [ -f /usr/bin/xfce-mcs-manager.new ];then\nsudo mv /usr/bin/xfce-mcs-manager.new /usr/bin/xfce-mcs-manager\nfi\n/usr/bin/xfdesktop2 &amp; &gt;/dev/null 2&gt;&amp;1\nsleep 5\nif [ -f /usr/bin/xfce-mcs-manager ];then\nsudo  mv /usr/bin/xfce-mcs-manager /usr/bin/xfce-mcs-manager.new\nfi\n</code></pre> <p>As you can se here the script xfdesktopnew starts the application xfdesktop2. What that script contains, I\u2019ve no idea. Try opening the file for yourself, you\u2019ll see what I\u2019m talking about. Anyway, in order for this to work, change the line:</p> <pre><code>1\n</code></pre> <pre><code>/usr/bin/xfdesktop2 &amp; &gt;/dev/null 2&gt;&amp;1\n</code></pre> <p>to:</p> <pre><code>1\n</code></pre> <pre><code>/usr/bin/xfdesktop &amp; &gt;/dev/null 2&gt;&amp;1\n</code></pre> <p>Save it and close it. Next, open up the file /usr/bin/xfdesktop, and change line 6 to look like this:</p> <pre><code>1\n</code></pre> <pre><code>/usr/bin/xfdesktop-xfce &amp; &gt;/dev/null 2&gt;&amp;1\n</code></pre> <p>Save, close, and reboot. You should have a fully working xfce desktop, with icons!</p> <p>Now, if you\u2019re like me, and would like to have the icons gone from the desktop, create a file named xfdesktoprc in /home/user/.config/xfce4/desktop/ with the following in it:</p> <pre><code>1\n2\n3\n4\n5\n</code></pre> <pre><code>[file-icons]\nshow-filesystem=false\nshow-home=false\nshow-trash=false\nshow-removable=true\n</code></pre> <p>Save and close, and reboot. The result? Something like my desktop:</p> <p>Have fun. :)</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#enabling-the-right-click-menu","title":"Enabling the Right-click Menu","text":"<p>Usually when you\u2019re in xfce you can right-click on the desktop to bring forth a menu. This isn\u2019t enabled as a standard function with the desktop that comes with the Acer Aspire One. To enable it, do the following.</p> <pre><code>1\n</code></pre> <pre><code>$ xfce-setting-show\n</code></pre> <p>This will bring up the xfce settings manager. Select Desktop, Behavior and click the box named Show desktop menu on right click. Voila, that should be it. :)</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#changing-the-keyboard-layout-to-norwegian","title":"Changing the keyboard layout to Norwegian","text":"<p>This can be done in at least two ways. You either put setxkbmap no at the bottom of the .bash_profile-file (located in your home-folder) like this:</p> <pre><code>1\n</code></pre> <pre><code> $ echo \"setxkbmap no\" &gt;&gt; bash_profile\n</code></pre> <p>The second method was downloading an RPM, but with the new Live Update-patch, this is no longer required.</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#disabling-autologin","title":"Disabling autologin","text":"<p>Warning: Take caution when commenting out lines, and inserting new ones. The lack of a single character may render your system useless.</p> <p>Open the file named /etc/rc.d/rc.S and comment out the following line:</p> <pre><code>1\n</code></pre> <pre><code>/usr/bin/xinit -- -br&gt;/dev/null 2&gt;&amp;1 &amp;\n</code></pre> <p>Like this:</p> <pre><code>1\n</code></pre> <pre><code>#/usr/bin/xinit -- -br&gt;/dev/null 2&gt;&amp;1 &amp;\n</code></pre> <p>Below this line, insert the following:</p> <pre><code>1\n</code></pre> <pre><code>/usr/sbin/gdm\n</code></pre> <p>And that\u2019s that. The username is user and the password is whatever you set it to be during the installation.</p> <p>Should you for some reason be unlucky enough to forget to add /usr/sbin/gdm to the file, but still commented out /usr/bin/xinit \u2014 -br&gt;/dev/null 2&gt;&amp;1 &amp;, and rebooted, do what David here did. Thanks David. :)</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#installing-firefox-3","title":"Installing Firefox 3","text":"<p>If you want Firefox 3 to be installed properly (via yum), you should add the remi repository:</p> <pre><code>1\n2\n</code></pre> <pre><code># wget http://rpms.famillecollet.com/remi-release-8.rpm\n# rpm -Uvh remi-release-8.rpm\n</code></pre> <p>Edit the file /etc/yum.repos.d/remi.repo, and set enabled to 1 under [remi] and NOT [remi-test].</p> <p>Then we proceed with removing the old Firefox and installing the new one. Now, a regular yum remove firefox won\u2019t work, as it\u2019ll drag a buttload of dependencies with it. However, this will only remove Firefox, without its dependencies:</p> <pre><code>1\n</code></pre> <pre><code># rpm -e --nodeps firefox\n</code></pre> <p>Then install the new one:</p> <pre><code>1\n</code></pre> <pre><code># yum install firefox\n</code></pre> <p>That\u2019s all there is to it. :)</p> <p>Now, having said that, a friendly chap named Nacho Marin made me aware of a problem that had totally slipped my mind. It seems that there are several programs that are depending on some libraries that Firefox 2 has, and not Firefox 3. The Acer Aspire One e-mail client being one of them, and the RSS reader too. The missing libraries are libgtkembedmoz.so, libmozjs.so, libxpcom_core.so and libxpcom.so.</p> <p>A big thank you to Nacho for the heads up about the library-files.</p> <p>Update: It seems that several people were complaining about how the e-mail program kept shutting down for no apparent reason. It seems that they need more than simply the library-files. I believe I\u2019ve located the files, and that you now should be able to have both Firefox 3, and the email client working. Give me some feedback to let me know how the script turns out.</p> <p>I (Jorge) have made a script to make this a bit easier to fix, so stay tuned.</p> <p>Update: Script is finished, instructions are as follows:</p> <p>Become root and open a file named recover_firefox_libraries.sh:</p> <pre><code>1\n2\n</code></pre> <pre><code>$ sudo su -\n# mousepad recover_firefox_libraries.sh\n</code></pre> <p>Place the following in it:</p> <pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n</code></pre> <pre><code>#!/bin/bash\n#\n## Script to recover Firefox 2 libraries\n## Jorge Barrera Grandon \n## Version 2\n#\n#\n## Usage: ./recover_firefox_libraries.sh\n\nWGET=`which wget`\nRPM_URL=\"http://jorge.fbarr.net/files/firefox-files.tar.gz\"\nMV=`which mv`\nCHOWN=`which chown`\nCHMOD=`which chmod`\nRM=`which rm`\nTAR=`which tar`\nMKDIR=`which mkdir`\nRMDIR=`which rmdir`\n\ncd /root/\necho \"## Getting hold of the Firefox-files..\"\n$WGET $RPM_URL\n\necho \"## Unpacking the library-files..\"\n$TAR zxvf firefox-files.tar.gz\n\necho \"## Moving library-files..\"\n$MV /usr/acer/bin/AME /usr/acer/bin/old.AME\n$MV /root/firefox-files/AME /usr/acer/bin/AME\n$MKDIR /usr/lib/firefox-files/\n$MV /root/firefox-files/* /usr/lib/firefox-files/\n\necho \"## Changing permissions and cleaning up..\"\n$RM /root/firefox-files.tar.gz\n$RMDIR /root/firefox-files/\n$CHOWN -R root.root /usr/lib/firefox-files/\n$CHMOD -R 755 /usr/lib/firefox-files/\n\necho \"## Done!\"\n</code></pre> <p>What the script basically does is to get hold of the file firefox-files.tar.gz (so be online when running it), moves the libraryfiles, changes the permission, and removes the file and the unnecessary directories it creates. Make the file executable, then run it:</p> <pre><code>1\n2\n</code></pre> <pre><code># chmod +x recover_firefox_libraries.sh\n# ./recover_firefox_libraries.sh\n</code></pre> <p>Enjoy!</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#installing-other-packages-with-yum","title":"Installing other packages with yum","text":"<p>If you want to install other packages with yum, a repository I can recommend is http://rpm.livna.org. You can add this repository by following these instructions. First, become root. You should be able to either do sudo su \u2013 and then entering the password for user, or just do su \u2013, and entering the root-password (which I think is the same as for user):</p> <pre><code>1\n2\n</code></pre> <pre><code> $ sudo su -\n# yum -y install yum-priorities\n</code></pre> <p>Open and edit the file /etc/yum/pluginconf.d/priorities.conf. Change vim to whatever editor you prefer (nano is one of the easier ones):</p> <pre><code>1\n</code></pre> <pre><code># vim /etc/yum/pluginconf.d/priorities.conf\n</code></pre> <p>Make the contents of the file look like so:</p> <pre><code>1\n2\n3\n</code></pre> <pre><code>[main]\nenabled = 1\ncheck_obsoletes = 1\n</code></pre> <p>Save and close the file. Now finally, install this package and you should be set:</p> <pre><code>1\n</code></pre> <pre><code># rpm -Uvh http://www.fedorafaq.org/f8/yum  http://rpm.livna.org/livna-release-8.rpm\n</code></pre>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#removing-the-search-bar","title":"Removing the search-bar","text":"<p>Removing the search-bar is very simple as well. Open the file /usr/share/search-bar/start-search_bar.sh and comment out each line to make the content look like so:</p> <pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</code></pre> <pre><code>#!/bin/sh\n#resolution=`xrandr |grep *|awk '{print $1}'`\n#resolution=`xrandr |grep current|awk -F\"current\" '{print $2}'|awk -F\",\" '{print $1}'|sed 's/ //g'`\n#\n#if [ $resolution = \"1280x800\" ];then\n#   acer-search-desktop --x=650 --y=90 --width=490 --height=31\n#elif [ $resolution = \"1024x600\" ];then\n#   acer-search-desktop --x=510 --y=65 --width=490 --height=31\n#else\n#   acer-search-desktop\n#fi\n</code></pre>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#enable-circular-scrolling","title":"Enable Circular Scrolling","text":"<p>I doubt that this part is Linpus-specific, but after having had an Acer Aspire One for a few days, you\u2019ll come to notice that the scrolling is damn annoying. The way to scroll as default is by dragging your finger along the right-hand side of the touchpad. And it isn\u2019t even on the edge either, but a bit inside the edge. I personally found circular scrolling to be easier to use. Enable it like so.</p> <p>Either press Alt-F2 and type gsynaptics or open a terminal and type the same. Go to Scrolling and select Enable Circular Scrolling. Enjoy!</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#adding-your-own-desktop-icons","title":"Adding your own Desktop-Icons","text":"<p>You\u2019re probably not going to use some of the the default applications listed on your Acer One-desktop. I know I\u2019m not going to. But wouldn\u2019t it be nice to be able to specify what programs you would like displayed on your desktop? Good thing it IS possible then. Have a look:</p> <p>There you see that I\u2019ve added two applications of my own \u2013 VLC and audacious. Here\u2019s how you do it.</p> <p>First off, you need to have the programs installed. :) In most cases you\u2019ll already find that once you install the program, icons for it are present. Check /usr/share/pixmaps/ for them. But should you need an icon for some program that hasn\u2019t any at some point, it has to be 90\u00d790, and be placed in that folder.</p> <p>If you installed VLC through yum, like I did, then you\u2019ll find the file livna-vlc.desktop in /usr/share/applications/. Now, for the sake of tidiness, I renamed the file to vlc.desktop:</p> <pre><code>1\n</code></pre> <pre><code># mv livna-vlc.desktop vlc.desktop\n</code></pre> <p>This file looks something like this:</p> <pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n</code></pre> <pre><code>[Desktop Entry]\nVersion=1.0\nName=VLC media player\nName[fr]=Lecteur multim\u00c3\u00a9dia VLC\nComment=Read, capture, broadcast your multimedia streams\nComment[fr]=Lire, capturer, diffuser vos flux multimedia\nName[sv]=Mediaspelaren VLC\nComment[sv]=Allm\u00c3\u00a4n uppspelare av film och musik\nName[ru]=\u00d0\u0153\u00d0\u00b5\u00d0\u00b4\u00d0\u00b8\u00d0\u00b0\u00d0\u00bf\u00d0\u00bb\u00d0\u00b5\u00d0\u00b5\u00d1\u20ac VLC\nComment[ru]=\u00d0\u00a3\u00d0\u00bd\u00d0\u00b8\u00d0\u00b2\u00d0\u00b5\u00d1\u20ac\u00d1&amp;#129;\u00d0\u00b0\u00d0\u00bb\u00d1\u0152\u00d0\u00bd\u00d1\u2039\u00d0\u00b9 \u00d0\u00bf\u00d1\u20ac\u00d0\u00be\u00d0\u00b8\u00d0\u00b3\u00d1\u20ac\u00d1\u2039\u00d0\u00b2\u00d0\u00b0\u00d1\u201a\u00d0\u00b5\u00d0\u00bb\u00d1\u0152 \u00d0\u00b2\u00d0\u00b8\u00d0\u00b4\u00d0\u00b5\u00d0\u00be \u00d0\u00b8 \u00d0\u00b0\u00d1\u0192\u00d0\u00b4\u00d0\u00b8\u00d0\u00be\nExec=vlc\nIcon=vlc.png\n\nTerminal=false\nType=Application\nCategories=AudioVideo;Player;\nMimeType=video/dv;video/mpeg;video/x-mpeg;video/msvideo;video/quicktime;video/x-anim;video/x-avi;video/x-ms-asf;video/x-ms-wmv;video/x-msvideo;video/x-nsv;video/x-flc;video/x-fli;application/ogg;application/x-ogg;application/x-matroska;audio/x-mp3;audio/x-mpeg;audio/mpeg;audio/x-wav;audio/x-mpegurl;audio/x-scpls;audio/x-m4a;audio/x-ms-asf;audio/x-ms-asx;audio/x-ms-wax;application/vnd.rn-realmedia;audio/x-real-audio;audio/x-pn-realaudio;application/x-flac;audio/x-flac;application/x-shockwave-flash;misc/ultravox;audio/vnd.rn-realaudio;audio/x-pn-aiff;audio/x-pn-au;audio/x-pn-wav;audio/x-pn-windows-acm;image/vnd.rn-realpix;video/vnd.rn-realvideo;audio/x-pn-realaudio-plugin;application/x-extension-mp4;audio/mp4;video/mp4;video/mp4v-es;x-content/video-vcd;x-content/video-svcd;x-content/video-dvd;x-content/audio-cdda;x-content/audio-player;\nX-Desktop-File-Install-Version=0.13\n</code></pre> <p>The next step is opening up the file /home/user/.config/xfce4/desktop/group-app.xml. Go through the file, you\u2019ll see it\u2019ll make sense. Now, I assume that you want VLC to be placed under the category Fun. Open the group-app.xml-file, and search for:</p> <pre><code>1\n</code></pre> <pre><code>7\n</code></pre> <p>Somewhere in between there, add the following:</p> <pre><code>1\n</code></pre> <pre><code>/usr/share/applications/vlc.desktop\n</code></pre> <p>Save and close the file, reboot, and your VLC-icon should be there. :) If you want your VLC-icon to be visible, like I did on my desktop, swap the sequence=\u201d6\u201d with a more appropriate number (like 1-3), just make sure that two objects in the file don\u2019t have the same sequence number.</p> <p>Or even easier \u2013 click and drag the icon you want displayed into one of the first three slots. :)</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#the-right-resolution-with-an-external-monitor","title":"The right resolution with an external monitor","text":"<p>If you\u2019ve plugged in an external monitor, you\u2019ve probably noticed that 1024\u00d7600 doesn\u2019t look too good on a 17\u2033. There is a remedy for this though, but you need to modify your xorg.conf-file.</p> <p>First, take a backup of your current xorg.conf, in case something goes wrong:</p> <pre><code>1\n</code></pre> <pre><code># cp /etc/X11/xorg.conf /root/\n</code></pre> <p>Now open the file:</p> <pre><code>1\n</code></pre> <pre><code># mousepad /etc/X11/xorg.conf\n</code></pre> <p>Find the Screen-section \u2013 there should be a line there that says:</p> <pre><code>1\n</code></pre> <pre><code>Virtual 1024 600\n</code></pre> <p>Change it to:</p> <pre><code>1\n</code></pre> <pre><code>Virtual 2304 1024\n</code></pre> <p>Also add the resolutions \u201c1280\u00d71024\u201d and \u201c1024\u00d7768\u201d to the Modes-line above. This will make sure that the virtual screen space is big enough to accomodate a 1280\u00d71024 screen beside a 1024\u00d7600.</p> <p>So that part of your xorg.conf should end up looking like this:</p> <pre><code>1\n2\n</code></pre> <pre><code>Modes \"1280x1024\" \"1024x768\" \"1024x600\" \"800x600\" \"640x480\"\nVirtual 2304 1024\n</code></pre> <p>Save and close the file, and reboot to activate the virtual screen size.</p> <p>Now, to be able to clone your desktop to the external monitor, press Fn-F5. If you however would like to use BOTH your Acer One Aspire, and your external monitor, open a file named dual_desktop.sh and put the following in it:</p> <pre><code>1\n2\n3\n</code></pre> <pre><code>#!/bin/bash\nxrandr -s 1280x1024\nxrandr --output LVDS --left-of VGA --auto\n</code></pre> <p>Save, close, and do a chmod +x on it:</p> <pre><code>1\n</code></pre> <pre><code>$ chmod +x dual_desktop.sh\n</code></pre> <p>Press Fn-F5 till both your Acer Aspire One and the external monitor are active. Then run the script:</p> <pre><code>1\n</code></pre> <pre><code>$ ./dual_desktop.sh\n</code></pre> <p>Now when you run it, you should be able to drag applications between your Acer Aspire One, and your external monitor. :) Just change -\u2013left-of to -\u2013right-of if your Acer Aspire One is on that side. Change the resolution in the script to something else as well if you should need it. If you don\u2019t feel like doing it though, here\u2019s a script I\u2019ve made that\u2019s a little more advanced:</p> <pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n</code></pre> <pre><code>#!/bin/bash\n#\n## Script to extend your Acer Aspire One (AA1) desktop\n## Jorge Barrera Grandon \n#\n#\n## Press Fn-F5 on your AA1 till both monitors are \n## active then run this script. Usage is like so:\n## ./dual_desktop.sh  \n##\n## Example: ./dual_desktop.sh 800x600 left\n\nXRANDR=`which xrandr`\n\nif [ \"$1\" = \"1280x1024\" ] || [ \"$1\" = \"1024x768\" ] || [ \"$1\" = \"800x600\" ] &amp;&amp; [ \"$2\" = \"left\" ] || [ \"$2\" = \"right\" ]; then\n\n    echo \"Setting resolution to $1 and alignment to $2.\"\n    $XRANDR -s $1\n    $XRANDR --output LVDS --$2-of VGA --auto\n\nelse\n    $XRANDR -s 1280x1024\n    $XRANDR --output LVDS --left-of VGA --auto\n    echo \"No or invalid resolution given - setting resolution to 1280x1024 and alignment to left.\"\n\nfi\n</code></pre> <p>If you want a resolution of 800\u00d7600 on your external monitor, and your Acer Aspire One is on your right-side, run the script like so:</p> <pre><code>1\n</code></pre> <pre><code>$ ./dual_desktop.sh 800x600 right\n</code></pre>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#managing-the-noisy-fan-speed","title":"Managing the (noisy) fan speed","text":"<p>At first my Acer Aspire One was working just fine. I never had any problems with it, nor the fan. But of late the thing has been making such a sound that it\u2019s driving me nuts. Solution, solution, where art thou solution?! Well, there is a solution. :)</p> <p>Download the scripts http://jorge.fbarr.net/files/acer_ec.pl and http://jorge.fbarr.net/files/acerfand. Once downloaded, do a chmod +x on them, and place them in /usr/local/bin/. Add an entry in /etc/rc.d/rc.local to start acerfand, and create the configuration-file needed. So:</p> <pre><code>1\n2\n3\n4\n5\n</code></pre> <pre><code>$ sudo su -\n# wget http://jorge.ulver.no/files/{acer_ec.pl,acerfand}\n# chmod +x acer*\n# mv acer* /usr/local/bin/\n# echo \"/usr/local/bin/acerfand\" &gt;&gt; /etc/rc.d/rc.local\n</code></pre> <p>Then create the file acerfand.conf in /etc/ with the following options:</p> <pre><code>1\n2\n3\n</code></pre> <pre><code>INTERVAL=5\nFANOFF=55\nFANAUTO=65\n</code></pre> <ul> <li>INTERVAL is the polling interval in seconds.</li> <li>FANOFF is the temperature in Celsius at or below which to turn the fan off, if it\u2019s currently on auto.</li> <li>FANAUTO is the temperature in Celsius at or above which to turn the fan to auto, if it\u2019s currently off.</li> </ul> <p>Righty, so when the default temperature reaches 55C, the fan works again. According to Intel, the Atom Chip could work at 99C. But I doubt anyone is willing to risk it. Heck, I know I don\u2019t. Simply modify the values in acerfand.conf to your own liking. Enjoy!</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#usb-recovery-image","title":"USB Recovery Image","text":"<p>I\u2019ve taken the liberty of uploading the image to a private server.</p> <p>You can find the new and improved (not really ;) image at http://jorge.fbarr.net/files/aa1_usb_recovery_image.gz.</p> <p>Now, the instructions.</p> <p>I had to use an external USB drive for this, as I don\u2019t have a USB-pen that\u2019s above 125MB, but it works just the same. Besides the Acer One Aspire, I\u2019ve another machine with Fedora 9 on it. Once the external drive was plugged in, this is what dmesg came up with:</p> <pre><code>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n</code></pre> <pre><code>usb 2-2.1: New USB device found, idVendor=1058, idProduct=0702\nusb 2-2.1: New USB device strings: Mfr=1, Product=2, SerialNumber=3\nusb 2-2.1: Product: External HDD\nusb 2-2.1: Manufacturer: Western Digital\nusb-storage: device found at 14\nusb-storage: waiting for device to settle before scanning\nusb-storage: device scan complete\nscsi 16:0:0:0: Direct-Access     WD       1200BEVExternal  1.02 PQ: 0 ANSI: 0\nsd 16:0:0:0: [sdb] Write Protect is off\nsd 16:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 16:0:0:0: [sdb] Assuming drive cache: write through\nsd 16:0:0:0: [sdb] Write Protect is off\nsd 16:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 16:0:0:0: [sdb] Assuming drive cache: write through\nsdb: sdb1\nsd 16:0:0:0: [sdb] Attached SCSI disk\nsd 16:0:0:0: Attached scsi generic sg2 type 0\n</code></pre> <p>So now we know that the drive has been assigned /dev/sdb. Let\u2019s make the recovery usb drive then.</p> <pre><code>1\n</code></pre> <pre><code># zcat aa1_usb_recovery_image.gz &gt; /dev/sdb\n</code></pre> <p>Notice that it\u2019s /dev/sdb and NOT /dev/sdb1, as we\u2019re overwriting the whole disk, and not just a partition of the disk.</p> <p>That did the trick for me. Once the command was completed, remount the external drive and you\u2019ll see that the new contents is there. Unmount it again, plug it into your Acer Aspire One, boot the machine, and press F12 during boot to select the USB-pen/external harddrive as the device to boot. You should be on your way towards recovery. :)</p> <p>If someone happens to know how to do this in Windows, please give me a shout so that I can add it to this post. :)</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#improve-read-and-write-performance","title":"Improve read and write performance","text":"<p>According to this post I found, concerning SSD, the following will greatly increase read and write performance on your SSD-disk (which happens to be the type of disk the Acer Aspire One has, the Linux-version anyway).</p> <p>Simply do the following:</p> <pre><code>1\n2\n</code></pre> <pre><code>$ sudo su -\n# mousepad /boot/grub/grub.conf\n</code></pre> <p>Now, add the elevator=noop option to the kernel-line, making this line:</p> <pre><code>1\n</code></pre> <pre><code>kernel /boot/bzImage ro root=LABEL=linpus vga=0x311 splash=silent loglevel=1 console=tty1 quiet nolapic_timer\n</code></pre> <p>look like this:</p> <pre><code>1\n</code></pre> <pre><code>kernel /boot/bzImage ro root=LABEL=linpus vga=0x311 splash=silent loglevel=1 console=tty1 quiet nolapic_timer elevator=noop\n</code></pre> <p>Save the file, close it, and reboot. Some have reported that there\u2019s an increase in writespeeds going from 7.1MB/s to 9.1MB/s by adding this change. If it works or not, well, you can be the judge of that. :)</p> <p>Another thing you can do to improve performance, is disabling Firefox\u2019s cache. With IO (Input/Output) being the real bottleneck on the Acer Aspire One, disabling writing to the disk might be a good idea. When a page is loaded, Firefox will cache it into the hard disk so that it doesn\u2019t have to be downloaded again for redisplaying. If you browse enough sites, you\u2019ll experience that Firefox might freeze for a few seconds or so.</p> <pre><code>1\n</code></pre> <pre><code>about:config\n</code></pre> <p>Search for browser.cache.disk.enabled, and if set to True, doubleclick it to set it to False.</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#wallpaper-for-the-acer-aspire-one","title":"Wallpaper for the Acer Aspire One","text":"<p>I found the following wallpaper in this post, but I thought to post them here as well for easy access. The regular wallpaper on your AA1-desktop can become quite a drag with time. So why not spice it up a bit with some color?</p> <p>The way to change the wallpaper is like so. Right-click on your desktop, select Settings then click on Desktop Settings. Next to File:, just enter the new path of your wallpaper. :)</p> <p>Blue Red Green</p> <p>Purple Royale Sepia</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#troubleshooting","title":"Troubleshooting","text":""},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#vlc","title":"VLC","text":"<p>The Fedoraproject-pages say the following:</p> <p>The Fedora Project recently re-signed all of its packages with a new key. Background details regarding the key change are found here. This page exists to aide users in the transition to the newly signed content and further updates for Fedora 8 and Fedora 9.</p> <p>I assume many (if not all) of you have by now experienced the following problem when installing VLC:</p> <pre><code>1\n2\n3\n</code></pre> <pre><code>Error: Missing Dependency: libpulse.so.0(PULSE_0) is needed by package vlc\nError: Missing Dependency: libopendaap.so.0 is needed by package vlc-core\nError: Missing Dependency: libdvdnav.so.4 is needed by package vlc-core\n</code></pre> <p>The solution to this is to install the new key distributed by fedora. This is how you do it.</p> <p>Download, verify and install this RPM-file:</p> <pre><code>1\n2\n</code></pre> <pre><code>$ sudo su -\n# wget http://kojipkgs.fedoraproject.org/packages/fedora-release/8/6.transition/data/signed/4f2a6fd2/noarch/fedora-release-8-6.transition.noarch.rpm\n</code></pre> <p>Now verify that the package sha1sum matches 9a684ad36f4c1f49df7c569d5990d00f7da2cb9c:</p> <pre><code>1\n</code></pre> <pre><code># sha1sum fedora-release-8-6.transition.noarch.rpm\n</code></pre> <p>Once that is verified, install the package through rpm:</p> <pre><code>1\n</code></pre> <pre><code># rpm -Uvh fedora-release-8-6.transition.noarch.rpm\n</code></pre> <p>Now import the new GPG-key like so:</p> <pre><code>1\n</code></pre> <pre><code># rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-8-and-9\n</code></pre> <p>And that should be it. You should now be able to download and install VLC (among other things) as normal. :)</p>"},{"location":"2008/08/06/acer-aspire-one-tips-and-tricks/#ssh-agent","title":"ssh-agent","text":"<p>ssh-agent is quite a nifty thing to have running in the background. I thought that adding some lines of code to your .bashrc or .bash_profile would do the trick. But apparently not. The code I added was this:</p> <pre><code>1\n2\n3\n4\n5\n6\n7\n</code></pre> <pre><code>SSHAGENT=\"/usr/bin/ssh-agent\"\nSSHAGENTARGS=\"-s\"\n\nif [ -z \"$SSH_AUTH_SOCK\" -a -x \"$SSHAGENT\" ]; then\n  eval `$SSHAGENT $SSHAGENTARGS`\n    trap \"kill $SSH_AGENT_PID\" 0\nfi\n</code></pre> <p>Adding it to either file didn\u2019t work, because upon doing an ssh-add, I got the following error:</p> <pre><code>1\n2\n</code></pre> <pre><code>$ ssh-add\nCould not open a connection to your authentication agent\n</code></pre> <p>And this happened even if ssh-agent was running:</p> <pre><code>1\n2\n</code></pre> <pre><code>$ ps aux | grep ssh-agent\nuser     2709  0.0  0.0   6332   604 ?        Ss   Aug28   0:00 /usr/bin/ssh-agent -s\n</code></pre> <p>The solution to this isn\u2019t very intuitive. Open the file /etc/xdg/xfce4/xinitrc, and remove the comment from the following lines:</p> <p>Line 72 \u2013 77</p> <pre><code>1\n2\n3\n4\n5\n6\n</code></pre> <pre><code>#sshagent=`which ssh-agent`\nkill_sshagent=0\n#if test -z \"$SSH_AGENT_PID\" -a \"$sshagent\" -a \"x$sshagent\" != \"xno\"; then\n#   eval `$sshagent -s`\n#   kill_sshagent=1\n#fi\n</code></pre> <p>Line 100 \u2013 102</p> <pre><code>1\n2\n3\n</code></pre> <pre><code>#       if test $kill_sshagent -eq 1; then\n#           eval `$sshagent -k`\n#       fi\n</code></pre> <p>When done, save and close the file, and reboot. ssh-add should now be working properly. :)</p>"},{"location":"2010/09/14/acer-aspire-one-usb-rescue-image/","title":"Acer Aspire One USB rescue image","text":"<p>A lot of people have been asking about where to find a rescue USB image for the Acer Aspire One. A long time ago someone with the nick gouki volunteered to host the file on a private server, but unfortunately, this is not so anymore.</p> <p>I have placed the file on a new server, so you can now find it at http://jorge.fbarr.net/files/aa1_usb_recovery_image.gz. Right on the link and select Save link as to download it.</p> <p>As for instructions on how to use it, I\u2019ll repost a snippet of what I\u2019ve written previously in the article Acer Aspire One Tips and Tricks: _ I had to use an external USB drive for this, as I don\u2019t have a USB-pen that\u2019s above 125MB, but it works just the same. Besides the Acer One Aspire, I\u2019ve another machine with Fedora 9 on it. Once the external drive was plugged in, this is what dmesg came up with:</p> <pre><code>usb 2-2.1: New USB device found, idVendor=1058, idProduct=0702\nusb 2-2.1: New USB device strings: Mfr=1, Product=2, SerialNumber=3\nusb 2-2.1: Product: External HDD\nusb 2-2.1: Manufacturer: Western Digital\nusb-storage: device found at 14\nusb-storage: waiting for device to settle before scanning\nusb-storage: device scan complete\nscsi 16:0:0:0: Direct-Access     WD       1200BEVExternal  1.02 PQ: 0 ANSI: 0\nsd 16:0:0:0: [sdb] Write Protect is off\nsd 16:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 16:0:0:0: [sdb] Assuming drive cache: write through\nsd 16:0:0:0: [sdb] Write Protect is off\nsd 16:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 16:0:0:0: [sdb] Assuming drive cache: write through\nsdb: sdb1\nsd 16:0:0:0: [sdb] Attached SCSI disk\nsd 16:0:0:0: Attached scsi generic sg2 type 0\n</code></pre> <p>So now we know that the drive has been assigned /dev/sdb. Let\u2019s make the recovery usb drive then.</p> <pre><code>zcat aa1_usb_recovery_image.gz &gt; /dev/sdb\n</code></pre> <p>Notice that it\u2019s /dev/sdb and NOT /dev/sdb1, as we\u2019re overwriting the whole disk, and not just a partition of the disk.</p> <p>That did the trick for me. Once the command was completed, remount the external drive and you\u2019ll see that the new contents is there. Unmount it again, plug it into your Acer Aspire One, boot the machine, and press F12 during boot to select the USB-pen/external harddrive as the device to boot. You should be on your way towards recovery. :)</p> <p>If someone happens to know how to do this in Windows, please give me a shout so that I can add it to this post. :)</p> <p>A big thanks to Mithrandir for providing the file. :)</p>"},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/","title":"Ansible EX294 practice exam and solutions","text":"<p>I am hopefully going to take the second half of my RHCE exam this year, which is EX294. I have taken inspiration from  and , and have decided to provide my own answers and explanations as I myself prepare for the exam.</p> <p>I\u2019ve also only used 4 VM\u2019s in total, 1 controller and 3 nodes, and not 4 nodes as the practice exam suggests.</p> <p>Here are the tips that I\u2019ve found helpful so far:</p> <ul> <li>ansible and ansible-playbook share most of it\u2019s syntax. So if it\u2019s -b to use \u2014become on ansible-playbook, then it\u2019s most likely the same with ansible.</li> <li>The most important tip of all \u2013 use ansible-doc! ansible-doc &lt;module&gt; (like ansible-doc user) will not only give you a list of attributes that you can use, but if you see almost at the bottom of the page, there are examples!</li> <li>Make sure that all of the services that are supposed to come back up at boot, do so! Make the services persistent, if the exam says so!</li> <li>Remember that if you enable a service, that it doesn\u2019t mean that the change is immediate! Remember to check the ansible-doc page for the module if there is an immediate attribute that you can use.</li> <li>Use the command ansible all -m setup after you have set up your inventory to see all of the variables gathered by the facts module. They might come in handy!</li> </ul>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-1-ansible-installation-and-configuration","title":"Task 1 \u2013 Ansible installation and configuration","text":"<p>Remember that the default location for the original ansible.cfg is /etc/ansible/ansible.cfg, which you can copy over to your local folder (in this case it\u2019s /home/automation/plays/).</p>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#ansiblecfg","title":"ansible.cfg","text":"<p>These are the fields that I\u2019ve changed in my own ansible.cfg file:</p> <pre><code>inventory      = /home/automation/plays/inventory\nforks          = 10\nroles_path    = /home/automation/plays/roles/\nhost_key_checking = False\nremote_user = automation\nbecome=False\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#inventory","title":"inventory","text":"<pre><code>[proxy]\nnode1           ansible_host=ip.of.the.host\n\n[webserver]\nnode2           ansible_host=ip.of.the.host\n\n[database]\nnode3           ansible_host=ip.of.the.host\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-2-ad-hoc-commands","title":"Task 2 \u2013 Ad-Hoc commands","text":"<p>What they mean by the use of \u201cAd-Hoc\u201d is your typical ansible one liners. Which is to actually use the command ansible. I\u2019ve placed the following ansible one liners in a file named adhoc. Remember to change the permissions on the file (chmod +x adhoc) before you run it.</p>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#adhoc","title":"adhoc","text":"<p>In this particular case I\u2019m connecting as the user cloud_user, which will then use sudo to perform the commands.</p> <pre><code>#!/bin/bash\n\nansible -i inventory all -u cloud_user -b -kK -m user -a \\\n  \"name=automation\" --limit node3\n\nansible -i inventory all -u cloud_user -b -kK -m authorized_key -a \\\n  \"user=automation \\\n  state=present \\\n  exclusive=True \\\n  key=\\\"ssh-ed25519 AAAADNzaCElZDI1NTE5AAAAIA03SY0CuxcuTSw0gEcNZg8TMLezwjsxnndmn0i1 automation@controller\\\"\" --limit node3\n\nansible -i inventory all -u cloud_user -b -kK -m lineinfile -a \\\n  \"path=/etc/sudoers \\\n  line='automation ALL=(ALL) NOPASSWD: ALL' \\\n  validate=\\\"/usr/sbin/visudo -cf %s\\\"\" --limit node3\n</code></pre> <p>The above is exactly the same as the playbook below (which I have named create_automation_user.yml):</p> <pre><code>---\n\n- hosts: all\n  become: yes\n  tasks:\n\n    - name: Creating the user automation\n      user:\n        name: automation\n\n    - name: Add SSH-key to authorized_keys\n      authorized_key:\n        user: automation\n        state: present\n        exclusive: True\n        key: \"{{ item }}\"\n      with_file:\n        - ~/.ssh/id_ed25519.pub\n\n    - name: Add user to sudoers file\n      lineinfile:\n         path: /etc/sudoers\n         line: 'automation ALL=(ALL) NOPASSWD: ALL'\n         validate: /usr/sbin/visudo -cf %s\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-3-file-content","title":"Task 3 \u2013 File content","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#motdyml","title":"motd.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n\n  tasks:\n\n    - name: Change to HAproxy-motd\n      copy:\n        content: \"Welcome to HAProxy server\"\n        dest: /etc/motd\n      when: \"'proxy' in group_names\"\n\n    - name: Change to Apache-motd\n      copy:\n        content: \"Welcome to Apache server\"\n        dest: /etc/motd\n      when: \"'webserver' in group_names\"\n\n    - name: Change to MySQL-motd\n      copy:\n        content: \"Welcome to MySQL server\"\n        dest: /etc/motd\n      when: \"'database' in group_names\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-4-configure-ssh-server","title":"Task 4 \u2013 Configure SSH server","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#sshdyml","title":"sshd.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n\n  tasks:\n\n    - name: Set Banner to /etc/motd\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regex: \"^Banner\"\n        line: \"Banner /etc/motd\"\n\n    - name: Disable X11Forwarding\n      lineinfile:\n         path: /etc/ssh/sshd_config\n         regex: \"^X11Forwarding\"\n         line: \"X11Forwarding no\"\n\n\n    - name: Set MaxAuthTries to 3\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regex: \"^MaxAuthTries\"\n        line: \"MaxAuthTries 3\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-5-ansible-vault","title":"Task 5 \u2013 Ansible vault","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#secretyml","title":"secret.yml","text":"<p>Use the following command to create the ansible vault file named secret.yml:</p> <pre><code>ansible-vault create secret.yml\n</code></pre> <p>This file should contain:</p> <pre><code>user_password: devops\ndatabase_password: devops\n</code></pre> <p>Use the password devops to protect the file you create.</p>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#vault_key","title":"vault_key","text":"<p>Create a regular file named vault_key that contains the following:</p> <pre><code>devops\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-6-users-and-groups","title":"Task 6 \u2013 Users and groups","text":"<p>This is the most difficult task I\u2019ve encountered so far.</p>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#user_listyml","title":"user_list.yml","text":"<pre><code>---\n\nusers:\n  - username: alice\n  - username: vincent\n  - username: sandy\n  - username: patrick\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#usersyml","title":"users.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n  vars_files:\n    - ./user_list.yml\n    - ./secret.yml\n\n  tasks:\n\n    - name: Add users to the webserver hosts if UID starts with 1\n      user:\n          name: \"{{ item.username }}\"\n          shell: /bin/bash\n          groups: wheel\n          append: yes\n          password: \"{{ user_password | password_hash('sha512') }}\"\n      with_items: \"{{ users }}\"\n      when:\n        - \"'webserver' in group_names\"\n        - \"item.uid|string|first == '1'\"\n\n    - name: Add users to the database hosts if UID starts with 2\n      user:\n          name: \"{{ item.username }}\"\n          shell: /bin/bash\n          groups: wheel\n          append: yes\n          password: \"{{ user_password | password_hash('sha512') }}\"\n      with_items: \"{{ users }}\"\n      when:\n        - \"'database' in group_names\"\n        - \"item.uid|string|first == '2'\"\n\n    - name: Create SSH directory for users on webserver hosts\n      file:\n        path: \"/home/{{ item.username }}/.ssh/\"\n        state: directory\n        owner: \"{{ item.username }}\"\n        group: \"{{ item.username }}\"\n        mode: \"0700\"\n      with_items: \"{{ users }}\"\n      when:\n        - \"'webserver' in group_names\"\n        - \"item.uid|string|first == '1'\"\n\n    - name: Create SSH directory for users on database hosts\n      file:\n        path: \"/home/{{ item.username }}/.ssh/\"\n        state: directory\n        owner: \"{{ item.username }}\"\n        group: \"{{ item.username }}\"\n        mode: \"0700\"\n      with_items: \"{{ users }}\"\n      when:\n        - \"'database' in group_names\"\n        - \"item.uid|string|first == '2'\"\n\n    - name: Copy private SSH-key to users on the webserver hosts\n      copy:\n        src: /home/automation/.ssh/id_ed25519\n        dest: \"/home/{{ item.username }}/.ssh/id_ed25519\"\n        owner: \"{{ item.username }}\"\n        group: \"{{ item.username }}\"\n        mode: \"0600\"\n      with_items: \"{{ users }}\"\n      when:\n        - \"'webserver' in group_names\"\n        - \"item.uid|string|first == '1'\"\n\n    - name: Copy private SSH-key to users on the database hosts\n      copy:\n        src: /home/automation/.ssh/id_ed25519\n        dest: \"/home/{{ item.username }}/.ssh/id_ed25519\"\n        owner: \"{{ item.username }}\"\n        group: \"{{ item.username }}\"\n        mode: \"0600\"\n      with_items: \"{{ users }}\"\n      when:\n        - \"'database' in group_names\"\n        - \"item.uid|string|first == '2'\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-7-scheduled-tasks","title":"Task 7 \u2013 Scheduled tasks","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#regular_tasksyml","title":"regular_tasks.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n\n  tasks:\n\n    - name: Create crontab-record on proxy hosts\n      cron:\n        name: \"Append the output of 'date' to /var/log/time.log\"\n        minute: \"0\"\n        job: \"date &gt;&gt; /var/log/time.log\"\n      when:\n        - \"'proxy' in group_names\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-8-software-repositories","title":"Task 8 \u2013 Software repositories","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#repositoryyml","title":"repository.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n\n  tasks:\n\n    - name: Add yum repository on database hosts\n      yum_repository:\n        name: \"mysql80-community\"\n        description: \"MySQL 8.0 YUM Repo\"\n        baseurl: \"http://repo.mysql.com/yum/mysql-8.0-community/el/8/x86_64/\"\n        gpgkey: \"http://repo.mysql.com/RPM-GPG-KEY-mysql\"\n        gpgcheck: yes\n        enabled: yes\n      when:\n        - \"'database' in group_names\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-9-create-and-work-with-roles","title":"Task 9 \u2013 Create and work with roles","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#mysqlyml","title":"mysql.yml","text":"<pre><code>---\n\n- hosts: database\n  become: yes\n  vars_files:\n    - secret.yml\n  roles:\n    - sample-mysql\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#sample-mysqltasksmainyml","title":"sample-mysql/tasks/main.yml","text":"<p>You can create an empty role, named sample-mysql, by running the commands:</p> <pre><code>cd /home/automation/plays/roles/\nansible-galaxy init sample-mysql\n</code></pre> <p>I decided to go with the package mysql-server instead of the mysql-community-server that is listed in the Lisenet exam. The contents of the file sample-mysql/tasks/main.yml:</p> <pre><code>---\n# tasks file for sample-mysql\n\n- name: Ensure partition is created\n  parted:\n    device: \"/dev/nvme1n1\"\n    number: 1\n    state: present\n\n- name: Ensure volumegroup exists\n  lvg:\n    vg: \"vg_database\"\n    pvs: \"/dev/nvme1n1p1\"\n\n- name: Create logical volume\n  lvol:\n    vg: \"vg_database\"\n    lv: \"lv_mysql\"\n    size: \"512\"\n\n- name: Create an XFS filesystem\n  filesystem:\n    dev: \"/dev/vg_database/lv_mysql\"\n\n- name: Mount lv_mysql volume on /mnt/mysql_backups\n  mount:\n    path: \"/mnt/mysql_backups\"\n    src: \"/dev/vg_database/lv_mysql\"\n    state: present\n\n- name: Ensure mysql-server and firewalld are installed\n  yum:\n    name: \"{{ packages }}\"\n    state: latest\n  vars:\n    packages:\n      - mysql-server\n      - firewalld\n\n- name: Open port 3306 in the firewall\n  firewalld:\n    port: \"3306/tcp\"\n    permanent: yes\n    immediate: yes\n    state: enabled\n\n- name: Ensure that service mysqld and firewalld are enabled and started\n  service:\n    name: \"{{ item }}\"\n    state: started\n    enabled: yes\n  loop:\n    - mysqld\n    - firewalld\n\n- name: Set mysql root password\n  mysql_user:\n    name: root\n    password: \"{{ database_password }}\"\n    state: present\n\n- name: Apply my.cnf from a template\n  template:\n    src: my.cnf.j2\n    dest: /etc/my.cnf\n    owner: root\n    group: root\n    mode: 0644\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#sample-mysqltemplatesmycnfj2","title":"sample-mysql/templates/my.cnf.j2","text":"<pre><code>[mysqld]\nbind_address = {{ ansible_default_ipv4.address }}\nskip_name_resolve\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\n\nsymbolic-links=0\nsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES\n\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-10-create-and-work-with-roles-some-more","title":"Task 10 \u2013 Create and work with roles (some more)","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#apacheyml","title":"apache.yml","text":"<pre><code>---\n\n- hosts: webserver\n  become: yes\n  roles:\n    - sample-apache\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#sample-apachehandlersmainyml","title":"sample-apache/handlers/main.yml","text":"<p>You can create an empty role, named sample-apache, by running the commands:</p> <pre><code>cd /home/automation/plays/roles/\nansible-galaxy init sample-apache\n</code></pre> <p>As for the contents of the file sample-apache/handlers/main.yml:</p> <pre><code>---\n# handlers file for sample-apache\n\n- name: restart_apache\n  service:\n    name: httpd\n    state: restarted\n    enabled: yes\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#sample-apachetasksmainyml","title":"sample-apache/tasks/main.yml","text":"<pre><code>---\n# tasks file for sample-apache\n\n- name: Ensure the packages httpd, mod_ssl and php are installed\n  yum:\n    name: ['httpd', 'mod_ssl', 'php']\n    state: latest\n\n- name: Ensure that the service httpd is enabled\n  service:\n    name: httpd\n    state: started\n    enabled: yes\n\n- name: Ensure the firewall ports 80 and 443 are open\n  firewalld:\n    service: \"{{ item }}\"\n    permanent: yes\n    immediate: yes\n    state: enabled\n  with_items:\n    - http\n    - https\n\n- name: Create index.html from template\n  template:\n    src: index.html.j2\n    dest: /var/www/html/index.html\n  notify: restart_apache\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-11-download-roles-from-ansible-galaxy-and-use-them","title":"Task 11: Download roles from Ansible Galaxy and use them","text":"<p>Install the role named geerlingguy.haproxy by running these commands:</p> <pre><code>cd /home/automation/plays/\nansible-galaxy install geerlingguy.haproxy\n</code></pre> <p>It will install the role in the roles-location specified in ansible.cfg. In this case, /home/automation/plays/roles/.</p>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#haproxyyml","title":"haproxy.yml","text":"<pre><code>---\n\n- name: Configuring HAProxy\n  hosts: proxy\n  become: yes\n  roles:\n    - geerlingguy.haproxy\n  vars:\n    haproxy_frontend_port: \"80\"\n    haproxy_frontend_mode: \"http\"\n    haproxy_backend_balance_method: \"roundrobin\"\n    haproxy_backend_servers:\n      - name: webserver1\n        address: ip.of.webserver1:80\n      - name: webserver2\n        address: ip.of.webserver2:80\n  tasks:\n     - name: Ensure firewalld is installed\n       yum:\n         name: firewalld\n         state: latest\n\n     - name: Ensure firewalld is enabled and running\n       service:\n         name: firewalld\n         state: started\n         enabled: yes\n\n     - name: Ensure firewalld has port 80 opened\n       firewalld:\n         service: http\n         permanent: yes\n         immediate: yes\n         state: enabled\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-12-security","title":"Task 12: Security","text":"<p>We need to make sure that the package named rhel-system-roles is installed on the controller itself (not the nodes!). So run:</p> <pre><code>yum install rhel-system-roles\n</code></pre> <p>This will install the roles to the folder /usr/share/ansible/roles/.</p>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#ansiblecfg_1","title":"ansible.cfg","text":"<p>Because the role is installed in a different location than we have specified in our ansible.cfg, we need to add this path. So the following line in ansible.cfg:</p> <pre><code>roles_path = /home/automation/plays/roles/\n</code></pre> <p>becomes this:</p> <pre><code>roles_path = /home/automation/plays/roles/:/usr/share/ansible/roles/\n</code></pre> <p>If you look in the folder /usr/share/ansible/roles/ now, you\u2019ll see that there is a symlink named linux-system-roles.selinux, which points to rhel-system-roles.selinux. We will be using the symlink in the next configuration file.</p>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#selinuxyml","title":"selinux.yml","text":"<pre><code>---\n\n- name: Enable the boolean httpd_can_network_connect\n  hosts: webserver\n  become: yes\n  vars:\n    selinux_booleans:\n      - name: httpd_can_network_connect\n        state: on\n        persistent: yes\n  roles:\n    - linux-system-roles.selinux\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-13-use-conditionals-to-control-play-execution","title":"Task 13: Use conditionals to control play execution","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#sysctlyml","title":"sysctl.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n\n  tasks:\n    - name: Set vm.swappiness to 10 if RAM &gt; 2GB\n      sysctl:\n        name: vm.swappiness\n        value: \"10\"\n        state: present\n      when: \"ansible_memtotal_mb &gt;= 2048\"\n\n    - name: Report not enough memory\n      fail:\n        msg: \"Server memory less than 2048MB. RAM size {{ ansible_memtotal_mb }}\"\n      when: \"ansible_memtotal_mb &lt; 2048\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-14-use-archiving","title":"Task 14 \u2013 Use archiving","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#archiveyml","title":"archive.yml","text":"<pre><code>---\n\n- hosts: database\n  become: yes\n\n  tasks:\n    - name: Create the file database_list.txt\n      copy:\n        content: \"dev,test,qa,prod\"\n        dest: \"/mnt/mysql_backups/database_list.txt\"\n\n    - name: Compress the file with gz\n      archive:\n        path: \"/mnt/mysql_backups/database_list.txt\"\n        dest: \"/mnt/mysql_backups/archive.gz\"\n        format: gz\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-15-work-with-ansible-facts","title":"Task 15 \u2013 Work with Ansible facts","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#factsyml","title":"facts.yml","text":"<pre><code>---\n\n- hosts: database\n  become: yes\n\n  tasks:\n    - name: Ensure the directory exists\n      file:\n        path: \"/etc/ansible/facts.d/\"\n        state: directory\n        recurse: yes\n\n    - name: Copy content to file in new directory\n      copy:\n        content: \"[sample_exam]\\nserver_role=mysql\\n\"\n        dest: \"/etc/ansible/facts.d/custom.fact\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-16-software-packages","title":"Task 16 \u2013 Software packages","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#packagesyml","title":"packages.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n\n  tasks:\n    - name: Install packages on proxy hosts\n      yum:\n        name: ['tcpdump', 'mailx']\n        state: latest\n      when: \"'proxy' in group_names\"\n\n    - name: Install packages on database hosts\n      yum:\n        name: ['lsof', 'mailx']\n        state: latest\n      when: \"'database' in group_names\"\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-17-services","title":"Task 17 \u2013 Services","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#targetyml","title":"target.yml","text":"<pre><code>---\n\n- hosts: webserver\n  become: yes\n\n  tasks:\n    - name: Set default target to multi-user\n      file:\n        src: \"/lib/systemd/system/multi-user.target\"\n        dest: \"/etc/systemd/system/default.target\"\n        state: link\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#task-18-create-and-use-templates-to-create-customised-configuration-files","title":"Task 18 \u2013 Create and use templates to create customised configuration files","text":"","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#server_listj2","title":"server_list.j2","text":"<pre><code>{% for host in groups.all %}\n{{ hostvars[host].inventory_hostname }}\n{% endfor %}\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2021/07/20/ansible-ex294-practice-exam-and-solutions/#server_listyml","title":"server_list.yml","text":"<pre><code>---\n\n- hosts: all\n  become: yes\n\n  tasks:\n    - name: Create template\n      template:\n        src: \"server_list.j2\"\n        dest: \"/etc/server_list.txt\"\n        owner: automation\n        mode: 0600\n\n...\n</code></pre>","tags":["ansible","ex294","ex407","exam","linux","practice","redhat","solutions","tips"]},{"location":"2012/04/18/bash-autocomplete-for-ssh/","title":"BASH autocomplete for SSH","text":"<p>If you, like me, find yourself SSH\u2019ing all day long, this little piece of code will do wonders. Well, it\u2019ll save you some keystrokes at least. This line parses your .bash_history-file and tries to autocomplete the host you are trying to SSH to, given that you\u2019ve already used SSH to access the host in question at least once before.</p> <p>So, to make this work, place the following in your .bashrc or .bash_profile file:</p> <pre><code>complete -W \"$(echo $(grep '^ssh ' .bash_history | sort -u | sed 's/^ssh //'))\" ssh\n</code></pre> <pre><code>source .bashrc\n</code></pre> <p>..to apply the change made to your .bashrc, if that\u2019s the file you\u2019ve made the change to. You should now be able to autocomplete hosts when SSH\u2019ing with TAB.</p> <p>Update: I am also (now) aware of, thanks to my colleagues, that you have to tweak and sometimes install additional packages to have a similar functionality provided by your system\u2019s package manager. I find the solution above the easiest one, as it\u2019s only a single line that needs to be included in a file, without any additional tweaks or packages necessary. But in the end, it\u2019s your call!</p>"},{"location":"2012/05/19/batch-convert-videos-using-handbrake-and-a-script/","title":"Batch convert videos using Handbrake and a script","text":"<p>So I mainly use Linux, but for some tasks I turn to Windows. In this particular case it was setting up my iPad so that my wife could take it to Spain with her, packed with movies, to entertain the kids. This included the use of iTunes. I\u2019m sure there\u2019s some way to make it work in Linux as well, but I thought I\u2019d write a post based on a solution I found in Windows, for once.</p> <p>I needed to convert existing .avi-files to the format the iPad uses. This is where the program Handbrake comes into play. It\u2019s excellent for converting from one format to another, but it\u2019s the batch-convert part that isn\u2019t too good. So how to solve this? Well, first install Handbrake, then proceed to create a .bat-script in the directory that contains the .avi-files. I do realize that Handbrake has a Add to queue function, but that sort of takes away the point of batch-converting. Rather I specify a folder, then it convert every file in it, than me adding a file manually one by one.</p> <p>Open up Notepad, and place the following bit of text in it:</p> <pre><code>FOR /F \"tokens=*\" %%G IN ('DIR /B /S *.avi') DO \"C:\\Program Files\\Handbrake\\HandBrakeCLI\" -i \"%%G\" -o \"%%G\".mp4 --preset=\"iPad\"\n</code></pre> <p>When saving the file, remember to select All files on the Save as type-field. Then type in script.bat in the File Name field.</p> <p>So when you\u2019re done with this, it\u2019s just a case of double-clicking the script to batch convert all of the .avi-files in the directory the script is placed in.</p> <p>Oh, another word of advice. Make sure your Windows-machine doesn\u2019t hibernate or go to sleep. I learned that the hard way.</p>"},{"location":"2008/02/11/batch-resize-images-using-mogrify/","title":"Batch resize images using mogrify","text":"<pre><code>mogrify -resize 1280x1024 *.jpg\n</code></pre>"},{"location":"2007/06/03/burn-files-with-growisofs/","title":"Burn files with growisofs","text":"<pre><code>growisofs -Z /dev/dvd -R -J /some/files\n</code></pre>"},{"location":"2007/06/16/burn-iso-with-growisofs/","title":"Burn iso with growisofs","text":"<pre><code>growisofs -dvd-compat -Z /dev/dvd=image.iso\n</code></pre>"},{"location":"2009/11/17/chromium-and-middle-click-loads-url/","title":"Chromium and middle-click-loads-URL","text":"<p>Chromium is pretty great. It\u2019s damn quick and I rather enjoy the interface. But for some reason the people developing it haven\u2019t yet decided if they are going to implement the whole mark-an-url-and-press-the-scrollwheel-on-your-mouse-to-load-the-url. Phew, that\u2019s a mouthful. Anyway, it has been annoying me like mad. Luckily, I found an extension at  which seems to do the trick. So have a look, enjoy, and let\u2019s hope that the developers make up their mind.</p>"},{"location":"2009/05/28/code-fu-011-released/","title":"Code-fu 0.1.1 released","text":"<p>Seems the people over at the GeSHi Headquarters decided to release a new version of GeSHi, 1.0.8.4. So it was time for me to upgrade code-fu as well. You can as usual head over to the Atlantis Crew download section to grab it from there, and read more about code-fu at . A working up-to-date copy can always be found at .</p>"},{"location":"2008/10/16/code-fu-and-sps-released/","title":"code-fu and sps Released","text":"<p>My previous post was about me working on two projects \u2013 the Simple Password Storage-script, and code-fu, an open source pastebin. I\u2019m happy to announce that both are now released, version 0.0.1. Head to the Atlantis Crew-pages to download both. To see and test code-fu, head to .</p>"},{"location":"2015/11/26/compare-the-output-of-two-commands/","title":"Compare the output of two commands","text":"<p>..without creating a temporary file:</p> <pre><code>diff -y &lt;(ls First_directory) &lt;(ls Second_directory)\n</code></pre> <p>The -y is just to show a side-by-side comparison. Very handy! And the result?</p> <pre><code>[jorge@j-laptop temp]$ diff -y &lt;(ls First_directory) &lt;(ls Second_directory)\ncommon.txt                          common.txt\nfirst_file.txt                            | second_file.txt\n</code></pre> <p>Thanks to my colleague Ingvar for showing me this!</p>","tags":["bash","comparison","diff","linux"]},{"location":"2008/05/01/contributing-to-fedora/","title":"Contributing to Fedora","text":"<p>After having grown so fond of Fedora, I sort of felt that I should start to contribute back to the Open Source community, as I haven\u2019t done that in a while. So I volunteered as a translator for the Norwegian language. Go figure. </p> <p>And on that note..</p> <p></p> <p>Can\u2019t wait!</p>"},{"location":"2014/04/13/convert-fat32-to-ntfs-without-losing-data/","title":"Convert FAT32 to NTFS without losing data","text":"<p>I had a USB-stick formatted with FAT32, and when I tried transferring a file over 4GB to it, I suddenly got the error:</p> <p>The file \u2018example.iso\u2019 is too large for the destination file system.</p> <p>The file system FAT32 only supports file sizes of up to 4GB, thus this error. Luckily there\u2019s an easy way to fix this \u2013 convert the file system from FAT32 to NTFS. This can be done easily with the command convert, and should not cause you to lose data on the device you\u2019re converting, or have to format it. However, backup is always adviced.</p> <p>So, the conversion itself:</p> <p>1. Click on the Start-menu 2. Type cmd in the search bar 3. Check the disk for errors with the command:</p> <pre><code>chkdsk e: /f\n</code></pre> <p>Where e: is the letter of the drive of the USB-stick.</p> <p>4. Execute the conversion with:</p> <pre><code>convert e: /FS:NTFS\n</code></pre> <p>The conversion-process will take a few minutes, and in the end the program will inform you when the conversion was successful.</p> <p>That\u2019s all there is to it. :)</p>","tags":["convert","fat32","ntfs","too large for the destination file system"]},{"location":"2024/01/16/convert-putty-public-key-to-openssh-public-key/","title":"Convert Putty public key to OpenSSH public key","text":"<p>To convert a Putty public SSH key to an OpenSSH public key, run:</p> <pre><code>ssh-keygen -i -f PuttyPublicKey.pub &gt; opensshpublickey.pub\n</code></pre>","tags":["linux","putty","ssh","public key"]},{"location":"2009/07/24/converting-an-avi-to-the-nokia-e71-size/","title":"Converting an avi to the Nokia E71 size","text":"<p>This is a oneliner to convert an avi-file to the correct dimensions of a Nokia E71. The screen is small, but sure beats to buy an iTouch if your cell already can play movies for you. :)</p> <pre><code>ffmpeg -y -i input.avi -acodec libfaac -ab 72k -s 320x176 -aspect 16:9 -vcodec libx264 -b 300k -qcomp 0.6 -r 25 -qmin 16 -qmax 51 -qdiff 4 -flags +loop -cmp +chroma -subq 7 -refs 6 -g 250 -keyint_min 25 -rc_eq 'blurCplx^(1-qComp)' -sc_threshold 40 -me_range 12 -i_qfactor 0.71 -directpred 3 output.mp4\n</code></pre>"},{"location":"2007/07/08/create-a-dvd-with-growisofs/","title":"Create a DVD with growisofs","text":"<pre><code>#!/bin/sh\n\n# Create an AUDIO_TS subdirectory if it does not exist\n[ ! -d AUDIO_TS ] &amp;&amp; mkdir AUDIO_TS\n\nchown -R root:root AUDIO_TS VIDEO_TS\nchmod 500 AUDIO_TS VIDEO_TS\nchmod 400 VIDEO_TS/*\n\ngrowisofs -dvd-compat -Z /dev/dvd -R -J -dvd-video .\n</code></pre>"},{"location":"2008/04/23/creating-bridging-and-using-host-networking-in-fedora-89-virtualbox/","title":"Creating, bridging and using host networking in Fedora 8/9 (VirtualBox)","text":"<p>As I\u2019ve mentioned in previous posts, I\u2019m quite fond of VirtualBox, and thus we write some more about it! A default installation will give every virtual machine you create an ip of 10.0.2.15, but what if you\u2019d like to enable your virtual machines to be able to interact with each other, each of them having their own ip? Here\u2019s where bridging comes into play. As I\u2019m using Fedora 8, this little section is for \u2013 that\u2019s right \u2013 Fedora 8 (works in Fedora 9 as well). I\u2019ll be assuming that your host-machine is getting its ip from a DHCP-server.</p> <p>Add the following line to the bottom of /etc/sysconfig/network-scripts/ifcfg-eth0:</p> <pre><code>BRIDGE=br0\n</code></pre> <p>Then create the file /etc/sysconfig/network-scripts/ifcfg-br0, and add the following:</p> <pre><code>DEVICE=br0\nTYPE=Bridge\nBOOTPROTO=dhcp\nONBOOT=yes\n</code></pre> <p>Once you\u2019ve done that, restart the network:</p> <pre><code># service network restart\n</code></pre> <p>Now that we have that finished, you can create a virtual ethernet interface for VirtualBox like this:</p> <pre><code># VBoxAddIF vbox0 USERNAME br0\n</code></pre> <p>Replace USERNAME with the username of the user you\u2019ll be running VirtualBox as (the user michael would have put the username michael there).</p> <p>Give all users write access to the device used by VirtualBox to communicate with the host network (/dev/net/tun in this case).</p> <pre><code># chmod 0666 /dev/net/tun\n</code></pre> <p>Now, start VirtualBox and select your virtual machine, then go to Settings.</p> <p>Then change Attached to to Host Interface, and type vbox0 into the field Interface Name.</p> <p>And that\u2019s basically it! If you\u2019d like to create another virtual interface for VirtualBox, just run the line above again, only replace vbox0 with vbox1, vbox2, and so on. All depends on how many virtual machines you\u2019re planning on running simultaneously.</p> <p>Oh, if your virtual machine seems to stop at boot, when trying to get hold of the network information, it might be your firewall that\u2019s causing the problem. So on the host-machine, disabling the firewall might do the trick:</p> <pre><code># service iptables stop\n</code></pre> <p>Good luck!</p>"},{"location":"2009/06/23/cuebin-to-iso/","title":".cue/.bin to .iso","text":"<p>First install the program called bchunk:</p> <pre><code>yum -y install bchunk\n</code></pre> <p>Now we convert .bin/.cue to .iso:</p> <pre><code>bchunk foo.bin foo.cue foo.iso\n</code></pre> <p>And there you go.</p>"},{"location":"2024/02/21/debugging-latency-using-curl/","title":"Debugging latency using curl","text":"<p>I had an issue recently where I had to debug why a request to a website was taking such a long time. After a bit of searching around, I found the following bit of code:</p> <pre><code>curl -w \"dns_resolution: %{time_namelookup}, tcp_established: %{time_connect}, ssl_handshake_done: %{time_appconnect}, TTFB: %{time_starttransfer}\\n\" -o /dev/null -s \"https://jorge.fbarr.net/\"\n</code></pre> <p>The output of the command is as follows:</p> <pre><code>dns_resolution: 0.044536, tcp_established: 0.047217, ssl_handshake_done: 0.081556, TTFB: 0.216986\n</code></pre> <ul> <li>dns_resolution == Time to resolve DNS</li> <li>tcp_established == Time to establish TCP connection</li> <li>ssl_handshake_done == Time of SSL handshake</li> <li>TTFB == Time To First Byte</li> </ul> <p>The times are measured in seconds (ssl handshake - tcp time).</p> <p>Request the same URL twice to see the result of Time To First Byte without an SSL handshake:</p> <pre><code>curl -w \"dns_resolution: %{time_namelookup}, tcp_established: %{time_connect}, ssl_handshake_done: %{time_appconnect}, TTFB: %{time_starttransfer}\\n\" -o /dev/null -s \"https://jorge.fbarr.net/\" \"https://jorge.fbarr.net/\"\ndns_resolution: 1.525, tcp_established: 1.630, ssl_handshake_done: 2.027, TTFB: 2.136\ndns_resolution: 0.000, tcp_established: 0.000, ssl_handshake_done: 0.000, TTFB: 0.110\n</code></pre> <p>A neat trick to have up your sleeve when debugging!</p>","tags":["curl","latency","ssl"]},{"location":"2024/01/10/delete-files-between-two-dates/","title":"Delete files between two dates","text":"<p>To delete all files in a directory, between two dates, use the find command:</p> <pre><code>find /path/to/dir/ -type f -newermt 2022-01-01 \\! -newermt 2023-01-01 -exec rm -fv '{}' +\n</code></pre>","tags":["linux","find","delete files","dates"]},{"location":"2009/05/27/easy-reloading-of-varnish/","title":"Easy reloading of Varnish","text":"<p>A co-worker of mine made a nice little script to make reloading of the default VCL that Varnish uses a bit easier. Not wanting to telnet or use varnishadm manually, this script does the trick. This was taken from http://kristian.blog.linpro.no/2009/02/18/easy-reloading-of-varnish-vcl/:</p> <pre><code>#!/bin/bash\n# Reload a varnish config\n# Author: Kristian Lyngstol\n\nFILE=\"/etc/varnish/default.vcl\"\n\n# Hostname and management port\n# (defined in /etc/default/varnish or on startup)\nHOSTPORT=\"localhost:6082\"\nNOW=`date +%s`\n\nerror()\n{\n    echo 1&gt;&amp;2 \"Failed to reload $FILE.\"\n    exit 1\n}\n\nvarnishadm -T $HOSTPORT vcl.load reload$NOW $FILE || error\nvarnishadm -T $HOSTPORT vcl.use reload$NOW || error\necho Current configs:\nvarnishadm -T $HOSTPORT vcl.list\n</code></pre>"},{"location":"2010/03/17/embedding-subtitles-srt-into-avi-files-with-mencoder/","title":"Embedding subtitles srt into avi files with mencoder","text":"<p>Easier than you might think.</p> <pre><code>mencoder -sub movie_subtitle.srt -ovc xvid -xvidencopts bitrate=-700000 -oac copy -o new.movie.name.avi movie.avi\n</code></pre>"},{"location":"2007/04/24/encrypt/","title":"encrypt","text":"<pre><code>#!/usr/bin/perl\n\n# Shows your encrypted password\n\nprint \"Enter your password: \";\nchomp($password = );\n$salt = sprintf(\"%02x\",($$^time^rand)&amp;0xFF);\nprint \"Your encrypted password is: \".crypt($password,$salt).\"\\n\";\n</code></pre>"},{"location":"2024/01/17/extract-from-pfx-to-pem/","title":"Extract from PFX to PEM","text":"<p>Multiple times I've had to extract certificates from PFX files, and have them converted to PEM. This little script does everything:</p> <pre><code>#!/bin/bash\n# Script to extract certificate files from PFX\n# Jorge Enrique Barrera &lt;jorge@fbarr.net&gt;\n\nFILENAME=$1\n\nif [ -f \"$1\" ]\n    then\n      echo -n \"Domain: \"\n      read DOMAIN\n\n      echo -n \"Password: \"\n      read -s PASSWORD\n\n      # Extract the key from the PFX file\n      openssl pkcs12 -in $FILENAME -nocerts -nodes -password pass:$PASSWORD | sed -ne '/-BEGIN PRIVATE KEY-/,/-END PRIVATE KEY-/p' &gt; $DOMAIN-key.pem\n\n      # Extract the certificate from the PFX file\n      openssl pkcs12 -in $FILENAME -clcerts -nokeys -password pass:$PASSWORD | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' &gt; $DOMAIN-cer.pem\n\n      # Extract CA from PFX file\n      openssl pkcs12 -in $FILENAME -cacerts -nokeys -chain -password pass:$PASSWORD | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' &gt; $DOMAIN-ca.pem\n\n      echo \"\"\n    else\n      echo \"File name not provided\"\nfi        \n</code></pre>","tags":["linux","openssl","pfx","pem","extract","certificates"]},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/","title":"Fedora 10 on the Acer Aspire One","text":"<p>Update: I have now reinstalled Fedora 10 on my Acer Aspire One, only this time I downloaded a spinoff, Fedora 10 XFCE Live CD, to see how it performed. And not a huge surprise, but it worked remarkably well, far better than Fedora 10 with GNOME. Not to mention that the battery time went from 1 hour and 50 minutes to 2 hours and 50 minutes. I\u2019ve also modified this tutorial a bit, and I have followed these steps myself, so I know it works. But give me a shout anyway should you find that something is lacking.</p> <p>Righty then. This is going to be one of those posts that probably is going to be a bit longer than usual (if you don\u2019t include the Acer Aspire One-post).</p> <p>I had settled down with Linpus on my Acer Aspire One, but it nagged me like mad that I had to just settle for it. I mean, Linpus is fine, but I want to have a system that\u2019s up to date, I want to be able to remove packages as I see fit, without worrying that the hal-daemon breaks shakes his fist at Linpus. In any case, surfing the web yesterday, I came upon the post . So in fear of that post being lost at some point, I\u2019m going to write something similar here, with my own hacks and modifications that I made. Here\u2019s how I went about installing Fedora 10 on my Acer Aspire One.</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#preparing-your-usb-pen","title":"Preparing your USB-pen","text":"<p>For starters, by installing Fedora 10 XFCE Live CD, mostly everything works out of the box. That means webcam, SD-cards, wireless, you name it. How brilliant is that! But I\u2019m getting a bit ahead of myself here. What we need to do first is to install the Live CD to a USB-pen/drive. To do that download the torrent from here. With me having a stationary machine using Fedora 9, I\u2019ll assume that you do as well. :D su to root and install the package livecd-tools:</p> <pre><code># yum install livecd-tools\n</code></pre> <p>Once the package is installed, and the iso has been downloaded, plug in your USB-pen/drive. I will also assume that your USB-pen/drive has been given the name sdb1. You can check it with the command dmesg, just look at the bottom of output if it has detected it. It should look something like this:</p> <pre><code>sd 10:0:0:0: [sdb] Write Protect is off\nsd 10:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 10:0:0:0: [sdb] Assuming drive cache: write through\nsd 10:0:0:0: [sdb] Write Protect is off\nsd 10:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 10:0:0:0: [sdb] Assuming drive cache: write through\nsdb: sdb1\nsd 10:0:0:0: [sdb] Attached SCSI disk\n</code></pre> <p>Now, with the USB-thingie plugged in, and your iso downloaded, execute the following command:</p> <pre><code># livecd-iso-to-disk /home/jorge/downloads/Fedora-10-i686-Live-XFCE/F10-i686-Live-XFCE.iso /dev/sdb1\n</code></pre> <p>F10-i686-Live-XFCE.iso being the Live CD iso we just downloaded. This command will copy the Live CD iso to your USB-pen, making that your bootable device.</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#installing-fedora-10","title":"Installing Fedora 10","text":"<p>Now that the USB-pen is ready to go, reboot your Acer Aspire One, and at boot press F12 to be able to select what boot device to boot from. Your device should pop up in that list. Log in as usual, and double-click the icon that says Install to Hard Drive. Follow the process as normal, however, when it gets time to partition the disk, everything (and I mean everything) that is ext3, change it to ext2! Why? Because having a journaling system on a netbook that uses an SSD-disk is bad. You will experience that your system is pretty much crawling at the pace of a turtle. Anyway, when getting to the partition-section, remember to click on the box named Review and Modify Partitioning Layout, and press Next. In this next window, we want to remove the swap-partition. So click on the line that says Swap under Type, and click Delete. Now that the Swap-partition is gone, we still see that both / and /boot/ are ext3. Click on each line, select Edit, and select the volume corresponding to it, then Edit again. There you can change from ext3 to ext2. When done, click Okay. When pressing Next now, you\u2019ll get a warning about not having a Swap partition. Ignore it and move on with the installation as usual.</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#disabling-selinux","title":"Disabling SELinux","text":"<p>Once your installation is all done, you need to reboot for changes to take effect. Answer some questions, create a user, and you\u2019re done! ..for now. Still have a lot of things to do. The first thing that comes to mind is to make your root-filesystem to be ext2. But didn\u2019t we specify that when we partitioned? We sure did. Why the root partition STILL is ext3 is beyond me, but we need to fix that. The user Turnip mentioned that he didn\u2019t really feel like having LVM, so he just deleted the big partition that held it, and recreated an unvarnished ext2 partition in it\u2019s place. When he rebooted to change what he believed was ext3, it was in fact still ext2. I have to test this myself to be certain (I sure wish I had an Acer Aspire One for testing purposes).</p> <p>Before we fix the whole LVM/ext3-problem though, we need to disable SELinux. SELinux is such a pain in the butt it\u2019s unbelieveable. Press Alt-F2, type terminal, su to root, and edit the file /etc/selinux/config and set the variable SELINUX to disabled. Save and close the file.</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#converting-the-filesystem-from-ext3-to-ext2","title":"Converting the filesystem from ext3 to ext2","text":"<p>I sure hope you have your USB-pen/drive in hand, because we\u2019re going to need it. Reboot your machine, with your USB-thingie plugged in, and again press F12 at boot, selecting your USB-device as the boot device. When done booting to the Live CD, press Alt-F2 and type terminal, and su to root.</p> <p>What we need to do next is to convert the root-partition of our system to ext2 (as it is currently ext3). The root filesystem is on an LVM-partition, so the way to change it isn\u2019t exactly your usual way of doing it. Run the command vgscan, and it\u2019ll look something like this:</p> <pre><code># vgscan\nReading all physical volumes.  This may take a while...\nFound volume group \"VolGroup00\" using metadata type lvm2\n</code></pre> <p>You can now find your root partition in /dev/VolGroup00/LogVol00. To convert this to ext2, run the following command:</p> <pre><code># tune2fs -O ^has_journal /dev/VolGroup00/LogVol00\n# e2fsck /dev/VolGroup00/LogVol00\n</code></pre> <p>When this is done, your system should be ext2. To test this, you can do the following things:</p> <pre><code># mkdir /mnt/disk\n# mount -t ext3 /dev/VolGroup00/LogVol00 /mnt/disk\n</code></pre> <p>This last command should fail, as we\u2019re not mounting an ext3 partition. Try it with ext2, it should now work.</p> <p>Next step is to update an important file, and making a new initrd.</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#updating-etcfstab-and-making-a-new-initrd","title":"Updating /etc/fstab and making a new initrd","text":"<p>Now that our filesystem is updated, we need to change the entries in /mnt/disk/etc/fstab to read and specify the root partition as ext2, and not ext3. So open up the file /mnt/disk/etc/fstab, and replace ext3 with ext2. When done, save and close the file. Remember that you need to do these changes as root!</p> <p>We need to do some changes to the boot partition as well, so mount it up, and other things as well (thanks skug67!):</p> <pre><code># mount /dev/sda1 /mnt/disk/boot/\n# mount -o bind /sys /mnt/disk/sys\n# mount -o bind /proc /mnt/disk/proc\n</code></pre> <p>What we will do now is to change our root-enviroment so that we\u2019re working directly inside the mounted partitions. You can do that by running this command:</p> <pre><code># chroot /mnt/disk/ /bin/bash\n</code></pre> <p>We\u2019re now in the new enviroment. It\u2019s time to create the new initrd. Now, the image-versions shown below does not necessarily have to be what you have. The iso you downloaded from the Fedora torrent might be newer than what I\u2019m writing here, so just do an ls /boot/ to see what your image-file looks like. We proceed:</p> <pre><code># mv initrd-2.6.27.5-117.fc10.i686.img initrd-2.6.27.5-117.fc10.i686.img.ext3\n# mkinitrd initrd-`uname -r`.img `uname -r`\n</code></pre> <p>When this is done, you\u2019ve created a new initrd. Follow up with exiting the enviroment, unmounting the partitions and rebooting:</p> <pre><code># exit\n# cd /root/\n# umount /mnt/disk/boot/\n# umount /mnt/disk/sys/\n# umount /mnt/disk/proc/\n# umount /mnt/disk/\n# reboot\n</code></pre> <p>With SELinux gone, ext3 converted to ext2, and a new initrd created, you should be able to boot into your Fedora 10 on the Acer Aspire One. :)</p> <p>And now, optimizing the system.</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#optimizing-fedora-10","title":"Optimizing Fedora 10","text":"<p>I assume that by now you are actually using the Fedora 10 installation. Here\u2019s how to improve the system performance a bit.</p> <p>Quoting the Ubuntu wikipages:</p> <p>Frequent writes to the SSD will cause failure eventually. We can reduce the number of writes to the SSD by moving our logs to a temporary filesystem in RAM that gets destroyed at ever reboot. Now this means your logs will not be persistent across reboots making debugging difficult in some cases. This step is optional of course, so if you need the logs for an extended period of time do not follow these steps.</p> <p>Let\u2019s assume that you want to do this. su to root, and open up the file /etc/fstab, and place these following lines there:</p> <pre><code>tmpfs      /var/log        tmpfs        defaults           0    0\ntmpfs      /tmp            tmpfs        defaults           0    0\ntmpfs      /var/tmp        tmpfs        defaults           0    0\n</code></pre> <p>Also, modify the first line in /etc/fstab to include the options noatime and nodiratime. When done, your /etc/fstab should look something like this:</p> <pre><code>/dev/VolGroup00/LogVol00 /                       ext2    defaults,noatime,nodiratime        1 1\nUUID=43882dc4-109b-40c9-b3eb-6e2c7ebd2758 /boot                   ext2    defaults        1 2\ntmpfs                   /dev/shm                tmpfs   defaults        0 0\ndevpts                  /dev/pts                devpts  gid=5,mode=620  0 0\nsysfs                   /sys                    sysfs   defaults        0 0\nproc                    /proc                   proc    defaults        0 0\ntmpfs                   /var/log            tmpfs   defaults        0 0\ntmpfs                   /var/tmp                tmpfs   defaults        0 0\ntmpfs                   /tmp                tmpfs   defaults        0 0\n</code></pre> <p>Save the file, and close it. The next thing we can do is to place the following into your /etc/rc.d/rc.local-file:</p> <pre><code># Economize the SSD\nsysctl -w vm.swappiness=1               # Strongly discourage swapping\nsysctl -w vm.vfs_cache_pressure=50      # Don't shrink the inode cache aggressively\n\n# As in the rc.last.ctrl of Linpus\necho ondemand &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\necho ondemand &gt; /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor\ncat /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate_max &gt; /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate\n\necho 1500 &gt; /proc/sys/vm/dirty_writeback_centisecs\necho 20 &gt; /proc/sys/vm/dirty_ratio\necho 10 &gt; /proc/sys/vm/dirty_background_ratio\n\necho 1 &gt; /sys/devices/system/cpu/sched_smt_power_savings\necho 10 &gt; /sys/module/snd_hda_intel/parameters/power_save\necho 5 &gt; /proc/sys/vm/laptop_mode\n\n#Decrease power usage of USB while idle\n[ -w /sys/bus/usb/devices/1-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/1-5/power/level\n[ -w /sys/bus/usb/devices/5-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/5-5/power/level\n\n/sbin/setpci -d 197b:2381 AE=47\n/sbin/modprobe pciehp\n/sbin/modprobe sdhci\n</code></pre> <p>Create a file named blacklist_msreader in /etc/modprobe.d, with the following in it:</p> <pre><code>blacklist jmb38x_ms\n</code></pre> <p>Open up the file /boot/grub/grub.conf and add elevator=noop to the kernel-line, making this:</p> <pre><code>kernel /vmlinuz-2.6.27.5-117.fc10.i686 ro root=/dev/VolGroup00/LogVol00 rhgb quiet\n</code></pre> <p>Look like this:</p> <pre><code>kernel /vmlinuz-2.6.27.5-117.fc10.i686 ro root=/dev/VolGroup00/LogVol00 rhgb quiet elevator=noop\n</code></pre> <p>Proceed with rebooting your machine, and everything should be working fine. :)</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#ways-to-extend-your-battery-life","title":"Ways to extend your battery life","text":"<p>There are several things you can do to extend the battery life on your Acer Aspire One.</p> <ul> <li>Turn the screen brightness down \u2013 your screen is the most power-intensive component in your laptop, and why turn the brightness all the way up if you already can see well enough?</li> <li>When not in use, turn of the wireless and bluetooth functions.</li> <li>If you have enough memory on your laptop, disable swapping. I would suggest putting in more memory, as swapping writes to virtual memory.</li> <li>Journaling-filesystem on a SSD-disk = baaad. More writing to disk means more power used. Switch to ext2 instead.</li> <li>Disable all services that just aren\u2019t used. A lot of distributions come with say httpd enabled at start up. If you don\u2019t need it, get rid of it.</li> <li>When you\u2019re in no need of sound \u2013 mute it!</li> </ul> <p>Jason Farrel has these following tips to apply as well:</p> <ul> <li>Not exactly a performance tweak, but add vga=0\u00d7315 to the end of the kernel-line in grub.conf in order to see the fancy new plymouth solar bootup screen. Kernel mode setting isn\u2019t yet supported for the intel gma display, so this vesa mode set workaround is needed.</li> <li>Use powertop to eliminate more power hogs.</li> <li>If using mplayer to play video, and you see nasty horizontal tearing, it\u2019s because the fast overlay isn\u2019t being used by default. Edit ~/.mplayer/config and gui.conf to use vo=xv:port=XX where XX is the port returned from the xvinfo util for the overlay adaptor \u2013 this should be 79.</li> <li> <p>To cut the bootup time almost in half (down to 25 seconds here), disable uneeded services. Here\u2019s a one-liner to disable them (run it as root): for s in atd auditd avahi-daemon bluetooth cups gpm ip6tables kerneloops mdmonitor nfslock portreserve rpcbind rpcgssd rpcidmapd sendmail setroubleshoot livesys livesys-late microcode_ctl; do echo \u201cchkconfig $s off\u201d; chkconfig $s off; done</p> </li> <li> <p>This one makes a big difference: don\u2019t forget to disable firefox\u2019s disk cache or you\u2019ll grind to death.</p> </li> </ul> <p>Thanks for the tips Jason. :)</p> <p>I installed FC10 like you described. It works fine. I was a bit surprised the AAO appeared rather slow compared to my EEE 1000H. So I ran cat /proc/cpuinfo. It appeared the CPU ran at 800 Mhz. I first looked at the BIOS, but the CPU ran at 1600 Mhz over there. Then I looked at services and found cpuspeed running. This is for scaling the CPU speed. After disabling this service the cat /proc/cpuinfo reported 1600 Mhz CPU speed and the system runs much smoother (and most probably consumes more power!).</p> <p>And he is completely right. Jaap, thanks a million!</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#minor-troubleshooting","title":"Minor troubleshooting","text":""},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#make-the-sound-work-properly","title":"Make the sound work properly","text":"<p>When checking the initial volume-settings, you\u2019ll notice that you can hear a little bit of sound, but not much, even if you\u2019ve cranked up the volume to the max. Thing is, we need to specify a little something, just a line really, to make it work properly. Create a file named /etc/modprobe.d/sound with the following in it:</p> <pre><code>options snd-hda-intel model=acer-aspire\n</code></pre> <p>If you were previously using options snd-hda-intel model=acer, change it to options snd-hda-intel model=acer-aspire. This should sort out your problem when plugging in a headphone, and the sound would still get out by the normal speaker at the same time. Thanks to Bruno Malone for the tip. :)</p> <p>Reboot, and your sound should be working perfectly fine, even after you\u2019ve resumed from suspend. :)</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#using-fn-arrow-updown-to-control-the-volume","title":"Using Fn-Arrow Up/Down to control the volume","text":"<p>You\u2019ll probably come to notice that Fn-Left/Right works perfectly fine for adjusting the screen brightness. Unfortunately, Fn-Up/Down doesn\u2019t work for controlling the volume. But that is easily fixed. :) A program that\u2019s needed, named aumix, isn\u2019t installed. So as root, install it this way:</p> <pre><code># yum -y install aumix\n</code></pre> <p>That should make things peachy again. ;)</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#making-the-wifi-led-work","title":"Making the Wifi LED work","text":"<p>In order for you to have a functional Wifi LED working, you need to have madwifi installed. Upon installing madwifi, it will automatically blacklist the atheros-driver for your wireless card. Don\u2019t get me wrong, your wireless will still work (and rumor has it that madwifi is faster). Another reason that you might want to use madwifi instead of the one included in the kernel is that there seems to be a weird bug where the wireless flakes to the point where it won\u2019t work until you do a full power down (pulling battery and discharging the caps). To be able to install madwifi you need to have the rpmfusion-repository enabled. You can enable it by doing so:</p> <pre><code># rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm\n</code></pre> <p>Once that is done, you can continue by installing madwifi like this:</p> <pre><code># yum -y install madwifi\n</code></pre> <p>Once it is installed, add the following to the bottom of the file /etc/sysctl.conf:</p> <pre><code>dev.wifi0.ledpin = 3\ndev.wifi0.softled = 1\n</code></pre> <p>Now reboot your machine, and your Wifi LED on the front will now do the association blink, as well as blink based on wireless traffic.</p>"},{"location":"2008/11/10/fedora-10-on-the-acer-aspire-one/#making-suspend-work-when-closing-the-lid","title":"Making suspend work when closing the lid","text":"<p>When closing the lid on your Acer Aspire One, you expect it to suspend, right? This behaviour does not come as default with the XFCE desktop. You can make it work by doing the following.</p> <p>First you have to have acpid installed. Execute:</p> <pre><code># yum install acpid\n</code></pre> <p>to install it. Once it is installed, create a file named lid.conf in /etc/acpi/events/ and place the following in it:</p> <pre><code>event=button/lid.*\naction=/usr/sbin/pm-suspend\n</code></pre> <p>This will now suspend your machine when closing the lid.</p> <p>If your wireless networking isn\u2019t working after resuming from suspend, and you are using the madwifi driver instead of the native kernel provided driver, you can prevent that problem by placing the following content in a file named /usr/lib/pm-utils/sleep.d/06acerwifi:</p> <pre><code>#!/bin/sh\n\n. \"${PM_FUNCTIONS}\"\n\nunload_madwifi()\n{\n/usr/bin/madwifi-unload &gt; /dev/null\n}\n\nload_madwifi()\n{\n/sbin/modprobe ath_pci &gt; /dev/null\n}\n\ncase \"$1\" in\nhibernate|suspend)\nunload_madwifi\n;;\nthaw|resume)\nload_madwifi\n;;\n*) exit $NA\n;;\nesac\n</code></pre> <p>When done, change the permissions:</p> <pre><code># chmod 755 06acerwifi\n</code></pre> <p>Reboot, and it should suspend when closing the lid. :) The only problem with this is that NetworkManager won\u2019t automatically connect to your previous wireless network, so you\u2019ll have to click and select it. I\u2019ll see what I can find out about it. :)</p> <p>Thanks to derge from the Fedoraforums for the tip about the resume-sound from suspend issue.</p> <p>That\u2019s pretty much what I have, so far. But I can\u2019t end this post without an image. :) This is how my Fedora 10 XFCE desktop looks on the Acer Aspire One.</p> <p></p> <p>Good luck!</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/","title":"Fedora 11 on the Acer Aspire One","text":"<p>So here we are again! Fedora 11 is finally out, with the new XFCE 4.6 and a lot of other goodies. I recently removed Fedora 10 from my Acer Aspire One, and installed Fedora 11. And let me tell you, it\u2019s -awesome-. Goes a lot faster than Fedora 10, and pretty much everything works out of the box! Even the camera! Just a few minor tweaks, and pretty much everything is up and running. You can read more about what is new with Fedora 11 at .</p> <p>Now, a lot of what you read here will pretty much be the same as what I wrote on the Fedora 10-article. The steps are similar, but some things need changing. So instead of having you guys jump back and forth between two posts, I\u2019ll do it this way. Ready? Here we go.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#preparing-your-usb-pen","title":"Preparing your USB-pen","text":"<p>Here we are again, preparing our USB-pen for Fedora 11. Unfortunately, the only way you can get hold of the ISO is by downloading it with a torrent, so it might take a while if you don\u2019t have the right ports opened!</p> <p>What we need to do is to install the Live CD to a USB-pen/drive. To do that download the torrent from here. With me having a stationary machine using Fedora 10, I\u2019ll assume that you do as well. :D su to root and install the package livecd-tools:</p> <pre><code># yum install livecd-tools\n</code></pre> <p>Once the package is installed, and the iso has been downloaded, plug in your USB-pen/drive. I will also assume that your USB-pen/drive has been given the name sdb1. You can check it with the command dmesg, just look at the bottom of output if it has detected it. It should look something like this:</p> <pre><code>sd 10:0:0:0: [sdb] Write Protect is off\nsd 10:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 10:0:0:0: [sdb] Assuming drive cache: write through\nsd 10:0:0:0: [sdb] Write Protect is off\nsd 10:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 10:0:0:0: [sdb] Assuming drive cache: write through\nsdb: sdb1\nsd 10:0:0:0: [sdb] Attached SCSI disk\n</code></pre> <p>Now, with the USB-thingie plugged in, and your iso downloaded, execute the following command:</p> <pre><code># livecd-iso-to-disk /home/jorge/downloads/Fedora-11-i686-Live-XFCE/Fedora-11-i686-Live-XFCE.iso /dev/sdb1\n</code></pre> <p>Fedora-11-i686-Live-XFCE.iso being the Live CD iso we just downloaded. This command will copy the Live CD iso to your USB-pen, making that your bootable device.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#installing-fedora-11","title":"Installing Fedora 11","text":"<p>Now that the USB-pen is ready to go, reboot your Acer Aspire One, and at boot press F12 to be able to select what boot device to boot from. Your device should pop up in that list. Log in as usual, and double-click the icon that says Install to Hard Drive. Follow the process as normal, however, when it gets time to partition the disk, we\u2019ll do this a little differently. :)</p> <p>In my former howto we had to manually change from ext3 to ext2, because of the journaling, and how it made the system even slower. Well let me tell you folks, ext4 is working wonders. It\u2019s going a lot quicker than everything did on the Fedora 10 system, you\u2019ll see. :)</p> <p>Anyway, enough rant from me, let\u2019s continue.</p> <p>We should be at the partitioning-screen now. Select Use Entire Drive (if you want to remove everything that is on the machine from before), and click the box that says Review and modify partitioning layout. When done, click Next.</p> <p>Now we should be in a new screen. We\u2019ll be modifying things a bit here. Thing is, I don\u2019t want to use LVM, so I\u2019m going with that. If you want to use LVM though, try checking out what I wrote on the Fedora 10-article.</p> <p>Click on the line that says VolGroup and click Delete. Press Delete again to confirm it.</p> <p>Now click on the line that says /dev/sda2 and click Edit. Change the Mount Point to /, File System Type to ext4, and make sure that you have selected Fill to maximum allowable size. When done, press OK, and then click Next. A question will pop up, telling you that you haven\u2019t selected a swap partition, and if you still want to continue with this partitioning scheme. Select Yes, and then select Write changes to disk. Now go read a book, watch some TV, or have a cup of joe. When the formatting and installation is done, you can reboot your Acer, answer a few questions, and your system should be up and going.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#disabling-selinux","title":"Disabling SELinux","text":"<p>SELinux hasn\u2019t changed much with Fedora 11. Still the ol\u2019 pain in the butt. So we remove it like we did last time.</p> <p>Once you\u2019re in the system, press Alt-F2, type terminal, su to root, and edit the file /etc/selinux/config and set the variable SELINUX to disabled. Save and close the file.</p> <p>Last time we had a whole section about how we converted from an ext3 system to ext2. Don\u2019t need to this time, wohoo!</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#optimizing-fedora-11","title":"Optimizing Fedora 11","text":"<p>I assume that by now you are actually using the Fedora 11 installation. Here\u2019s how to improve the system performance a bit.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#optimizing-your-disk","title":"Optimizing your disk","text":"<p>Quoting the Ubuntu wikipages:</p> <p>Frequent writes to the SSD will cause failure eventually. We can reduce the number of writes to the SSD by moving our logs to a temporary filesystem in RAM that gets destroyed at ever reboot. Now this means your logs will not be persistent across reboots making debugging difficult in some cases. This step is optional of course, so if you need the logs for an extended period of time do not follow these steps.</p> <p>Let\u2019s assume that you want to do this. su to root, and open up the file /etc/fstab, and place these following lines there:</p> <pre><code>tmpfs      /var/log        tmpfs        defaults           0    0\ntmpfs      /tmp            tmpfs        defaults           0    0\ntmpfs      /var/tmp        tmpfs        defaults           0    0\n</code></pre> <p>Also, modify the first line in /etc/fstab to include the options noatime and nodiratime. When done, your /etc/fstab should look something like this:</p> <pre><code>UUID=6f651dc4-3d50-4a28-b3d0-fc91b41f737c /boot                   ext3    defaults,noatime,nodiratime        1 2\nUUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c /                       ext4    defaults,noatime,nodiratime        1 1\ntmpfs                   /dev/shm                tmpfs   defaults        0 0\ndevpts                  /dev/pts                devpts  defaults        0 0\nsysfs                   /sys                    sysfs   defaults        0 0\nproc                    /proc                   proc    defaults        0 0\ntmpfs      /var/log        tmpfs        defaults           0    0\ntmpfs      /tmp            tmpfs        defaults           0    0\ntmpfs      /var/tmp        tmpfs        defaults           0    0\n</code></pre> <p>Save the file, and close it. The next thing we can do is to place the following into your /etc/rc.d/rc.local-file:</p> <pre><code># Economize the SSD\nsysctl -w vm.swappiness=1               # Strongly discourage swapping\nsysctl -w vm.vfs_cache_pressure=50      # Don't shrink the inode cache aggressively\n\n# As in the rc.last.ctrl of Linpus\necho ondemand &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\necho ondemand &gt; /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor\ncat /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate_max &gt; /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate\n\necho 1500 &gt; /proc/sys/vm/dirty_writeback_centisecs\necho 20 &gt; /proc/sys/vm/dirty_ratio\necho 10 &gt; /proc/sys/vm/dirty_background_ratio\n\necho 1 &gt; /sys/devices/system/cpu/sched_smt_power_savings\necho 10 &gt; /sys/module/snd_hda_intel/parameters/power_save\necho 5 &gt; /proc/sys/vm/laptop_mode\n\n#Decrease power usage of USB while idle\n[ -w /sys/bus/usb/devices/1-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/1-5/power/level\n[ -w /sys/bus/usb/devices/5-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/5-5/power/level\n\n/sbin/modprobe sdhci\n</code></pre> <p>Create a file named blacklist_msreader.conf in /etc/modprobe.d, with the following in it:</p> <pre><code>blacklist jmb38x_ms\n</code></pre> <p>Open up the file /boot/grub/grub.conf and add elevator=noop to the kernel-line, making this:</p> <pre><code>kernel /vmlinuz-2.6.29.4-167.fc11.i586 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c rhgb quiet\n</code></pre> <p>Look like this:</p> <pre><code>kernel /vmlinuz-2.6.29.4-167.fc11.i586 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c rhgb quiet elevator=noop\n</code></pre> <p>Proceed with rebooting your machine, and everything should be working fine. :)</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#removing-journaling","title":"Removing journaling","text":"<p>Another thing you can do to increase the speed of your disk is disabling journaling of the ext4 filesystem. I sure hope you have your USB-pen/drive in hand, because we\u2019re going to need it. Reboot your machine, with your USB-thingie plugged in, and again press F12 at boot, selecting your USB-device as the boot device. When done booting to the Live CD, press Alt-F2 and type terminal, and su to root. Find out what the partition with Linux is named. If you\u2019ve partitioned things according to this guide, it should be /dev/sdb2. It\u2019s basically the partition that holds the root of your Linux.</p> <p>What we first need to do is to edit the file /etc/fstab on your disk. Why? Some tools have yet to catch up. In particular, the version of e2fsprogs currently in Fedora 11 won\u2019t read the UUIDs from such filesystems. And because the Fedora installer generates an /etc/fstab which identifies filesystems by UUID, if you just run the tune2fs-command we\u2019ll be using, the system can\u2019t find its root filesystem and so doesn\u2019t get very far through the boot process.</p> <p>So, in order to edit the /etc/fstab-file, we first mount up the partition /dev/sda2. So remember, Fedora 11 is now installed, but you boot on the LiveCD/LiveUSB, and have a terminal up and going. As root, execute the following commands:</p> <pre><code># mkdir /mnt/disk\n# mount /dev/sda2 /mnt/disk\n# mount /dev/sda1 /mnt/disk/boot\n# cd /mnt/disk/etc\n</code></pre> <p>Now open up the file named fstab. The two lines that currently look like this:</p> <pre><code>UUID=6f651dc4-3d50-4a28-b3d0-fc91b41f737c /boot                   ext3    defaults,noatime,nodiratime        1 2\nUUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c /                       ext4    defaults,noatime,nodiratime        1 1\n</code></pre> <p>Should look like this:</p> <pre><code>/dev/sda1 /boot                   ext3    defaults,noatime,nodiratime        1 2\n/dev/sda2 /                       ext4    defaults,noatime,nodiratime        1 1\n</code></pre> <p>We simply replaced the UUID-strings with the partitions /dev/sda2 and /dev/sda1. Once you\u2019ve edited the file, save it, and close it.</p> <p>Now we need to update /boot/grub/grub.conf.</p> <p>Execute this command:</p> <pre><code># cd /mnt/disk/boot/grub/\n</code></pre> <p>And open up the file grub.conf. What used to look like this:</p> <pre><code>kernel /vmlinuz-2.6.29.4-167.fc11.i586 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c rhgb quiet elevator=noop\n</code></pre> <p>Should now look like this:</p> <pre><code>kernel /vmlinuz-2.6.29.4-167.fc11.i586 ro root=/dev/sda2 rhgb quiet elevator=noop\n</code></pre> <p>Save the file, close it, and unmount the partitions like this:</p> <pre><code># cd ~/\n# umount /mnt/disk/boot/\n# umount /mnt/disk/\n</code></pre> <p>Now that they both are unmounted, all we have to do is run the tune2fs-command to disable journaling from the ext4-partition:</p> <pre><code># tune2fs -O ^has_journal /dev/sda2\n</code></pre> <p>Reboot your machine, and you should now have an ext4 filesystem with journaling disabled.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#optimizing-firefox","title":"Optimizing Firefox","text":"<p>There are quite a few ways to make your Firefox go faster, one of them being to disable caching completely. Try these out, and let me know how they work. In your Firefox, type about:config as your URL, and press enter. Search for these values, and change them to what I\u2019ve written up here:</p> <p>Select all text when click on the URL bar</p> <p>In Windows and Mac, Firefox highlights all text when you click on the URL bar. In Linux, it does not select all the text. Instead, it places the cursor at the insertion point. Regardless which platform you are using, you can now tweak it to either select all or place cursor at insertion point.</p> <ul> <li>browser.urlbar.clickSelectsAll: true</li> </ul>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#caching","title":"Caching","text":"<p>When a page is loaded, Firefox will cache it into the hard disk so that it doesn\u2019t need to be download again for redisplaying. The bigger the storage size you cater for Firefox, the more pages it can cache.</p> <ul> <li>browser.cache.disk.enable: false</li> </ul> <p>false disabled caching completely, true enables it. If you want to modify the amount of cache used though, have a look at browser.cache.disk.capacity.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#network","title":"Network","text":"<p>Config name: network.http.pipelining Default: False Modified value: True</p> <p>Config name: network.http.proxy.pipelining Default: False Modified value: True</p> <p>Config name: network.http.pipelining.maxrequests Default: 4 Modified value: any value higher than 4, but not more than 8</p> <p>Config name: network.http.max-connections Default: 30 Modified value: 96</p> <p>Config name: network.http.max-connections-per-server Default: 15 Modified value: 32</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#enabling-autologin","title":"Enabling autologin","text":"<p>Enabling autologin isn\u2019t too difficult, but it can be a bit tricky if you don\u2019t know your way around. Word of warning though. There are a lot of things in the background that will break (like the permission to be able to suspend your machine) upon doing this. Haven\u2019t investigated enough to give the proper permissions yet, but they will come with time.</p> <p>If you\u2019re still up for doing this, let\u2019s execute these following commands. Remember that username is the user you want to automatically log in as:</p> <pre><code>$ su -\n# cp /home/username/.bash_profile ~/username-bash_profile\n# cp /etc/inittab ~/inittab.bak\n# exit\n</code></pre> <p>At this point you should be logged in as the user you want to automatically log in as. Add the following lines to the file /home/username/.bash_profile:</p> <pre><code>if [ -z \"$DISPLAY\" ] &amp;&amp; [ $(tty) == /dev/tty1 ]; then\nstartxfce4\nfi\n</code></pre> <p>Save and close the file.</p> <p>Now that we\u2019ve backed up things, and made that change, become root again, open up /etc/inittab with your favorite editor, and comment out the following line like so:</p> <pre><code>\n</code></pre> <p>Save and close the file. Then proceed to opening up /etc/event.d/tty1, and comment out this line like so:</p> <pre><code>#exec /sbin/mingetty tty1\n</code></pre> <p>and adding the following below:</p> <pre><code>exec /sbin/mingetty --autologin username tty1\n</code></pre> <p>Remember to replace username with the user you want to login automatically as. Now that we\u2019re done with that part, open up /etc/sysconfig/desktop and comment out the line there like so:</p> <pre><code>#PREFERRED=startxfce4\n</code></pre> <p>Adding the following just below it:</p> <pre><code>DISPLAYMANAGER=\"console\"\n</code></pre> <p>Upon a reboot now you should be automatically logged in as the user you specified! A shutdown/reboot by pressing the Logout button though isn\u2019t working at the moment, but do the following to get it working. Become root and open up the file /etc/PolicyKit/PolicyKit.conf and add make the whole file look like this:</p> <pre><code>\n</code></pre> <p>That should make a shutdown and reboot work properly through the Logoff button. You will also notice now though that the sound isn\u2019t working (permission-issues again). The fix to this is by adding the user to the groups audio and video. Open up /etc/group and make the lines with those groups look like so:</p> <pre><code>audio:x:63:username\nvideo:x:39:username\n</code></pre> <p>Sound should now hopefully be working.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#ways-to-extend-your-battery-life","title":"Ways to extend your battery life","text":"<p>There are several things you can do to extend the battery life on your Acer Aspire One.</p> <ul> <li>Turn the screen brightness down \u2013 your screen is the most power-intensive component in your laptop, and why turn the brightness all the way up if you already can see well enough?</li> <li>When not in use, turn of the wireless and bluetooth functions.</li> <li>If you have enough memory on your laptop, disable swapping (we\u2019ve done it in this case). I would suggest putting in more memory, as swapping writes to virtual memory.</li> <li>Journaling-filesystem on a SSD-disk = baaad. More writing to disk means more power used. Switch to ext2 instead.</li> <li>Disable all services that just aren\u2019t used. A lot of distributions come with say httpd enabled at start up. If you don\u2019t need it, get rid of it.</li> <li>When you\u2019re in no need of sound \u2013 mute it!</li> </ul> <p>Jason Farrel has these following tips to apply as well:</p> <ul> <li>Use powertop to eliminate more power hogs.</li> <li>If using mplayer to play video, and you see nasty horizontal tearing, it\u2019s because the fast overlay isn\u2019t being used by default. Edit ~/.mplayer/config and gui.conf to use vo=xv:port=XX where XX is the port returned from the xvinfo util for the overlay adaptor \u2013 this should be 79.</li> <li>To cut the bootup time almost in half (down to 25 seconds here), disable uneeded services. Here\u2019s a one-liner to disable them (run it as root): for s in atd auditd avahi-daemon bluetooth cups gpm ip6tables kerneloops mdmonitor nfslock portreserve rpcbind rpcgssd rpcidmapd sendmail setroubleshoot livesys livesys-late microcode_ctl; do echo \u201cchkconfig $s off\u201d; chkconfig $s off; done</li> <li>This one makes a big difference: don\u2019t forget to disable firefox\u2019s disk cache or you\u2019ll grind to death.</li> </ul> <p>Thanks for the tips Jason (from the Fedora 10 post). :)</p> <p>Now this next bit is VERY important, if you want your AAO to perform as best as it can. Keep in mind that this applied to Fedora 10, and applies to Fedora 11 as well:</p> <p>I installed FC10 like you described. It works fine. I was a bit surprised the AAO appeared rather slow compared to my EEE 1000H. So I ran cat /proc/cpuinfo. It appeared the CPU ran at 800 Mhz. I first looked at the BIOS, but the CPU ran at 1600 Mhz over there. Then I looked at services and found cpuspeed running. This is for scaling the CPU speed. After disabling this service the cat /proc/cpuinfo reported 1600 Mhz CPU speed and the system runs much smoother (and most probably consumes more power!).</p> <p>And he is completely right. Jaap (from the Fedora 10 post), thanks a million!</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#minor-troubleshooting","title":"Minor troubleshooting","text":""},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#my-fn-leftright-not-only-reducesincreases-the-brightness-but-sends-the-machine-into-suspend-mode-why","title":"My Fn-Left/Right not only reduces/increases the brightness, but sends the machine into Suspend-mode. Why?","text":"<p>First off, a big thank you to Lesley Mitchell for having informed me of this issue. Quoting Lesley:</p> <p>_The brightness/suspend thing is a bug in xfce4-powermanager 0.8beta.</p> <p>There\u2019s a link to the release 0.8.0 version that fixes it here: https://bugzilla.redhat.com/show_bug.cgi?id=505414.</p> <p>Or you can wait for it to turn up in the updates repository. _</p> <p>If you don\u2019t want to wait for an update in the repository, do the following:</p> <pre><code># wget http://kojipkgs.fedoraproject.org/packages/xfce4-power-manager/0.8.0/1.fc11/i586/xfce4-power-manager-0.8.0-1.fc11.i586.rpm\n# yum --nogpgcheck localinstall xfce4-power-manager-0.8.0-1.fc11.i586.rpm\n</code></pre> <p>Reboot once it\u2019s installed, and that should fix the issue.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#could-not-look-up-internet-address-for","title":"Could not look up internet address for..","text":"<p>The complete errormessage is:</p> <p>Could not look up internet address for NameOfYourMachine. This will prevent Xfce from operating correctly. It may be possible to correct the problem by adding NameOfYourMachine to the file /etc/hosts on your system.</p> <p>The solution? Just like it says. If your machine name was howl.fbarr.lan, like mine is, you\u2019d add the following:</p> <pre><code>127.0.0.1 howl.fbarr.lan howl\n</code></pre> <p>to /etc/hosts.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#make-the-sound-work-properly","title":"Make the sound work properly","text":"<p>When checking the initial volume-settings, you\u2019ll notice that you can hear a little bit of sound, but not much, even if you\u2019ve cranked up the volume to the max. Thing is, we need to specify a little something, just a line really, to make it work properly. Create a file named /etc/modprobe.d/sound.conf with the following in it:</p> <pre><code>options snd-hda-intel model=acer-aspire\n</code></pre> <p>If you were previously using options snd-hda-intel model=acer, change it to options snd-hda-intel model=acer-aspire. This should sort out your problem when plugging in a headphone, and the sound would still get out by the normal speaker at the same time. Thanks to Bruno Malone (from the Fedora 10 post) for the tip. :)</p> <p>In my case, I\u2019ve removed pulseaudio because I tend to play movies over NFS quite a bit, and pulseaudio always makes the sound turn choppy. So after having executed a yum remove pulseaudio, I add a volume-icon on my taskbar by right-clicking on it, selecting Add New Items.. and adding the application Mixer.</p> <p>Reboot, and your sound should be working perfectly fine, even after you\u2019ve resumed from suspend. :)</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#using-fn-arrow-updown-to-control-the-volume","title":"Using Fn-Arrow Up/Down to control the volume","text":"<p>You\u2019ll probably come to notice that Fn-Left/Right works perfectly fine for adjusting the screen brightness. Unfortunately, Fn-Up/Down doesn\u2019t work for controlling the volume. But that is easily fixed. :) A program that\u2019s needed, named amixer, isn\u2019t installed. So as root, install it this way:</p> <pre><code># yum -y install alsa-utils\n</code></pre> <p>That should make things peachy again. ;)</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#why-is-everything-so-big","title":"Why is everything so big?","text":"<p>This is easily fixed. Press the tiny Fedora-icon on your menu, and go to Preferences, Appearance, go to the tab Fonts and click the Custom DPI Setting, and type 80. Done!</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#double-tap-and-scrolling-doesnt-work-on-my-touchpad","title":"Double tap and scrolling doesn\u2019t work on my Touchpad!","text":"<p>The new upstream Synaptics driver disables tapping and vertical edge scrolling by default. In order to fix this, place the following in a file called /etc/hal/fdi/policy/10-synaptics.fdi:</p> <pre><code>        synaptics\n        1\n       1\n</code></pre> <p>Save and close it, and reboot. Double tap should now be working.</p> <p>If you want regular and circular scrolling enabled, you need to install the package gsynaptics, and running it from Alt-F2.</p> <p>Enable the settings you want, and click OK. Now go to the XFCE start menu, Preferences, Session and Startup, and select the Application Autostart-tab. Add the application /usr/bin/gsynaptics-init to the startup list.</p> <p>Settings should now be kept when rebooted.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#making-suspend-work-when-closing-the-lid","title":"Making suspend work when closing the lid","text":"<p>It seems that XFCE 4.6 comes with a native Suspend and Hibernate function, so this should work out of the box! Unfortunately, it doesn\u2019t quite. Suspend works great, but I haven\u2019t had success with Hibernate, yet. And thanks to EasyTarget, who commented on this post, I finally know why. Quoting EasyTarget:</p> <p>Jorge, I think the reason your Hibernate fails is that the Swap has been removed (for good reasons, I don\u2019t have swap on my A110 either).. IIRC linux uses the swapfile for it\u2019s hibernate functions, and not having a swapfile (or not having enough free space on the swap for your system ram+currently swapped data!) causes this to fail. Strangely this means you need a Huge swapfile to reliably hibernate your system.. I think it\u2019s simply a no-go for SSD based systems at the moment. https://lists.linux-foundation.org/pipermail/linux-pm/2007-July/013971.html You might also be interested in.. http://wiki.debian.org/Hibernation/Hibernate_Without_Swap_Partition</p> <p>Thanks for the information. :)</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#other-tips-and-tricks","title":"Other tips and tricks","text":"<p>Here are a few other minor tips and tricks.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#enabling-the-rpmfusion-repository","title":"Enabling the rpmfusion-repository","text":"<p>Easily done. su to root, and execute the following command:</p> <pre><code># rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm\n</code></pre> <p>And that\u2019s it! Search for a package by executing:</p> <pre><code># yum search \n</code></pre>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#installing-yum-presto","title":"Installing yum-presto","text":"<p>The presto plugin for yum adds support for downloading deltarpms and using them to generate new packages. If user enables this plugin, it will make a substantial dent in the amount of data having to be downloaded for updates. In other words, normally if you need to upgrade a package, yum will remove the complete package, and download the complete new package, even if a lot of the content is just the same. By enabling yum-presto it will only download the difference between those packages, making it faster and goes easier on the bandwidth by up to 80%, in some cases. Simply enable it by installing the yum-presto package:</p> <pre><code># yum install yum-presto\n</code></pre> <p>And you\u2019re set.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#installing-flash","title":"Installing Flash","text":"<p>As always, we need Flash for our browser. Thing is though, there\u2019s an Adobe-repository we can use. If someone is bound to release a new version of Flash first, it\u2019s them. So do the following as root:</p> <pre><code># wget http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm\n# yum --nogpgcheck localinstall adobe-release-i386-1.0-1.noarch.rpm\n# yum -y install flash-plugin\n</code></pre> <p>That\u2019s it. Restart your browser, and you should now have Flash enabled.</p>"},{"location":"2009/06/11/fedora-11-on-the-acer-aspire-one/#final-words","title":"Final words","text":"<p>So, that was it! This post will be constantly updated with new things I stumble upon, or suggestions from people posting comments. Anything you\u2019d like to add to this post? Get in touch, I\u2019ll look it over!</p> <p>And so, we end this post with another screenshot. This time, Fedora 11 with XFCE:</p> <p></p> <p>As always, comments and feedback is always appreciated.</p> <p>Good luck, and enjoy!</p>"},{"location":"2009/10/14/fedora-11-post-updated/","title":"Fedora 11 post updated","text":"<p>Hellooo.</p> <p>I\u2019ve now updated the post Fedora 11 on the Acer Aspire One with a new thing; How to enable autologin.</p> <p>I will also be explaining how to properly format your USB-pen so that making a Live-USB is easier, and less troublesome. Head on over and have a look. :)</p>"},{"location":"2009/11/26/fedora-12-and-nvidia-problems/","title":"Fedora 12 and Nvidia-problems","text":"<p>Update: It seems that the packages kmod-nvidia are now in the normal section of the rpmfusion-repository. So try a:</p> <pre><code>yum install kmod-nvidia\n</code></pre> <p>Before attempting anything mentioned below.</p> <p>This is probably just an initial thing, but, upon installing Fedora 12, if you have installed the rpmfusion-repo, you\u2019ll probably come to notice that there are no Nvidia-packages available. The solution? Not much hassle really.</p> <p>Note: If you don\u2019t have the rpmfusion-repo installed, do it like so:</p> <pre><code>rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm\n</code></pre> <p>Now, we proceed. First you need to disable the driver nouveau that comes as default with Fedora 12:</p> <pre><code>echo \"blacklist nouveau\" &gt;&gt; /etc/modprobe.d/blacklist.conf\n</code></pre> <p>Then open up your grub.conf and add the following to the end of the kernel-line:</p> <pre><code>nouveau.modeset=0 vga=0\u00d7318\n</code></pre> <p>Making it look something like:</p> <pre><code>kernel /vmlinuz-2.6.31.5-127.fc12.i686.PAE ro root=/dev/mapper/vg_cat-lv_root  LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet nouveau.modeset=0 vga=0\u00d7318\n</code></pre> <p>The thing is that the package isn\u2019t yet in the normal sections of the rpmfusion-repository, but still under testing. So execute the following command to grab what you need:</p> <pre><code>yum --enablerepo=updates-testing install kmod-nvidia xorg-x11-drv-nvidia-libs.i686\n</code></pre> <p>And that should be it. :) Reboot your machine and you should have a working Fedora 12 with Nvidia-support.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/","title":"Fedora 12 on the Acer Aspire One","text":"<p>Another round of an Acer Aspire One tale, this time with Fedora 12 in play. Some of the newest additions to Fedora 12 are:</p> <ul> <li>Support for Bluetooth devices</li> <li>Improved NetworkManager</li> <li>Improved PackageKit</li> <li>Empathy, the new default IM-client (not in XFCE, you need to install it)</li> <li>Midori, a lightweight browser</li> </ul> <p>And many other things. For more detailed information check out .</p> <p>Let\u2019s get down to business and install Fedora 12 on our Acer Aspire One, shall we?</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#preparing-your-usb-pen","title":"Preparing your USB-pen","text":"<p>Here we are again, preparing our USB-pen for Fedora 12. Unfortunately, the only way you can get hold of the ISO is by downloading it with a torrent, so it might take a while if you don\u2019t have the right ports opened!</p> <p>What we need to do is to install the Live CD to a USB-pen/drive. To do that download the torrent from here. With me having a stationary machine using Fedora 11, I\u2019ll assume that you do as well. :D su to root and install the package livecd-tools:</p> <pre><code># yum install livecd-tools\n</code></pre> <p>Once the package is installed, and the iso has been downloaded, plug in your USB-pen/drive. I will also assume that your USB-pen/drive has been given the name sdb1. You can check it with the command dmesg, just look at the bottom of output if it has detected it. It should look something like this:</p> <pre><code>sd 9:0:0:0: [sdb] 1974272 512-byte logical blocks: (1.01 GB/964 MiB)\nsd 9:0:0:0: [sdb] Write Protect is off\nsd 9:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 9:0:0:0: [sdb] Assuming drive cache: write through\nsd 9:0:0:0: [sdb] Assuming drive cache: write through\n sdb: sdb1\nsd 9:0:0:0: [sdb] Assuming drive cache: write through\nsd 9:0:0:0: [sdb] Attached SCSI removable disk\n</code></pre> <p>If your USB-pen has previously had another operating system running on it, the Master Boot Record (MBR) might already have some data on it that crashes with what we\u2019re about to do. So to clear the MBR (excluding the partition table), you can do one of the two following things; Use the flag \u2013reset-mbr when running livecd-iso-to-disk or using the dd command. I recommend using the first option, and if that fails, try the second one.</p> <p>With your iso downloaded, execute the following command:</p> <pre><code># livecd-iso-to-disk --reset-mbr /home/jorge/downloads/Fedora-12-i686-Live-XFCE/Fedora-12-i686-Live-XFCE.iso /dev/sdb1\n</code></pre> <p>Fedora-12-i686-Live-XFCE.iso being the Live CD iso we just downloaded. This command will copy the Live CD iso to your USB-pen, making that your bootable device.</p> <p>Now, if the MBR is still causing problems (like the USB-pen not booting), try the following:</p> <p>Warning: This command can render your system useless, so be CAUTIOUS and sure before you use it. Make sure that /dev/sdb is in fact your USB-pen, and not some other device. You have been warned!</p> <pre><code># dd if=/dev/zero of=/dev/sdb bs=446 count=1\n</code></pre> <p>And run the livecd-iso-to-disk-command above again.</p> <p>For more information about how to create and use a Live USB device, check out .</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#installing-fedora-12","title":"Installing Fedora 12","text":"<p>Now that the USB-pen is ready to go, reboot your Acer Aspire One, and at boot press F12 to be able to select what boot device to boot from. Your device should pop up in that list. Log in as usual, and double-click the icon that says Install to Hard Drive. Follow the process as normal, however, when it gets time to partition the disk, there are a few changes we need to make.</p> <p>We\u2019ll be using the ext4 filesystem on our Acer Aspire One.</p> <p>We should be at the partitioning-screen now. Select Use Entire Drive (if you want to remove everything that is on the machine from before), and click the box that says Review and modify partitioning layout. Remember to click the box next to the device that says sda! If you select sdb, which should be your USB-pen, you\u2019ll most likely wipe everything there. When done, click Next.</p> <p>Now we should be in a new screen. We don\u2019t want LVM on an SSD-disk, so we remove it.</p> <p>Click on the line that says vol_MACHINENAME and click Delete.</p> <p>Now click on the line that says /dev/sda2 and click Edit. Change the File System Type to ext4 and then change the Mount Point to /. Make sure that you have checked the box sda (and ONLY sda) in Allowable Drives and selected Fill to maximum allowable size. When done, press OK, and then click Next. A question will pop up, telling you that you haven\u2019t selected a swap partition, and if you still want to continue with this partitioning scheme. Select Yes, and then select Write changes to disk. When a question about a boot loader comes up, simply press Next.</p> <p>When the formatting and installation is done, you can reboot your Acer, answer a few questions, and your system should be up and going.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#disabling-selinux","title":"Disabling SELinux","text":"<p>As usual, SELinux remains the same pain as before. So we remove it like we\u2019ve done so many times before.</p> <p>Once you\u2019re in the system, press Alt-F2, type terminal, su to root, and edit the file /etc/selinux/config and set the variable SELINUX to disabled. Save and close the file.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#optimizing-fedora-12","title":"Optimizing Fedora 12","text":"<p>I assume that by now you are actually using the Fedora 12 installation. Here\u2019s how to improve the system performance a bit.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#optimizing-your-disk","title":"Optimizing your disk","text":"<p>Quoting the Ubuntu wikipages:</p> <p>Frequent writes to the SSD will cause failure eventually. We can reduce the number of writes to the SSD by moving our logs to a temporary filesystem in RAM that gets destroyed at ever reboot. Now this means your logs will not be persistent across reboots making debugging difficult in some cases. This step is optional of course, so if you need the logs for an extended period of time do not follow these steps.</p> <p>Let\u2019s assume that you want to do this. su to root, and open up the file /etc/fstab, and place these following lines there:</p> <pre><code>tmpfs      /var/log        tmpfs        defaults           0    0\ntmpfs      /tmp            tmpfs        defaults           0    0\ntmpfs      /var/tmp        tmpfs        defaults           0    0\n</code></pre> <p>Also, modify the first line in /etc/fstab to include the options noatime and nodiratime. When done, your /etc/fstab should look something like this:</p> <pre><code>UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c /                       ext4    defaults,noatime,nodiratime        1 1\nUUID=6f651dc4-3d50-4a28-b3d0-fc91b41f737c /boot                   ext4    defaults,noatime,nodiratime        1 2\ntmpfs                   /dev/shm                tmpfs   defaults        0 0\ndevpts                  /dev/pts                devpts  defaults        0 0\nsysfs                   /sys                    sysfs   defaults        0 0\nproc                    /proc                   proc    defaults        0 0\ntmpfs      /var/log        tmpfs        defaults           0    0\ntmpfs      /tmp            tmpfs        defaults           0    0\ntmpfs      /var/tmp        tmpfs        defaults           0    0\n</code></pre> <p>Save the file, and close it. The next thing we can do is to place the following into your /etc/rc.d/rc.local-file:</p> <pre><code># Economize the SSD\nsysctl -w vm.swappiness=1               # Strongly discourage swapping\nsysctl -w vm.vfs_cache_pressure=50      # Don't shrink the inode cache aggressively\n\n# As in the rc.last.ctrl of Linpus\necho ondemand &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\necho ondemand &gt; /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor\ncat /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate_max &gt; /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate\n\necho 1500 &gt; /proc/sys/vm/dirty_writeback_centisecs\necho 20 &gt; /proc/sys/vm/dirty_ratio\necho 10 &gt; /proc/sys/vm/dirty_background_ratio\n\necho 1 &gt; /sys/devices/system/cpu/sched_smt_power_savings\necho 10 &gt; /sys/module/snd_hda_intel/parameters/power_save\necho 5 &gt; /proc/sys/vm/laptop_mode\n\n#Decrease power usage of USB while idle\n[ -w /sys/bus/usb/devices/1-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/1-5/power/level\n[ -w /sys/bus/usb/devices/5-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/5-5/power/level\n\n/sbin/modprobe sdhci\n</code></pre> <p>Create a file named blacklist_msreader.conf in /etc/modprobe.d, with the following in it:</p> <pre><code>blacklist jmb38x_ms\n</code></pre> <p>Open up the file /boot/grub/grub.conf and add elevator=noop to the kernel-line, making this:</p> <pre><code>kernel /vmlinuz-2.6.31.6-145.fc12.i686 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet\n</code></pre> <p>Look like this:</p> <pre><code>kernel /vmlinuz-2.6.31.5-127.fc12.i686 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet elevator=noop\n</code></pre> <p>Proceed with rebooting your machine, and everything should be working fine. :)</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#removing-journaling","title":"Removing journaling","text":"<p>Another thing you can do to increase the speed of your disk is disabling journaling of the ext4 filesystem. I sure hope you have your USB-pen/drive in hand, because we\u2019re going to need it. Reboot your machine, with your USB-thingie plugged in, and again press F12 at boot, selecting your USB-device as the boot device. When done booting to the Live CD, press Alt-F2 and type terminal, and su to root. Find out what the partition with Linux is named. If you\u2019ve partitioned things according to this guide, it should be /dev/sdb2. It\u2019s basically the partition that holds the root of your Linux.</p> <p>What we first need to do is to edit the file /etc/fstab on your disk. Why? Some tools have yet to catch up. In particular, the version of e2fsprogs currently in Fedora 12 won\u2019t read the UUIDs from such filesystems. And because the Fedora installer generates an /etc/fstab which identifies filesystems by UUID, if you just run the tune2fs-command we\u2019ll be using, the system can\u2019t find its root filesystem and so doesn\u2019t get very far through the boot process.</p> <p>So, in order to edit the /etc/fstab-file, we first mount up the partition /dev/sda2. So remember, Fedora 12 is now installed, but you boot on the LiveCD/LiveUSB, and have a terminal up and going. As root, execute the following commands:</p> <pre><code># mkdir /mnt/disk\n# mount /dev/sda2 /mnt/disk\n# mount /dev/sda1 /mnt/disk/boot\n# cd /mnt/disk/etc\n</code></pre> <p>Now open up the file named fstab. The two lines that currently look like this:</p> <pre><code>UUID=6f651dc4-3d50-4a28-b3d0-fc91b41f737c /                   ext4    defaults,noatime,nodiratime        1 1\nUUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c /boot                       ext4    defaults,noatime,nodiratime        1 2\n</code></pre> <p>Should look like this:</p> <pre><code>/dev/sda2 /                   ext4    defaults,noatime,nodiratime        1 1\n/dev/sda1 /boot            ext4    defaults,noatime,nodiratime        1 2\n</code></pre> <p>We simply replaced the UUID-strings with the partitions /dev/sda2 and /dev/sda1. Once you\u2019ve edited the file, save it, and close it.</p> <p>Now we need to update /boot/grub/grub.conf.</p> <p>Execute this command:</p> <pre><code># cd /mnt/disk/boot/grub/\n</code></pre> <p>And open up the file grub.conf. What used to look like this:</p> <pre><code>kernel /vmlinuz-2.6.31.6-145.fc12.i686 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet elevator=noop\n</code></pre> <p>Should now look like this:</p> <pre><code>kernel /vmlinuz-2.6.31.6-145.fc12.i686 ro root=/dev/sda2 noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet elevator=noop\n</code></pre> <p>Save the file, close it, and unmount the partitions like this:</p> <pre><code># cd ~/\n# umount /mnt/disk/boot/\n# umount /mnt/disk/\n</code></pre> <p>Now that they both are unmounted, all we have to do is run the tune2fs-command to disable journaling from the ext4-partition:</p> <pre><code># tune2fs -O ^has_journal /dev/sda2\n</code></pre> <p>Reboot your machine, and you should now have an ext4 filesystem with journaling disabled.</p> <p>Now should be the time to update all of your packages before proceeding. So when you are logged back into your system again, open up a terminal, su to root, and do a:</p> <pre><code># yum update\n</code></pre> <p>Brace yourself, this might take a while. :)</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#optimizing-firefox","title":"Optimizing Firefox","text":"<p>There are quite a few ways to make your Firefox go faster, one of them being to disable caching completely. Try these out, and let me know how they work. In your Firefox, type about:config as your URL, and press enter. Search for these values, and change them to what I\u2019ve written up here:</p> <p>Select all text when click on the URL bar</p> <p>In Windows and Mac, Firefox highlights all text when you click on the URL bar. In Linux, it does not select all the text. Instead, it places the cursor at the insertion point. Regardless which platform you are using, you can now tweak it to either select all or place cursor at insertion point.</p> <ul> <li>browser.urlbar.clickSelectsAll: true</li> </ul>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#caching","title":"Caching","text":"<p>When a page is loaded, Firefox will cache it into the hard disk so that it doesn\u2019t need to be download again for redisplaying. The bigger the storage size you cater for Firefox, the more pages it can cache.</p> <ul> <li>browser.cache.disk.enable: false</li> </ul> <p>false disabled caching completely, true enables it. If you want to modify the amount of cache used (instead of disabling it), have a look at browser.cache.disk.capacity.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#network","title":"Network","text":"<p>Config name: network.http.pipelining Default: False Modified value: True</p> <p>Config name: network.http.proxy.pipelining Default: False Modified value: True</p> <p>Config name: network.http.pipelining.maxrequests Default: 4 Modified value: any value higher than 4, but not more than 8</p> <p>Config name: network.http.max-connections Default: 30 Modified value: 96</p> <p>Config name: network.http.max-connections-per-server Default: 15 Modified value: 32</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#enabling-auto-login","title":"Enabling auto-login","text":"<p>First off, a huge thanks to the user mjc for this great tip which allows you to enable auto-login!</p> <p>Edit the file /etc/gdm/custom.conf to make it look something like:</p> <pre><code>[daemon]\nTimedLoginEnable=true\nAutomaticLoginEnable=true\nAutomaticLogin=jorge\nTimedLogin=jorge\nTimedLoginDelay=0\n</code></pre> <p>Replacing jorge with the username you want to automatically log in as. When done, save and exit the file.</p> <p>Now you have to remove the keyring password. Yes, that does mean that your keys and passwords will be unprotected.</p> <p>To change/remove the keyring password:</p> <ol> <li>Open Passwords and Encryption Keys in Accessories</li> <li>Go to the Passwords-tab</li> <li>Right-click the Passwords:login-keyring and select Change Password.</li> </ol> <p>Enter in your password in the top field and leave the new password fields (Password and Confirm password) empty to remove the keyring password. Click Change. Reboot your machine and you should log in automatically!</p> <p>Thanks again mjc!</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#ways-to-extend-your-battery-life","title":"Ways to extend your battery life","text":"<p>There are several things you can do to extend the battery life on your Acer Aspire One.</p> <ul> <li>Turn the screen brightness down \u2013 your screen is the most power-intensive component in your laptop, and why turn the brightness all the way up if you already can see well enough?</li> <li>When not in use, turn of the wireless and bluetooth functions.</li> <li>If you have enough memory on your laptop, disable swapping (we\u2019ve done it in this case). I would suggest putting in more memory, as swapping writes to virtual memory.</li> <li>Journaling-filesystem on a SSD-disk = baaad. More writing to disk means more power used. In this howto we\u2019re using ext4 without journaling, but just wanted to remind you. :)</li> <li>Disable all services that aren\u2019t used. A lot of distributions come with say httpd enabled at start up. If you don\u2019t need it, get rid of it.</li> <li>When you\u2019re in no need of sound \u2013 mute it!</li> </ul> <p>Jason Farrel has these following tips to apply as well:</p> <ul> <li>Use powertop to eliminate more power hogs.</li> <li>If using mplayer to play video, and you see nasty horizontal tearing, it\u2019s because the fast overlay isn\u2019t being used by default. Edit ~/.mplayer/config and gui.conf to use vo=xv:port=XX where XX is the port returned from the xvinfo util for the overlay adaptor \u2013 this should be 79.</li> <li>To cut the bootup time almost in half (down to 25 seconds here), disable uneeded services. Here\u2019s a bit of code to disable the services (run it as root): for s in atd auditd avahi-daemon bluetooth cups ip6tables \\ mdmonitor sendmail livesys livesys-late microcode_ctl; \\ do echo \u201cchkconfig $s off\u201d; chkconfig $s off; done</li> <li>This one makes a big difference: don\u2019t forget to disable Firefox\u2019s disk cache or you\u2019ll grind to death.</li> </ul> <p>Thanks for the tips Jason (from the Fedora 10 post). :)</p> <p>Now this next bit is VERY important, if you want your Acer Aspire One to perform as best as it can. Keep in mind that this applied to Fedora 10, and applies to Fedora 11 as well as Fedora 12:</p> <p>I installed FC10 like you described. It works fine. I was a bit surprised the AAO appeared rather slow compared to my EEE 1000H. So I ran cat /proc/cpuinfo. It appeared the CPU ran at 800 Mhz. I first looked at the BIOS, but the CPU ran at 1600 Mhz over there. Then I looked at services and found cpuspeed running. This is for scaling the CPU speed. After disabling this service the cat /proc/cpuinfo reported 1600 Mhz CPU speed and the system runs much smoother (and most probably consumes more power!).</p> <p>So start/stop the service:</p> <pre><code># service cpuspeed [start|stop]\n</code></pre> <p>Throw in a:</p> <pre><code># chkconfig cpuspeed [on|off]\n</code></pre> <p>To disable the service at boot-time.</p> <p>Thanks to Jaap (from the Fedora 10 post) for the tip. :)</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#minor-troubleshooting","title":"Minor troubleshooting","text":""},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#make-the-sound-work-properly","title":"Make the sound work properly","text":"<p>When checking the initial volume-settings, you\u2019ll notice that you can hear a little bit of sound, but not much, even if you\u2019ve cranked up the volume to the max. Thing is, we need to specify a little something, just a line really, to make it work properly. Create a file named /etc/modprobe.d/sound.conf with the following in it:</p> <pre><code>options snd-hda-intel model=acer-aspire\n</code></pre> <p>Thanks to Bruno Malone (from the Fedora 10 post) for the tip. :)</p> <p>In my case, I\u2019ve removed pulseaudio because I tend to play movies over NFS quite a bit, and pulseaudio always makes the sound turn choppy. So after having executed a:</p> <pre><code># yum remove pulseaudio\n</code></pre> <p>I add a volume-icon on my taskbar by right-clicking on it, selecting Add New Items.. and adding the application Mixer.</p> <p>Reboot, and your sound should be working perfectly fine, even after you\u2019ve resumed from suspend. :)</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#disabling-nouveau-and-using-intel","title":"Disabling Nouveau and using Intel","text":"<p>For me at least the driver Nouveau seems a bit choppy. So I decided to stick with Intel instead. Do the following to disable Nouveau and start using Intel:</p> <pre><code># echo \"blacklist nouveau\" &gt;&gt; /etc/modprobe.d/blacklist.conf\n</code></pre> <p>Proceed with opening up the file /boot/grub/grub.conf and add the following to the end of the kernel-line:</p> <pre><code>nouveau.modeset=0\n</code></pre> <p>Reboot and voila, you should be using Intel instead of Nouveau.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#using-fn-arrow-updown-to-control-the-volume","title":"Using Fn-Arrow Up/Down to control the volume","text":"<p>If you come to notice that Fn-Up/Down doesn\u2019t work for controlling the volume, it can easily be fixed. :) A program that\u2019s needed, named amixer, isn\u2019t installed. So as root, install it this way:</p> <pre><code># yum -y install alsa-utils\n</code></pre> <p>That should make things peachy again. ;)</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#why-is-everything-so-big","title":"Why is everything so big?","text":"<p>This is easily fixed. Press the tiny Fedora-icon on your menu, and go to Preferences, Appearance, go to the tab Fonts and click the Custom DPI Setting, and type 80. Done!</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#double-tap-and-scrolling-doesnt-work-on-my-touchpad","title":"Double tap and scrolling doesn\u2019t work on my Touchpad!","text":"<p>The new upstream Synaptics driver disables tapping and vertical edge scrolling by default. In order to fix this, first install the package xorg-x11-drv-synaptics like this:</p> <pre><code># yum -y install xorg-x11-drv-synaptics\n</code></pre> <p>And place the following in a file called /etc/hal/fdi/policy/10-synaptics.fdi:</p> <pre><code>        synaptics\n        1\n       1\n</code></pre> <p>Save and close it, and reboot. Double tap should now be working.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#making-suspend-work-when-closing-the-lid","title":"Making suspend work when closing the lid","text":"<p>It seems that XFCE 4.6 comes with a native Suspend and Hibernate function, so this should work out of the box! Unfortunately, it doesn\u2019t quite. Suspend works great, but I haven\u2019t had success with Hibernate, yet. And thanks to EasyTarget, who commented on this post, I finally know why. Quoting EasyTarget:</p> <p>Jorge, I think the reason your Hibernate fails is that the Swap has been removed (for good reasons, I don\u2019t have swap on my A110 either).. IIRC linux uses the swapfile for it\u2019s hibernate functions, and not having a swapfile (or not having enough free space on the swap for your system ram+currently swapped data!) causes this to fail. Strangely this means you need a Huge swapfile to reliably hibernate your system.. I think it\u2019s simply a no-go for SSD based systems at the moment. https://lists.linux-foundation.org/pipermail/linux-pm/2007-July/013971.html You might also be interested in.. http://wiki.debian.org/Hibernation/Hibernate_Without_Swap_Partition</p> <p>Thanks for the information. :)</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#other-tips-and-tricks","title":"Other tips and tricks","text":"<p>Here are a few other minor tips and tricks.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#enabling-the-rpmfusion-repository","title":"Enabling the rpmfusion-repository","text":"<p>Easily done. su to root, and execute the following command:</p> <pre><code># rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm\n</code></pre> <p>And that\u2019s it! Search for a package by executing:</p> <pre><code># yum search \n</code></pre>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#installing-yum-presto","title":"Installing yum-presto","text":"<p>Note: This section applies only to people who have a bad internet connection. This will increase the disk activity of the Acer Aspire One, so only use if you have a slow internet connection.</p> <p>The presto plugin for yum adds support for downloading deltarpms and using them to generate new packages. If user enables this plugin, it will make a substantial dent in the amount of data having to be downloaded for updates. In other words, normally if you need to upgrade a package, yum will remove the complete package, and download the complete new package, even if a lot of the content is just the same. By enabling yum-presto it will only download the difference between those packages, making it faster and goes easier on the bandwidth by up to 80%, in some cases. Simply enable it by installing the yum-presto package:</p> <pre><code># yum install yum-presto\n</code></pre> <p>And you\u2019re set.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#installing-flash","title":"Installing Flash","text":"<p>As always, we need Flash for our browser. Thing is though, there\u2019s an Adobe-repository we can use. If someone is bound to release a new version of Flash first, it\u2019s them. So do the following as root:</p> <pre><code># rpm -Uvh http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm\n# yum -y install flash-plugin\n</code></pre> <p>That\u2019s it. Restart your browser, and you should now have Flash enabled.</p>"},{"location":"2009/12/01/fedora-12-on-the-acer-aspire-one/#final-words","title":"Final words","text":"<p>So, that was it for this round! This post will be constantly updated with new things I stumble upon, or suggestions from people posting comments. Anything you\u2019d like to add to this post? Get in touch, I\u2019ll look it over!</p> <p>Can\u2019t end this post without a screenshot of Fedora 12 on the Acer Aspire One, can we? What you see below is the IM-client Empathy, along with the browser Midori, a file opened within the terminal with vim and the Eye of Gnome-program showing a picture taken with Cheese.</p> <p></p> <p>As always, comments and feedback is always appreciated.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/","title":"Fedora 13 on the Acer Aspire One","text":"<p>Back in the game after a while, I proudly present to you a little tale of Fedora 13 on the Acer Aspire One. Some important additions to the system are:</p> <ul> <li>Automatic print driver installation</li> <li>Automatic language pack installation</li> <li>Redesigned user account tool</li> <li>Color management to calibrate monitors and scanners</li> <li>Experimental 3D support for NVIDIA video cards</li> </ul> <p>You can check out further details at http://docs.fedoraproject.org/en-US/Fedora/13/html/Release_Notes/index.html#sect-Release_Notes-Fedora_Overview.</p> <p>Time to start installing Fedora 13.</p> <p>Contents</p> <ul> <li></li> <li>-</li> </ul> <ul> <li> <ul> <li>-</li> </ul> </li> <li></li> <li></li> <li> <ul> <li></li> </ul> </li> <li></li> <li>-</li> <li> <ul> <li></li> </ul> </li> <li>-</li> <li></li> </ul>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#preparing-your-usb-pen","title":"Preparing your USB-pen","text":"<p>Prepare your USB-pen! This time around we don\u2019t have to download the XFCE-spin through torrents, it seems they\u2019ve made the ISO-file available!</p> <p>What we need to do is to install the Live CD to a USB-pen/drive. To do that download the ISO from here. With me having a stationary machine using Fedora 12, I\u2019ll assume that you do as well. :D su to root and install the package livecd-tools:</p> <pre><code>yum install livecd-tools\n</code></pre> <p>Once the package is installed, and the iso has been downloaded, plug in your USB-pen/drive. I will also assume that your USB-pen/drive has been given the name sdb1. You can check it with the command dmesg, just look at the bottom of output if it has detected it. It should look something like this:</p> <pre><code>sd 9:0:0:0: [sdb] 1974272 512-byte logical blocks: (1.01 GB/964 MiB)\nsd 9:0:0:0: [sdb] Write Protect is off\nsd 9:0:0:0: [sdb] Mode Sense: 00 00 00 00\nsd 9:0:0:0: [sdb] Assuming drive cache: write through\nsd 9:0:0:0: [sdb] Assuming drive cache: write through\n sdb: sdb1\nsd 9:0:0:0: [sdb] Assuming drive cache: write through\nsd 9:0:0:0: [sdb] Attached SCSI removable disk\n</code></pre> <p>If your USB-pen has previously had another operating system running on it, the Master Boot Record (MBR) might already have some data on it that crashes with what we\u2019re about to do. So to clear the MBR (excluding the partition table), you can do one of the two following things; Use the flag \u2013reset-mbr when running livecd-iso-to-disk or using the dd command. I recommend using the first option, and if that fails, try the second one.</p> <p>With your iso downloaded, execute the following command:</p> <pre><code>livecd-iso-to-disk --reset-mbr /home/jorge/downloads/Fedora-13-i686-Live-XFCE.iso /dev/sdb1\n</code></pre> <p>Fedora-13-i686-Live-XFCE.iso being the Live CD iso we just downloaded. This command will copy the Live CD iso to your USB-pen, making that your bootable device.</p> <p>Now, if the MBR is still causing problems (like the USB-pen not booting), try the following:</p> <p>Warning: This command can render your system useless, so be CAUTIOUS and sure before you use it. Make sure that /dev/sdb is in fact your USB-pen, and not some other device. You have been warned!</p> <pre><code>dd if=/dev/zero of=/dev/sdb bs=446 count=1\n</code></pre> <p>And run the livecd-iso-to-disk-command above again.</p> <p>For more information about how to create and use a Live USB device, check out .</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#installing-fedora-13","title":"Installing Fedora 13","text":"<p>Now that the USB-pen is ready to go, reboot your Acer Aspire One, and at boot press F13 to be able to select what boot device to boot from. Your device should pop up in that list. Log in as usual, and double-click the icon that says Install to Hard Drive. Follow the process as normal, and just select Basic Storage Devices when you get to that option. When you get at the screen that asks you to check the drive you\u2019d like to install the operating system on, check the one that says ATA (should be around 7.5GB big). If you can\u2019t uncheck your USB-device, don\u2019t worry.</p> <p>When selecting what type of installation you\u2019d like, select Use All Space, and check the box at the bottom that says Review and modify partition layout. Click Next.</p> <p>Next select the Acer\u2019s drive, and click the arrow to the right to move it to Install Target Devices, leaving the USB-device under Data Storage Devices (to be mounted only). Click Next.</p> <p>We\u2019ll be using the ext4 filesystem on our Acer Aspire One.</p> <p>Now we should be in a new screen. We don\u2019t want LVM on an SSD-disk, so we remove it.</p> <p>Click on the line that says vol_MACHINENAME and click Delete. In my case it\u2019s called vg_howl, since I named my machine howl.</p> <p>Now click on the line that says /dev/sda2 and click Edit. Change the File System Type to ext4 and then change the Mount Point to /. Make sure that you have checked the box sda (and ONLY sda) in Allowable Drives and selected Fill to maximum allowable size. When done, press OK, and then click Next. A question will pop up, telling you that you haven\u2019t selected a swap partition, and if you still want to continue with this partitioning scheme. Select Yes, and then select Write changes to disk. When a question about a boot loader comes up, simply press Next.</p> <p>When the formatting and installation is done, you can reboot your Acer, answer a few questions, and your system should be up and going.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#disabling-selinux","title":"Disabling SELinux","text":"<p>Things haven\u2019t changed, SELinux will haunt us forever.</p> <p>Once you\u2019re in the system, press Alt-F2, type terminal, su to root, and edit the file /etc/selinux/config and set the variable SELINUX to disabled. Save and close the file.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#optimizing-fedora-13","title":"Optimizing Fedora 13","text":"<p>I assume that by now you are actually using the Fedora 13 installation. Here\u2019s how to improve the system performance a bit.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#optimizing-your-disk","title":"Optimizing your disk","text":"<p>Quoting the Ubuntu wikipages:</p> <p>Frequent writes to the SSD will cause failure eventually. We can reduce the number of writes to the SSD by moving our logs to a temporary filesystem in RAM that gets destroyed at ever reboot. Now this means your logs will not be persistent across reboots making debugging difficult in some cases. This step is optional of course, so if you need the logs for an extended period of time do not follow these steps.</p> <p>Let\u2019s assume that you want to do this. su to root, and open up the file /etc/fstab, and place these following lines there:</p> <pre><code>tmpfs      /var/log        tmpfs        defaults           0    0\ntmpfs      /tmp            tmpfs        defaults           0    0\ntmpfs      /var/tmp        tmpfs        defaults           0    0\n</code></pre> <p>Also, modify the first line in /etc/fstab to include the options noatime and nodiratime. When done, your /etc/fstab should look something like this:</p> <pre><code>UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c /                       ext4    defaults,noatime,nodiratime        1 1\nUUID=6f651dc4-3d50-4a28-b3d0-fc91b41f737c /boot                   ext4    defaults,noatime,nodiratime        1 2\ntmpfs                   /dev/shm                tmpfs   defaults        0 0\ndevpts                  /dev/pts                devpts  defaults        0 0\nsysfs                   /sys                    sysfs   defaults        0 0\nproc                    /proc                   proc    defaults        0 0\ntmpfs      /var/log        tmpfs        defaults           0    0\ntmpfs      /tmp            tmpfs        defaults           0    0\ntmpfs      /var/tmp        tmpfs        defaults           0    0\n</code></pre> <p>Save the file, and close it. The next thing we can do is to place the following into your /etc/sysctl.conf-file:</p> <pre><code># Economize the SSD\n# Strongly discourage swapping (default 60)\nvm.swappiness = 1\n\n# Don't shrink the inode cache aggressively (default 100)\nvm.vfs_cache_pressure = 50\n\n# (default 499)\nvm.dirty_writeback_centisecs = 1500\n\n# (default 10)\nvm.dirty_ratio = 20\n\n# (default 5)\nvm.dirty_background_ratio = 10\n\n# (default 0)\nvm.laptop_mode = 5\n</code></pre> <p>..and this to your /etc/rc.d/rc.local:</p> <pre><code># As in the rc.last.ctrl of Linpus\necho ondemand &gt; /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\necho ondemand &gt; /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor\ncat /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate_max &gt; /sys/devices/system/cpu/cpu0/cpufreq/ondemand/sampling_rate\n\necho 1 &gt; /sys/devices/system/cpu/sched_smt_power_savings\necho 10 &gt; /sys/module/snd_hda_intel/parameters/power_save\n\n#Decrease power usage of USB while idle\n[ -w /sys/bus/usb/devices/1-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/1-5/power/level\n[ -w /sys/bus/usb/devices/5-5/power/level ] &amp;&amp; echo auto &gt; /sys/bus/usb/devices/5-5/power/level\n</code></pre> <p>Open up the file /boot/grub/grub.conf and add elevator=noop to the kernel-line, making this:</p> <pre><code>kernel /vmlinuz-2.6.31.6-145.fc12.i686 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet\n</code></pre> <p>Look like this:</p> <pre><code>kernel /vmlinuz-2.6.31.5-127.fc12.i686 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet elevator=noop\n</code></pre> <p>Proceed with rebooting your machine, and everything should be working fine. :)</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#removing-journaling","title":"Removing journaling","text":"<p>Another thing you can do to increase the speed of your disk is disabling journaling of the ext4 filesystem. I sure hope you have your USB-pen/drive in hand, because we\u2019re going to need it. Reboot your machine, with your USB-thingie plugged in, and again press F12 at boot, selecting your USB-device as the boot device. When done booting to the Live CD, press Alt-F2 and type terminal, and su to root. Find out what the partition with Linux is named. If you\u2019ve partitioned things according to this guide, it should be /dev/sdb2. It\u2019s basically the partition that holds the root of your Linux.</p> <p>What we first need to do is to edit the file /etc/fstab on your disk. Why? Some tools have yet to catch up. In particular, the version of e2fsprogs currently in Fedora 13 won\u2019t read the UUIDs from such filesystems. And because the Fedora installer generates an /etc/fstab which identifies filesystems by UUID, if you just run the tune2fs-command we\u2019ll be using, the system can\u2019t find its root filesystem and so doesn\u2019t get very far through the boot process.</p> <p>So, in order to edit the /etc/fstab-file, we first mount up the partition /dev/sda2. So remember, Fedora 13 is now installed, but you boot on the LiveCD/LiveUSB, and have a terminal up and going. As root, execute the following commands:</p> <pre><code>mkdir /mnt/disk\nmount /dev/sda2 /mnt/disk\nmount /dev/sda1 /mnt/disk/boot\ncd /mnt/disk/etc\n</code></pre> <p>Now open up the file named fstab. The two lines that currently look like this:</p> <pre><code>UUID=6f651dc4-3d50-4a28-b3d0-fc91b41f737c /                   ext4    defaults,noatime,nodiratime        1 1\nUUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c /boot                       ext4    defaults,noatime,nodiratime        1 2\n</code></pre> <p>Should look like this:</p> <pre><code>/dev/sda2 /                   ext4    defaults,noatime,nodiratime        1 1\n/dev/sda1 /boot            ext4    defaults,noatime,nodiratime        1 2\n</code></pre> <p>We simply replaced the UUID-strings with the partitions /dev/sda2 and /dev/sda1. Once you\u2019ve edited the file, save it, and close it.</p> <p>Now we need to update /boot/grub/grub.conf.</p> <p>Execute this command:</p> <pre><code>cd /mnt/disk/boot/grub/\n</code></pre> <p>And open up the file grub.conf. What used to look like this:</p> <pre><code>kernel /vmlinuz-2.6.33.3-85.fc13.i686 ro root=UUID=0dbcdea1-3f91-477a-b730-ea6033c45b5c noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet elevator=noop\n</code></pre> <p>Should now look like this:</p> <pre><code>kernel /vmlinuz-2.6.33.3-85.fc13.i686 ro root=/dev/sda2 noiswmd LANG=en_US.UTF-8 SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc KEYTABLE=no rhgb quiet elevator=noop\n</code></pre> <p>Save the file, close it, and unmount the partitions like this:</p> <pre><code>cd ~/\numount /mnt/disk/boot/\numount /mnt/disk/\n</code></pre> <p>Now that they both are unmounted, all we have to do is run the tune2fs-command to disable journaling from the ext4-partition:</p> <pre><code>tune2fs -O ^has_journal /dev/sda2\n</code></pre> <p>Reboot your machine, and you should now have an ext4 filesystem with journaling disabled.</p> <p>Now should be the time to update all of your packages before proceeding. So when you are logged back into your system again, open up a terminal, su to root, and do a:</p> <pre><code>yum update\n</code></pre> <p>Brace yourself, this might take a while. :)</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#optimizing-firefox","title":"Optimizing Firefox","text":"<p>There are quite a few ways to make your Firefox go faster, one of them being to disable caching completely. Try these out, and let me know how they work. In your Firefox, type about:config as your URL, and press enter. Search for these values, and change them to what I\u2019ve written up here:</p> <p>Select all text when click on the URL bar</p> <p>In Windows and Mac, Firefox highlights all text when you click on the URL bar. In Linux, it does not select all the text. Instead, it places the cursor at the insertion point. Regardless which platform you are using, you can now tweak it to either select all or place cursor at insertion point.</p> <ul> <li>browser.urlbar.clickSelectsAll: true</li> </ul>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#caching","title":"Caching","text":"<p>When a page is loaded, Firefox will cache it into the hard disk so that it doesn\u2019t need to be download again for redisplaying. The bigger the storage size you cater for Firefox, the more pages it can cache.</p> <ul> <li>browser.cache.disk.enable: false</li> </ul> <p>false disabled caching completely, true enables it. If you want to modify the amount of cache used (instead of disabling it), have a look at browser.cache.disk.capacity.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#network","title":"Network","text":"<p>Config name: network.http.pipelining Default: False Modified value: True</p> <p>Config name: network.http.proxy.pipelining Default: False Modified value: True</p> <p>Config name: network.http.pipelining.maxrequests Default: 4 Modified value: any value higher than 4, but not more than 8</p> <p>Config name: network.http.max-connections Default: 30 Modified value: 96</p> <p>Config name: network.http.max-connections-per-server Default: 15 Modified value: 32</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#enabling-auto-login","title":"Enabling auto-login","text":"<p>As of Fedora 13, enabling automatic login on XFCE is a LOT easier. First, we need to have the packages accountsdialog and accountsservice installed. So execute the following command as root:</p> <pre><code>yum -y install accountsdialog accountsservice\n</code></pre> <p>Once the packages are installed, press Alt-F2 to get the run-dialog, and enter accounts-dialog.</p> <p>You will get up a little box with your current user listed. Click on the shield-icon to the bottom left to allow changes to details. Enter your root-password, and proceed to click Login Options.</p> <p>Now you have a new box up. Click on the shield again, enter the root-password again, and select the user you want to automatically log in as under Automatic login.</p> <p>That is pretty much it. Exit the program, reboot, and you should be able to log in automatically as the user you specified. :)</p> <p>That is one method you can use. The other one is as follows.</p> <p>First, a huge thanks to the user mjc for this great tip which allows you to enable auto-login as well!</p> <p>Edit the file /etc/gdm/custom.conf to make it look something like:</p> <pre><code>[daemon]\nTimedLoginEnable=true\nAutomaticLoginEnable=true\nAutomaticLogin=jorge\nTimedLogin=jorge\nTimedLoginDelay=0\n</code></pre> <p>Replacing jorge with the username you want to automatically log in as. When done, save and exit the file.</p> <p>Now you have to remove the keyring password. Yes, that does mean that your keys and passwords will be unprotected.</p> <p>To change/remove the keyring password:</p> <ol> <li>Open Passwords and Encryption Keys in Accessories</li> <li>Go to the Passwords-tab</li> <li>Right-click the Passwords:login-keyring and select Change Password.</li> </ol> <p>Enter in your password in the top field and leave the new password fields (Password and Confirm password) empty to remove the keyring password. Click Change. Reboot your machine and you should log in automatically!</p> <p>Thanks again mjc!</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#ways-to-extend-your-battery-life","title":"Ways to extend your battery life","text":"<p>There are several things you can do to extend the battery life on your Acer Aspire One.</p> <ul> <li>Turn the screen brightness down \u2013 your screen is the most power-intensive component in your laptop, and why turn the brightness all the way up if you already can see well enough?</li> <li>When not in use, turn of the wireless and bluetooth functions.</li> <li>If you have enough memory on your laptop, disable swapping (we\u2019ve done it in this case). I would suggest putting in more memory, as swapping writes to virtual memory.</li> <li>Journaling-filesystem on a SSD-disk = baaad. More writing to disk means more power used. In this howto we\u2019re using ext4 without journaling, but just wanted to remind you. :)</li> <li>Disable all services that aren\u2019t used. A lot of distributions come with say httpd enabled at start up. If you don\u2019t need it, get rid of it.</li> <li>When you\u2019re in no need of sound \u2013 mute it!</li> </ul> <p>Jason Farrel has these following tips to apply as well:</p> <ul> <li>Use powertop to eliminate more power hogs.</li> <li>If using mplayer to play video, and you see nasty horizontal tearing, it\u2019s because the fast overlay isn\u2019t being used by default. Edit ~/.mplayer/config and gui.conf to use vo=xv:port=XX where XX is the port returned from the xvinfo util for the overlay adaptor \u2013 this should be 79.</li> <li>To cut the bootup time almost in half (down to 25 seconds here), disable uneeded services. Here\u2019s a bit of code to disable the services (run it as root): for s in atd auditd avahi-daemon bluetooth cups ip6tables \\ mdmonitor sendmail livesys livesys-late; \\ do echo \u201cchkconfig $s off\u201d; chkconfig $s off; done</li> <li>This one makes a big difference: don\u2019t forget to disable Firefox\u2019s disk cache or you\u2019ll grind to death.</li> </ul> <p>Thanks for the tips Jason (from the Fedora 10 post). :)</p> <p>Now this next bit is VERY important, if you want your Acer Aspire One to perform as best as it can. Keep in mind that this applied to Fedora 11, and applies to Fedora 12 as well as Fedora 13:</p> <p>I installed FC10 like you described. It works fine. I was a bit surprised the AAO appeared rather slow compared to my EEE 1000H. So I ran cat /proc/cpuinfo. It appeared the CPU ran at 800 Mhz. I first looked at the BIOS, but the CPU ran at 1600 Mhz over there. Then I looked at services and found cpuspeed running. This is for scaling the CPU speed. After disabling this service the cat /proc/cpuinfo reported 1600 Mhz CPU speed and the system runs much smoother (and most probably consumes more power!).</p> <p>So start/stop the service:</p> <pre><code>service cpuspeed [start|stop]\n</code></pre> <p>Throw in a:</p> <pre><code>chkconfig cpuspeed [on|off]\n</code></pre> <p>To disable the service at boot-time.</p> <p>Thanks to Jaap (from the Fedora 10 post) for the tip. :)</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#minor-troubleshooting","title":"Minor troubleshooting","text":""},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#make-the-sound-work-properly","title":"Make the sound work properly","text":"<p>When checking the initial volume-settings, you\u2019ll notice that you can hear a little bit of sound, but not much, even if you\u2019ve cranked up the volume to the max. Thing is, we need to specify a little something, just a line really, to make it work properly. Create a file named /etc/modprobe.d/sound.conf with the following in it:</p> <pre><code>options snd-hda-intel model=acer-aspire\n</code></pre> <p>Thanks to Bruno Malone (from the Fedora 10 post) for the tip. :)</p> <p>In my case, I\u2019ve removed pulseaudio because I tend to play movies over NFS quite a bit, and pulseaudio always makes the sound turn choppy. So after having executed a:</p> <pre><code>yum remove pulseaudio\n</code></pre> <p>I add a volume-icon on my taskbar by right-clicking on it, selecting Add New Items.. and adding the application Mixer.</p> <p>Reboot, and your sound should be working perfectly fine, even after you\u2019ve resumed from suspend. :)</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#why-is-everything-so-big","title":"Why is everything so big?","text":"<p>This is easily fixed. Press the tiny Fedora-icon on your menu, and go to Preferences, Appearance, go to the tab Fonts and click the Custom DPI Setting, and type 80. Done!</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#double-tap-and-scrolling-doesnt-work-on-my-touchpad","title":"Double tap and scrolling doesn\u2019t work on my Touchpad!","text":"<p>Quoting :</p> <p>Beginning with Fedora 13, the X server uses udev instead of HAL for input device detection and xorg.conf InputClass configuration. Thus, any HAL-specific configuration is deprecated and users with custom configurations in fdi files need to change these configurations to conform to the new format.</p> <p>This means that the HAL-configuration we used in Fedora 12 no longer applies for Fedora 13. Instead we have to create configuration-files in /etc/X11/xorg.conf.d/. Go to that directory, create a file named 01-system-setup-mouse.conf, and place the following in it:</p> <pre><code># Enables tapping on the Acer Aspire One\n\nSection \"InputClass\"\n       Identifier \"tap-by-default\"\n       MatchIsTouchpad \"on\"\n       Option \"TapButton1\" \"1\"\nEndSection\n</code></pre> <p>Save the file, reboot, and the tapping should be working. :)</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#making-suspend-work-when-closing-the-lid","title":"Making suspend work when closing the lid","text":"<p>It seems that XFCE 4.6 comes with a native Suspend and Hibernate function, so this should work out of the box! Unfortunately, it doesn\u2019t quite. Suspend works great, but I haven\u2019t had success with Hibernate, yet. And thanks to EasyTarget, who commented on this post, I finally know why. Quoting EasyTarget:</p> <p>Jorge, I think the reason your Hibernate fails is that the Swap has been removed (for good reasons, I don\u2019t have swap on my A110 either).. IIRC linux uses the swapfile for it\u2019s hibernate functions, and not having a swapfile (or not having enough free space on the swap for your system ram+currently swapped data!) causes this to fail. Strangely this means you need a Huge swapfile to reliably hibernate your system.. I think it\u2019s simply a no-go for SSD based systems at the moment. https://lists.linux-foundation.org/pipermail/linux-pm/2007-July/013971.html You might also be interested in.. http://wiki.debian.org/Hibernation/Hibernate_Without_Swap_Partition</p> <p>Thanks for the information. :)</p> <p>To enable suspend upon closing the lid, go to the XFCE-menu, Preferences -&gt; XFCE 4 Power Manager -&gt; On AC, and select Suspend on When the laptop lid is closed.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#other-tips-and-tricks","title":"Other tips and tricks","text":"<p>Here are a few other minor tips and tricks.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#enabling-the-rpmfusion-repository","title":"Enabling the rpmfusion-repository","text":"<p>Easily done. su to root, and execute the following command:</p> <pre><code>rpm -Uvh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-stable.noarch.rpm\n</code></pre> <p>And that\u2019s it! Search for a package by executing:</p> <pre><code>yum search \n</code></pre>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#disabling-yum-presto","title":"Disabling yum-presto","text":"<p>The presto plugin for yum adds support for downloading deltarpms and using them to generate new packages. If user enables this plugin, it will make a substantial dent in the amount of data having to be downloaded for updates. In other words, normally if you need to upgrade a package, yum will remove the complete package, and download the complete new package, even if a lot of the content is just the same. By enabling yum-presto it will only download the difference between those packages, making it faster and goes easier on the bandwidth by up to 80%, in some cases. The downside to this is that the disk has to work a LOT, which means a lot of write operations, which again means that SSD is not the best thing to have. I personally disable the plugin, and would recommend you to do it as well if you have a good internet connection. Do it by executing the following command as root:</p> <pre><code>yum remove yum-presto\n</code></pre> <p>And you\u2019re set.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#installing-flash","title":"Installing Flash","text":"<p>As always, we need Flash for our browser. Thing is though, there\u2019s an Adobe-repository we can use. If someone is bound to release a new version of Flash first, it\u2019s them. So do the following as root:</p> <pre><code>rpm -Uvh http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm\nyum -y install flash-plugin\n</code></pre> <p>That\u2019s it. Restart your browser, and you should now have Flash enabled.</p>"},{"location":"2010/06/09/fedora-13-on-the-acer-aspire-one/#final-words","title":"Final words","text":"<p>Tada! That\u2019s pretty much it. If you have any comments or suggestions to this post, feel free to post a comment, I\u2019ll look it over! Good luck enjoying Fedora 13 with your Acer Aspire One!</p> <p>And once again, we can\u2019t end this post without a screenshot of Fedora 13, and my always-charming smile. ;)</p>"},{"location":"2009/04/28/fedora-and-sshfs/","title":"Fedora and SSHFS","text":"<p>I had heard about sshfs before, but didn\u2019t attempt anything with it til today. And I find it pure genius. A little about sshfs.</p> <p>This is a filesystem client based on the SSH File Transfer Protocol. Since most SSH servers already support this protocol it is very easy to set up: i.e. on the server side there\u2019s nothing to do. On the client side mounting the filesystem is as easy as logging into the server with ssh.</p> <p>The idea of sshfs was taken from the SSHFS filesystem distributed with LUFS, which I found very useful. There were some limitations of that codebase, so I rewrote it. Features of this implementation are:</p> <ul> <li>Based on FUSE (the best userspace filesystem framework for linux ;-)</li> <li>Multithreading: more than one request can be on it\u2019s way to the server</li> <li>Allowing large reads (max 64k)</li> <li>Caching directory contents</li> </ul> <p>After having aquired my new VPS, I wanted to mount something over NFS to my workstation at home. Being that the VPS is running on OpenVZ, it doesn\u2019t allow for normal NFS to work. I tried something called unfs3 instead, a user-space NFS-server. I ended up inventing new curse words yet again. So someone tipped me about sshfs, and it\u2019s working like a dream. Mounting things is as easy as logging on to a remote system with regular ssh.</p> <p>First install sshfs:</p> <pre><code>yum install fuse-sshfs\n</code></pre> <p>In some cases, after having installed fuse-sshfs, you will have to add the user to the group fuse. If that\u2019s the case, you can do so like this:</p> <pre><code>gpasswd -a YourUserName fuse\n</code></pre> <p>Once you are in the group, you need to log out and in again for it to take effect. When logged in, you can mount things along the lines of:</p> <pre><code>sshfs user@server.example.com:/home/user/files /home/user/files\n</code></pre> <p>And that\u2019s that! The only thing you have to worry about is that the folder you\u2019re trying to mount on the remote machine has the same owner on your workstation. So the user jorge can pretty much mount anything on his workstation, from the remote machine, as long as it is owned by him.</p> <p>To unmount something you can use:</p> <pre><code>fusermount -u /here/it/goes/\n</code></pre> <p>Enjoy!</p>"},{"location":"2010/03/17/firefox-36-and-java-on-linux/","title":"Firefox 3.6 and Java on Linux","text":"<p>Finding that you\u2019re lacking Java in Firefox 3.6 on Linux? The steps to install it are easy, but you have to do things a bit differently than you have in previous Firefox-versions.</p> <p>First head over to the Download-section at http://www.java.com. Select to download the file named Linux RPM (self-extracting file) (if you\u2019re using an RPM-based distribution like Fedora). Once it\u2019s downloaded, and assuming it has been downloaded to the folder Downloads, do the following:</p> <pre><code>su -\nchmod +x /home/jorge/Downloads/jre-6u18-linux-i586-rpm.bin\n/home/jorge/Downloads/jre-6u18-linux-i586-rpm.bin\n</code></pre> <p>After agreeing to the license terms, just type Yes and press enter. Now making the plugin work with Firefox. I mentioned earlier that you have to do things a bit differently. Whereas we used the file libjavaplugin.so before, now we have to use the next generation Java plugin, namely libnpjp2.so. So execute the following command to make things work:</p> <pre><code>ln -s /usr/java/latest/lib/i386/libnpjp2.so /usr/lib/mozilla/plugins/\n</code></pre> <p>Restart your browser, and you should have Java. Verify it at http://java.com/en/download/installed.jsp?detect=jre&amp;try;=1.</p> <p>Enjoy!</p>"},{"location":"2010/03/06/firefox-36-on-fedora-12/","title":"Firefox 3.6 on Fedora 12","text":"<p>Easy peasy:</p> <pre><code>yum --enablerepo=rawhide install firefox\n</code></pre> <p>And that should upgrade Firefox for the newest available in the repositories.</p>"},{"location":"2008/08/18/firefox-3-and-java/","title":"Firefox 3 and Java","text":"<p>One of the things that has been annoying me for ages is getting Firefox and Java working together. For some bizarre reason I never seem to get it working together properly. Till just now. Here\u2019s the easy way of installing Java on your machine, and having it working with Firefox.</p> <p>Proceed to , and press the Download-button. Download the file named Linux RPM (self-extracting file). Once the file is downloaded, su to root and do a chmod +x on it.</p> <pre><code>su -\nchmod +x jre-6u7-linux-i585.rpm.bin\n</code></pre> <p>Then run the binary file:</p> <pre><code>./jre-6u7-linux-i585.rpm.bin                                                                                                                                                                                                                                                                               \n</code></pre> <p>After agreeing to the license terms, Java should install itself. Now we\u2019ll try to make it work with Firefox. Head to /usr/lib/mozilla/plugins/ and remove the symlink named libjavaplugin.so. Then proceed to create a new symlink with the same name, only link it to /usr/java/latest/plugin/i386/ns7/libjavaplugin_oji.so:</p> <pre><code>cd /usr/lib/mozilla/plugins/\nrm libjavaplugin.so\nln -s /usr/java/latest/plugin/i386/ns7/libjavaplugin_oji.so libjavaplugin.so\n</code></pre> <p>And that\u2019s that. Restart your Firefox if it\u2019s already up and going, and once it is back up, Java should now be working. :)</p>"},{"location":"2009/07/08/firefox-and-java-on-64-bit-linux/","title":"Firefox and Java on 64 bit Linux","text":"<p>Wondering what you need to do in order to install Java on a 64 bit Linux installation? Few and simple steps really.</p> <p>First head over to the Download-section at . Select to download the file named Linux x64 RPM (if you\u2019re using an RPM-based distribution like Fedora). Once it\u2019s downloaded, and assuming it has been downloaded to the folder Download, do the following:</p> <pre><code>After agreeing to the license terms, just type Yes and press enter. Now making the plugin work with Firefox. Just execute the following command:\nln -s /usr/java/latest/lib/amd64/libnpjp2.so /usr/lib64/mozilla/plugins/\n\nCross your fingers, restart Firefox, and things should hopefully be working. :) Head over here to check out if it worked.\nGood luck!\n</code></pre>"},{"location":"2009/05/25/flac-to-mp3/","title":"flac to mp3","text":"<pre><code>for file in *.flac; do $(flac -cd \"$file\" | lame -h - \"${file%.flac}.mp3\"); done \n</code></pre>"},{"location":"2009/08/31/generate-a-htpasswd-password-without-installing-apache/","title":"Generate a htpasswd password without installing Apache","text":"<p>A oneliner with Perl does the trick:</p> <pre><code>perl -le 'print crypt(\"password\", \"salt\")'\n</code></pre> <p>The output you get should be placed in a file called htpasswd. The syntax is like so:</p> <pre><code>UserName:EncryptedPassword:YourComment\n</code></pre>"},{"location":"2008/08/02/gnome-notification-area-gone/","title":"Gnome notification area gone?","text":"<p>Right, this problem has been annoying me for ages. Sometimes the Gnome Notification area will disappear, leaving applications such as Pidgin or NetworkManager lingering outside the system tray area. Very annoying. The solution?</p> <p>If you are using just one monitor, open the file named %gconf.xml located in ~/.gconf/apps/panel/general/ and add the following:</p> <pre><code>notificationarea_screen0\n</code></pre> <p>This should be added between the starting and closing entry-tags. Save and close the file, followed up by restarting your X-session. Things should be back to normal.</p> <p>Now, if you\u2019re using two monitors, with a separate X-screen on each, this will most likely happen to you. The reason behind this is that you must have only one notification area, one for both screens.</p> <p>To solve this, remove the upper panel on both screens. Re-add the panel on your main monitor as you like it, and add a notification area there. Re-add it on your second monitor as well, only this time don\u2019t add the notification area. Give it a shot, let me know if it works. :)</p>"},{"location":"2008/03/14/how-to-display-utf-8-in-your-putty-bash-shell/","title":"How to display UTF-8 in your Putty bash shell","text":"<p>My girlfriend was having some problems displaying the correct characters while talking on IRC through irssi, and putty. Eventually I came to the conclusion that it wasn\u2019t my server or irssi that was configured badly. Searching the internet I found this:</p> <pre><code>echo -ne 'e%Ge[?47he%Ge[?47l'\n</code></pre> <p>Simply put that into your .bash_profile or .bashrc and relog to your server. It\u2019s a collection of terminal escape codes that together means ESC %G \u2013 \u201cswitch to UTF-8\u201d.</p>"},{"location":"2012/05/01/how-to-google-more-efficiently/","title":"How to Google more efficiently","text":"<p>Most people these days use google.com as their preferred search engine, and most times a regular search will bring you the results you are looking for. But what if you want a more complex search? Or want to filter out some results? Well, here\u2019s a few pointers on how to Google a bit more efficiently, and some other neat tricks.</p>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2012/05/01/how-to-google-more-efficiently/#a-regular-search","title":"A regular search","text":"<p>Say that I want to search for a review for the cellphone HTC Desire Z. I could always use the string \u201cHTC Desire Z review\u201d. Or, we could do a more efficient search.</p> <p>Take the following search string as an example:</p> <p>site:engadget.com ~review \u201chtc desire z\u201d -amazon 2010..2012</p> <p>Let\u2019s break it down:</p> <ul> <li>site:engadget:com \u2013 Only searches the pages of the site engadget.com</li> <li>~review \u2013 Also searches related words, such as \u201ccheck, examine, opinion\u201d.</li> <li>htc desire z \u2013 Searches for the exact phrase, and not each word separately.</li> <li>-amazon \u2013 Excludes this term from the search.</li> <li>2010..2012 \u2013 Shows all results from within the specified timerange.</li> </ul> <p>The last element above not only works with a time-range, but also with any other type of range. For instance:</p> <ul> <li>$100..$200</li> </ul> <p>..gives you results based on a range from $100 to $200.</p>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2012/05/01/how-to-google-more-efficiently/#searching-for-filetypes","title":"Searching for filetypes","text":"<p>In certain cases you want to search for specific types of file. For instance,</p> <p>filetype:pdf linux intitle:best *distribution</p> <p>Again, lets break this down:</p> <ul> <li>filetype:pdf Searches only results of the file type you specify. .doc, .jpg, .torrent, the options are endless. Close to, anyway.</li> <li>linux \u2013 Just a regular search string.</li> <li>intitle:best \u2013 Only shows results with that word in the title (in this case, \u2018best\u2019)</li> <li>*distribution \u2013 Replaces itself with common terms in your search (in this case \u2018Arch Linux distribution\u2019, \u2018Red Hat distribution\u2019, will both be searched, among many others)</li> </ul>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2012/05/01/how-to-google-more-efficiently/#definitions","title":"Definitions","text":"<p>To find the definition of a word, use:</p> <p>define: exquisite</p>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2012/05/01/how-to-google-more-efficiently/#unit-converter","title":"Unit converter","text":"<p>Converting from one unit to another made easy:</p> <p>Distance</p> <p>54 km to miles</p> <p>Weight</p> <p>2 kg to lbs</p> <p>Currency</p> <p>150 NOK to USD</p>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2012/05/01/how-to-google-more-efficiently/#calculator","title":"Calculator","text":"<p>Also works great as a calculator:</p> <p>20*(2+4)/5-1</p>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2012/05/01/how-to-google-more-efficiently/#time","title":"Time","text":"<p>Check out what the time is in another part of the world:</p> <p>time Hong Kong</p>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2012/05/01/how-to-google-more-efficiently/#weather","title":"Weather","text":"<p>Also handy for checking the weather:</p> <p>weather Oslo</p> <p>Just a few of the things one can do with the Google search engine!</p>","tags":["Linux","Windows","convert","efficiently","google","more","tips","tricks","weather","672801457"]},{"location":"2009/08/13/how-to-join-multiple-avi-or-mpg-files-8211-part-two/","title":"How to join multiple .avi or .mpg files &#8211; Part Two","text":"<p>25th of May 2008 I wrote a post about how you could join multiple files that looked something like movie.avi.001, movie.avi.002 and so on. I found a new tool that does the job a bit easier, lxsplit. The syntax of lxsplit is like so:</p> <pre><code>[jorge@ashitaka ~]$ lxsplit \nLXSplit v0.2.4 by Richard Stellingwerff, O. Sezer.\nHome page: http://lxsplit.sourceforge.net/\n\nUsage: lxsplit [OPTION] [FILE] [SPLITSIZE]\n\nAvailable options:\n -j : join the files beginning with the given name\n -s : split the given file.  requires a valid size\nSplitsize examples: 15M, 100m, 5000k, 30000000b\n\nExamples:\n    lxsplit -s hugefile.bin 15M\n    lxsplit -j hugefile.bin.001\n</code></pre> <p>So to join all our files, we execute:</p> <pre><code>lxsplit -j movie.avi.001\n</code></pre> <p>And it will join all files named movie.avi.00{1,2,3} and so on. :)</p>"},{"location":"2008/05/25/how-to-join-multiple-avi-or-mpg-files/","title":"How to join multiple .avi or .mpg files","text":"<p>Imagine that you for some reason end up having several files, such as a.movie.avi.001, a.movie.avi.002, and so on. How do you then join them up into one big avi file? The answer is actually pretty simple \u2013 cat and mencoder.</p> <p>Do the following if you don\u2019t have mencoder installed:</p> <pre><code># yum install mencoder mplayer\n</code></pre> <p>Then:</p> <pre><code>$ cat a.movie.avi.001 a.movie.avi.002 a.movie.avi.003 &gt; a.movie.avi\n</code></pre> <p>That\u2019s pretty much it, but there\u2019s one final step before it\u2019s done.</p> <pre><code>$ mencoder -forceidx -oac copy -ovc copy a.movie.avi -o a.movie.final.avi\n</code></pre> <p>And you\u2019re done. :)</p>"},{"location":"2025/06/06/how-to-transfer-images-from-iphone-to-fedora-42/","title":"How to transfer images from iPhone to Fedora 42","text":"<p>I have an old iPhone that contains around 3-4000 images. For ages I have been wanting to transfer the images to my PC, and I did attempt it several times on Windows, with iTunes, and some other software. No such luck, as it either crashed or did not transfer all of the images. Needless to say the issue contributed to more of my hairs going grey. However! In Linux, it took me minutes!</p> <p>First off, we need to install a couple of things:</p> <pre><code>dnf install ifuse libimobiledevice-utils gvfs-afc\n</code></pre> <p>Connect your iPhone to your PC with a USB-cable, and run as root:</p> <pre><code>ideviceinfo\n</code></pre> <p>This should return information about the device. If you get nothing, it's either issues with the cable, permissions or packages.</p> <p>Now, create the mount point for your iPhone, say ~/iPhone:</p> <pre><code>mkdir ~/iPhone\n</code></pre> <p>and now the magic. We mount the unit using ifuse and use rsync to copy over the files. There should be a DCIM folder under ~/iPhone after having it mounted, that should contain your images and videos. As for your destination folder, in this case ~/Pictures/iPhone, make sure that it exists first!</p> <pre><code>ifuse ~/iPhone\nrsync -av ~/iPhone/DCIM ~/Pictures/iPhone/\n</code></pre> <p>When the sync has been completed, unmount the device:</p> <pre><code>fusermount -u ~/iphone\n</code></pre> <p>and that should be it! Hopefully you now have your pictures at ~/Pictures/iPhone/!</p>","tags":["iphone","fedora42","image-transfer","libimobiledevice","linux","rsync"]},{"location":"2020/03/17/how-to-unregister-viscosity/","title":"How to unregister Viscosity","text":"<p>I was helping a colleague of mine set up VPN, with the client Viscosity to be specific, on macOS. During the process of setting it up, we noticed that remains of an old license, from another place, was still there. When she tried connecting to one of our remote servers, she got the following error:</p> <p>This copy of Viscosity is registered using a license that does not allow connections to one or more of the remote servers for this connection. Please contact your VPN Provider for further details.</p> <p>Tried searching for options to unregister the old license, but there was nothing visible in the GUI. I finally found a solution though, but it needs to be done in the terminal.</p> <pre><code>defaults delete com.viscosityvpn.Viscosity License\n</code></pre> <p>Then press Enter. Now start Viscosity again, and it should no longer give you that error. If your trial period has ended, you will have to enter a new valid license.</p>","tags":["license","macOS","unregister","viscosity","vpn"]},{"location":"2025/03/14/getting-the-hp-usb-ca-universal-dock-g2-working-with-fedora-41/","title":"Getting the HP USB-C/A Universal Dock G2 working with Fedora 41","text":"<p>I have a HP Elitebook 840 G7 that I use along with a HP USB-C/A Universal Dock G2. Now, this has been working fine in Windows, but when I changed to Fedora, not so much. I had to plug in my HDMI cable directly to the laptop, and not the docking station. It just wasn't working. This is what I did to fix the issue.</p> <p>First, install mokutil and and dkms, then check if you have SecureBoot enabled:</p> <pre><code>sudo dnf -y install mokutil dkms\nsudo mokutil --sb-state\n</code></pre> <p>If SecureBoot is enabled, it should return:</p> <pre><code>SecureBoot enabled\n</code></pre> <p>Now download the latest displaylink-rpm from https://github.com/displaylink-rpm/displaylink-rpm/releases. In this case we need to download:</p> <p>https://github.com/displaylink-rpm/displaylink-rpm/releases/download/v6.1.0-3/fedora-41-displaylink-1.14.8-1.github_evdi.x86_64.rpm</p> <p>Now install the package:</p> <pre><code>sudo dnf install fedora-41-displaylink-1.14.8-1.github_evdi.x86_64.rpm\n</code></pre> <p>Make sure that the following files exist. If they do not, download the RPM again and give it another shot:</p> <pre><code>/var/lib/dkms/mok.key\n/var/lib/dkms/mok.pub\n</code></pre> <p>If they exist, great! Now we have to set a password. Run the command:</p> <pre><code>sudo mokutil --import /var/lib/dkms/mok.pub\n</code></pre> <p>Enter a password of your choice, twice.</p> <p>Now, reboot.</p> <p>When you do so, you will get to the MOK Manager EFI interface. Press any key before the system boots. If you can't make it, no worries. Just import the mok.pub file again, and reboot. Then select:</p> <ul> <li>Enroll MOK</li> <li>Continue</li> <li>Yes to Enroll the keys</li> <li>Type in the password you provided</li> <li>Reboot</li> </ul> <p>When the system is up, run:</p> <pre><code>sudo dkms autoinstall\n</code></pre> <p>..to build and sign evdi module by MOK.</p> <p>Everything should then be set. Verify that everything works by running:</p> <pre><code>sudo dkms status\n</code></pre> <p>the output should be something like:</p> <pre><code>evdi/1.14.8 6.12.6-200.fc41.x86_64, x86_64: installed\n</code></pre> <p>Also check with:</p> <pre><code>sudo systemctl status displaylink\n</code></pre> <p>..to see that the service is running as it should.</p> <p>Now connect your HDMI cable to the docking station, and the USB-C to your laptop. It should work! If not, reboot, and give it another try.</p> <p>Good luck!</p>","tags":["linux","fedora","displaylink","docking-station","secureboot","dkms","hp","elitebook","usb-c"]},{"location":"2009/07/17/increasing-the-speed-of-samba/","title":"Increasing the speed of Samba","text":"<p>Often found that Samba is slow, for some reason?</p> <p>The socket option TCP_NODELAY is the one that seems to make the biggest single difference for most networks. Many people report that adding socket options = TCP_NODELAY doubles the read performance of a Samba drive. The best explanation I have seen for this is that the Microsoft TCP/IP stack is slow in sending TCP ACKs.</p> <p>Simply add this following line under the [global]-section of your smb.conf:</p> <pre><code>ocket options = TCP_NODELAY  IPTOS_LOWDELAY SO_SNDBUF=65535 SO_RCVBUF=65535\n</code></pre> <p>And restart the service. Notice the difference?</p> <p>If not, it might be a problem with Windows. Often a speed problem can be traced to the client. The client (for example Windows for Workgroups) can often be tuned for better TCP performance. Check out this article to find out more about what you can do to increase the speed.</p> <p>Good luck!</p>"},{"location":"2009/06/21/installing-add-ons-globally-on-firefox/","title":"Installing add-ons globally on Firefox","text":"<p>Most often when creating different profiles in Firefox, you use them for various things. One profile might have all the web-developer tools and add-ons you need in order to be your geeky self, while profile number two has your gamer-add-ons, which you don\u2019t want to mix. But what if you want certain add-ons to be global? So when you do create a second profile, you won\u2019t have to reinstall the same add-on twice, or more. The answer? Installing things through the command line.</p> <p>For instance, let\u2019s take the add-on AdBlock Plus. Great add-on. I for one want it on every Profile. So instead of doing it through the browser-interface, installing it once for every profile, do it through the command line, globally.</p> <p>Become root and grab the add-on:</p> <pre><code>And then install it globally:\nfirefox -install-global-extension /root/adblock_plus-1.0.2.xpi\n\nAnd presto, the addon should now be located in /usr/lib/firefox/extensions, available for all profiles.\nNifty huh?\n</code></pre>"},{"location":"2015/03/06/introduction-to-cron/","title":"Introduction to cron","text":"<p>cron is a time-based job scheduler. This piece of software utility is used when you need to have a program run repeatedly at set time.</p> <p>The daemon that runs in the background is named crond, while the file that contains the jobs themselves is named crontab.</p> <p>You have three main directories:</p> <ul> <li>/etc/crontab is the main system crontab file.</li> <li>/var/spool/cron/ a directory for storing crontabs defined by users.</li> <li>/etc/cron.d/ a directory for storing system crontabs.</li> </ul>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#creating","title":"Creating","text":"<p>Creating a crontab-file for your user is easy. Usage depends on what you need to do.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#edit","title":"Edit","text":"<pre><code>crontab -e\n</code></pre> <p>This command will allow you to edit the current user\u2019s crontab. If a crontab doesn\u2019t already exist, it will create a new one once you have saved your changes.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#edit-another-users-crontab","title":"Edit another user\u2019s crontab","text":"<pre><code>crontab -u jorge -e\n</code></pre> <p>You can also edit another user\u2019s crontab, but only if you have the correct permissions in place to do so.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#list","title":"List","text":"<pre><code>crontab -l\n</code></pre> <p>or</p> <pre><code>crontab -u jorge -l\n</code></pre> <p>..to list another user\u2019s crontab.</p> <p>These are the most common usages of the command crontab. For a couple of more options, see man crontab.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#syntax","title":"Syntax","text":"<p>The syntax of a crontab-file looks like this:</p> <pre><code>* * * * * /path/to/program\n</code></pre> <p>Each asterisk represents a field. Starting from left to right, the fields are as follows:</p> <ul> <li>Minute (0 \u2013 59)</li> <li>Hour (0 \u2013 23)</li> <li>Day of month (1 \u2013 31)</li> <li>Month (1 \u2013 12)</li> <li>Day of week (0 \u2013 7, where 0 and 7 is Sunday)</li> </ul> <p>On the fields Month and Day of the week, you can also use names instead of numeric values.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#operators","title":"Operators","text":"<p>There are various operators that you can use with cron. Here\u2019s the list:</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#asterisk","title":"Asterisk (*)","text":"<p>An asterisk (*) is used to indicate that every instance (i.e. every hour, every weekday, etc.) of the particular time period will be used. So if you use an asterisk in the field Hour, it means that it will run every hour.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#comma","title":"Comma (,)","text":"<p>With this operator you can specify a list of values. If you use 1,5 in the field Day of week, this would mean Monday and Friday.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#dash-","title":"Dash (-)","text":"<p>While comma specifies a list of values, dash specifies a range. 1-5 in the field Day of week would mean Monday to Friday.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#forward-slash","title":"Forward slash (/)","text":"<p>Forward slash specifies a step value. If you\u2019d like to execute a command every other hour, you could use 0-23/. You can also use steps after an asterisk, so if you want the command to run every two hours instead, use */2.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#examples","title":"Examples","text":"","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#first","title":"First","text":"<pre><code>45 14 1 * * /home/jorge/backup.sh\n</code></pre> <p>In this example the script backup.sh runs at 14:45, the first day of the month, every month.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#second","title":"Second","text":"<pre><code>30 04 1,15 * 5 /home/jorge/list_files.sh\n</code></pre> <p>This line runs the command list_files.sh at 04:30 on the 1st and 15th of each month, plus every Friday.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#third","title":"Third","text":"<pre><code>00 08 * * 1-5 /home/jorge/wake_up.sh\n</code></pre> <p>The line above runs the command wake_up.sh at 08:00, Monday to Friday.</p>","tags":["cron","crontab","linux"]},{"location":"2015/03/06/introduction-to-cron/#fourth","title":"Fourth","text":"<pre><code>*/5 * * * * * /home/jorge/annoy_wife.sh\n</code></pre> <p>..and this line would run the program annoy_wife.sh every five minutes, every day.</p> <p>As always, if you want to know more about cron, check out the command man cron.</p> <p>Have fun!</p>","tags":["cron","crontab","linux"]},{"location":"2010/08/10/introduction-to-irssi/","title":"Introduction to irssi","text":"<p>There are a load of IRC clients for UNIX-based systems out there, but I personally feel that irssi suits me best. Incredibly flexible, adjustable for every user, and doesn\u2019t depend on X to be able to run it. Haven\u2019t really found a guide out there that explains things in an easy and understandable manner, aimed particularly at new users. So here\u2019s my attempt at it.</p>"},{"location":"2010/08/10/introduction-to-irssi/#getting-started","title":"Getting started","text":"<p>What we need, of course, is irssi itself. You can get it at http://www.irssi.org/download, or use your system\u2019s package manager to download it.</p> <pre><code>yum install irssi\n</code></pre> <p>..for RPM-based systems.</p> <pre><code>sudo aptitude install irssi\n</code></pre> <p>..for Debian/Ubuntu type of distributions.</p> <p>Now, once installed, you can fire up irssi by typing</p> <pre><code>irssi\n</code></pre> <p>..in the commandline. You should now be running irssi, whoo!</p>"},{"location":"2010/08/10/introduction-to-irssi/#customizing-the-settings","title":"Customizing the settings","text":"<p>Now that irssi is up and going, you can change the settings, adjust it so that if suits you. By typing:</p> <pre><code>/SET \n</code></pre> <p>you will get a list of settings. For instance, let\u2019s try out /SET nick. This is what pops up:</p> <pre><code> [completion]\n completion_nicks_lowercase = OFF\n [lookandfeel]\n hilight_nick_matches = ON\n query_track_nick_changes = ON\n show_nickmode = ON\n show_nickmode_empty = ON\n show_own_nickchange_once = OFF\n [misc]\n netjoin_max_nicks = 10\n netsplit_max_nicks = 10\n netsplit_nicks_hide_threshold = 15\n [server]\n alternate_nick = joenba7_\n nick = joenba7\n</code></pre> <p>Here you see the various settings containing the word nick. irssi will automatically set your nick based on your account name. So if your username on your machine is foo, irssi will set your nick to foo. You can of course change this:</p> <pre><code>/SET nick joenba7\n/SET alternate_nick joenba7_\n</code></pre> <p>..followed up by a /SAVE and /RELOAD to save and reload the settings.</p> <p>Note: Every time you change a default setting, you will have to use /SAVE to save the configuration.</p>"},{"location":"2010/08/10/introduction-to-irssi/#connecting-to-an-irc-network","title":"Connecting to an IRC-network","text":"<pre><code>/SERVER powertech.no.eu.dal.net\n</code></pre> <p>This will then connect me to the server powertech.no.eu.dal.net on the DALnet network. At the same time though, I\u2019d like to be on the EFnet network. You can connect to multiple networks by typing:</p> <pre><code>/CONNECT irc.homelien.no\n</code></pre> <p>This connects you to the EFnet network as well. You are perhaps wondering how you can change from one network to the other? Look at your status-window. This is usually window number 1. Use ALT-1 or ESC-1 to change to that window. Right now my active network is EFnet, on the server irc.homelien.no. Which means that I\u2019m seeing this:</p> <pre><code>[08:38] [joenba7(+i)] [1:homelien (change with ^X)]\n</code></pre> <p>\u00abChange with ^X\u00bb \u2013 As you\u2019ve probably guessed, ^X means Ctrl-X, so upon pressing it, you will change your active network. You will see something like this in your status window:</p> <pre><code>08:38 -!- Irssi: Changed to server powertech.no.eu.dal.net\n</code></pre> <p>To disconnect from one of the servers, or stop irssi\u2019s attempt at reconnecting, use:</p> <ul> <li>/DISCONNECT  \u2013 Disconnects server with tag network.</li> <li>/DISCONNECT recon-1 \u2013 Cancels an attempt to connect to the server named recon-1.</li> <li>/RMRECONNS \u2013 Cancels all attempts to reconnect.</li> <li>/RECONNECT recon-1 \u2013 Will attempt to reconnect you to recon-1.</li> <li>/RECONNECT ALL \u2013 Will attempt to reconnect to all the servers in the reconnection queue.</li> </ul>"},{"location":"2010/08/10/introduction-to-irssi/#navigation","title":"Navigation","text":"<p>You can scroll upwards/downwards with the Page Up / Page Down keys. If they aren\u2019t working for you, you can use Meta-p / Meta-n, where Meta can be ESC and/or ALT.</p> <p>Default behavior is that irssi pretty much creates hidden windows for just about everything. Hidden windows are created every time you join a channel or start a conversation. There are different ways to switch between them:</p> <ul> <li>Meta-1 .. Meta-0 \u2013 Switch between window 1-10.</li> <li>Meta-q .. Meta-o \u2013 Switch between window 11-19.</li> <li>/WINDOW \u2013 Switch to window number .</li> <li>Ctrl-p / Ctrl-n \u2013 Switch to the previous/next window.</li> </ul>"},{"location":"2010/08/10/introduction-to-irssi/#adding-networks-servers-and-channels","title":"Adding networks, servers and channels","text":"<p>On the network DALnet you have a function called Nickserv, which lets you register a nick, so that you can become the owner of it. To be able to use this nick you will have to identify to it when logging on to the IRC network. It\u2019s a bit tiresome having to type /nickserv identify every time you connect. I\u2019m assuming you want this a bit more automated? I at least do. :) But before we do this we have to do a couple of things. Like adding a network:</p> <p>Note: use /IRCNET with version 0.8.9 and older.</p> <pre><code>/NETWORK ADD \n</code></pre> <p>For example:</p> <pre><code>/NETWORK ADD DALnet\n</code></pre> <p>To remove the network, use:</p> <pre><code>/NETWORK REMOVE \n</code></pre> <p>If you\u2019d like to execute a command when logging on, like identifying to your nick, use -autosendcmd:</p> <pre><code>/NETWORK ADD -autosendcmd \"/nickserv identify  ;wait -DALnet 2000\" DALnet\n</code></pre> <p>The command above automatically sends the identify-command to Nickserv when you log on. The -wait 2000 tells irssi to wait two seconds after having logged on to the server before sending the command.</p> <p>Now that we\u2019ve added a network, we need servers to go along with it. The command to do so is:</p> <pre><code>/SERVER ADD -network DALnet powertech.no.eu.dal.net 6667\n</code></pre> <p>If you\u2019d like to automatically connect to this server when you start irssi, simply add an -auto right after ADD. Specifying the port is optional.</p> <p>So, first network, then server, now for a channel:</p> <pre><code>/CHANNEL ADD -auto #linuxhjelp DALnet [password]\n</code></pre> <p>[password] is optional, use of it depends on if the channel you\u2019re trying to join needs a password to be accessed.</p>"},{"location":"2010/08/10/introduction-to-irssi/#logging","title":"Logging","text":"<p>irssi has the ability to log both away-messages and regular conversations in channels. Logging for away messages is enabled by default, but not regular logging. First, it\u2019s possible to define what the away-log should log:</p> <ul> <li>/SET awaylog_level MSGS HILIGHT \u2013 Defines what kind of messages to log.</li> <li>/SET awaylog_file ~/.irssi/away.log \u2013 Defines the file the log should write to.</li> </ul> <p>The easiest way of enabling logging, and not just away messages, is to execute:</p> <pre><code>/SET autolog ON\n</code></pre> <p>Per default irssi logs to ~/irclogs/something.log. This can be defined by:</p> <pre><code>/SET autolog_path ~/irclogs/$tag/$0.log\n</code></pre> <p>That is the default value. The path will automatically be created if it doesn\u2019t exist. $0 points to the target (channel/nick). You can make irssi to automatically rotate the logs by adding a time/date stamp to the filename. You find more about the formatting used by typing man strftime in your commandline. Example:</p> <pre><code>/SET autolog_path ~/irclogs/%Y/$tag/$0.%m-%d.log\n</code></pre> <p>%Y for year, %m for month and %d for day.</p> <p>For more information about logging have a look at:</p> <pre><code>/HELP LOG\n</code></pre>"},{"location":"2010/08/10/introduction-to-irssi/#scripts","title":"Scripts","text":"<p>If you\u2019ve used other IRC clients, you\u2019ve probably encountered the possibility to use scripts. Scripts can be used for various things, from showing a channel what song you\u2019re currently playing to flaunting your machine\u2019s hardware specs. A good site for scripts is http://scripts.irssi.org.</p> <p>The scripts you download should be placed in ~/.irssi/scripts/. If the folder doesn\u2019t exist, create it yourself. Once the script is placed there, you can load it in your irssi by doing a:</p> <pre><code>/SCRIPT LOAD ~/.irssi/scripts/TheScript.pl\n</code></pre> <p>This is a good approach if you don\u2019t want certain scripts to load when irssi starts. If you do however want them to load when starting irssi, create a symlink in the folder ~/.irssi/scripts/autorun, just create the folder if it doesn\u2019t exist. symlink, what\u2019s that? Well, it\u2019s a special type of file that contains a reference to another file or directory in the form of an absolute or relative path. So in other words:</p> <pre><code>cd ~/\nwget http://scripts.irssi.org/scripts/splitlong.pl\nmkdir -p ~/.irssi/scripts/autorun\nmv ~/splitlong.pl ~/.irssi/scripts\ncd ~/.irssi/scripts/autorun\nln -s ../splitlong.pl\n</code></pre> <p>So the file is really in ~/.irssi/scripts, but you\u2019ve made a shortcut to it from ~/.irssi/scripts/autorun. Pretty neat if you ask me.</p> <p>To unload a script simply use:</p> <pre><code>/SCRIPT UNLOAD \n</code></pre>"},{"location":"2010/08/10/introduction-to-irssi/#minor-adjustments","title":"Minor adjustments","text":"<p>It\u2019s not just what I\u2019ve mentioned above that you can adjust and customize to your own liking. Another thing is the use of themes. You\u2019re probably using the default blue theme that irssi comes with, which is just fine for my use, but perhaps not for you. I do however like the minor modification just for kicks.</p> <p>Every time you use /SAVE, a message like this will appear in your status window:</p> <pre><code>08:38 -!- Irssi: Saved configuration to file /home/jorge/.irssi/config\n08:38 -!- Irssi: Theme saved to /home/jorge/.irssi/default.theme\n</code></pre> <p>Settings are stored in the configuration file named config and the theme in default.theme. Both files are editable through a text editor. I\u2019ve never really changed things manually in the config-file, but I\u2019ve tampered with default.theme a bit, like what my own nick appears to me. Default appearance of your nick is like so:</p> <pre><code>\n</code></pre> <p>Where YourNick is in bold white, while the inequality signs are in gray.</p> <p>Open the file ~/.irssi/default.theme and find the line that says something like:</p> <pre><code>ownmsgnick = \"{msgnick $0 $1-}\";\n</code></pre> <p>Change this to:</p> <pre><code>ownmsgnick = \"%R%n %|\";\n</code></pre> <p>This will make the inequality signs turn red. Your nick will still be in white bold. But you can always change the inequality signs to something else. For instance:</p> <pre><code>ownmsgnick = \"%Y(%n$0$1-%Y)%n %|\";\n</code></pre> <p>Will make the parenthesis turn yellow. If you want to change the color of your nick, from default white to something else, find this line:</p> <pre><code>ownnick = \"%W$*%n\";\n</code></pre> <p>..and replace it with the color you want:</p> <pre><code>ownnick = \"%G$*%n\";\n</code></pre> <p>For a nice overview of colors, check out http://irssi.org/documentation/formats, and for more information about irssi, visit http://www.irssi.org/.</p>"},{"location":"2013/09/19/introduction-to-lsof/","title":"Introduction to lsof","text":"<p>Today I\u2019m going to introduce you to the exciting world of lsof.</p> <p>As you will see, it\u2019s a nifty little tool that has various uses, and it has so many switches that you need both a \u2013 and a + to use all the options available! As the description of the command says in its man-page:</p> <p>lsof \u2013 list open files</p> <p>So, let\u2019s get started.</p>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#network","title":"Network","text":"","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-network-connections","title":"List network connections","text":"<pre><code>$ lsof -i\nCOMMAND    PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nssh        868 jorge    3u  IPv4  12710      0t0  TCP j-laptop.fbarr.lan:55908-&gt;login.redpill-linpro.com:ssh (ESTABLISHED)\nchrome     967 jorge  114u  IPv4 372589      0t0  TCP j-laptop.fbarr.lan:44756-&gt;edge-star-ecmp-04-ams2.facebook.com:https (ESTABLISHED)\n...\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-tcpudp-connections","title":"List TCP/UDP connections","text":"<pre><code>$ lsof -i TCP\n\ufeff\ufeffCOMMAND    PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nchrome     967 jorge  203u  IPv4 403952      0t0  TCP j-laptop.fbarr.lan:35942-&gt;173.192.82.194-static.reverse.softlayer.com:http (ESTABLISHED)\nssh        868 jorge    3u  IPv4  12710      0t0  TCP j-laptop.fbarr.lan:55908-&gt;login.acme.com:ssh (ESTABLISHED)\n</code></pre> <p>Simply replace TCP with UDP to see UDP connections.</p>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-connections-related-to-a-port","title":"List connections related to a port","text":"<pre><code>$ lsof -i :22\nCOMMAND  PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nssh     1742 jorge    3u  IPv4 448777      0t0  TCP j-laptop.fbarr.lan:36484-&gt;j-desktop.fbarr.lan:22 (ESTABLISHED)\nssh     5409 jorge    3u  IPv4  73369      0t0  TCP j-laptop.fbarr.lan:45986-&gt;j-server.fbarr.lan:22 (ESTABLISHED)\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-connections-related-to-a-host","title":"List connections related to a host","text":"<pre><code>$ lsof -i @192.168.1.1\nCOMMAND PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\nchrome  967 jorge  143u  IPv4 526978      0t0  TCP j-laptop.fbarr.lan:38571-&gt;calcifer.fbarr.lan:https (ESTABLISHED)\n</code></pre> <p>..and port:</p> <pre><code>$ lsof -i @192.168.1.1:443\nchrome  967 jorge  143u  IPv4 526978      0t0  TCP j-laptop.fbarr.lan:38571-&gt;calcifer.fbarr.lan:https (ESTABLISHED)\n</code></pre> <p>It\u2019s also possible to provide a port-range:</p> <pre><code>$ lsof -i :443-1000\nCOMMAND   PID  USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME\nchrome   4598 jorge   64u  IPv4   68058      0t0  TCP j-laptop.fbarr.lan:35515-&gt;do-20.lastpass.com:https (ESTABLISHED)\nchrome   4598 jorge   98u  IPv6 5251212      0t0  TCP j-laptop.fbarr.lan:43729-&gt;lb-in-x5e.1e100.net:https (ESTABLISHED)\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-connections-with-status-listen","title":"List connections with status LISTEN","text":"<pre><code>$ sudo lsof -i | grep LISTEN\nsshd      11903  root    3u  IPv4 549183      0t0  TCP *:ssh (LISTEN)\nsshd      11903  root    4u  IPv6 549185      0t0  TCP *:ssh (LISTEN)\n</code></pre> <p>Replace LISTEN with ESTABLISHED, and various other options, to grab what you\u2019re looking for.</p>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-ipv4ipv6-connections","title":"List IPv4/IPv6 connections","text":"<pre><code>$ lsof -i 4\nCOMMAND   PID  USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME\nchrome   4598 jorge   64u  IPv4   68058      0t0  TCP j-desktop.fbarr.lan:35515-&gt;do-20.lastpass.com:https (ESTABLISHED)\nmutt    14654 jorge    3u  IPv4   41678      0t0  TCP j-desktop.fbarr.lan:57323-&gt;87.144.18.114:imaps (ESTABLISHED)\n\n$ lsof -i 6\nCOMMAND   PID  USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME\nchrome   4598 jorge  127u  IPv6 5278504      0t0  TCP j-desktop.fbarr.lan:42348-&gt;lb-in-x5d.1e100.net:https (ESTABLISHED)\nchrome   4598 jorge  182u  IPv6  132082      0t0  TCP j-desktop.fbarr.lan:59281-&gt;arn02s06-in-x0e.1e100.net:https (ESTABLISHED)\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#users-processes-and-files","title":"Users, processes and files","text":"<p>lsof not only is useful for network-related tasks, but works excellent for users, processes and files.</p>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-open-files-of-user","title":"List open files of user","text":"<pre><code>$ lsof -u jorge\n...\nCOMMAND     PID  USER   FD      TYPE     DEVICE SIZE/OFF    NODE NAME\nlsof      26305 jorge  txt       REG        8,3   146236  294089 /usr/bin/lsof\nlsof      26305 jorge  mem       REG        8,3    46816  276251 /usr/lib/libnss_files-2.18.so\nlsof      26305 jorge  mem       REG        8,3  1607632  294020 /usr/lib/locale/locale-archive\n...\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-processes-by-pid","title":"List processes by PID","text":"<pre><code>$ lsof -n -p 25 -p 45\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-processes-by-name","title":"List processes by name","text":"<pre><code>$ lsof -n -c urxvt\nCOMMAND  PID  USER   FD      TYPE             DEVICE SIZE/OFF    NODE NAME\nurxvtd  1749 jorge  txt       REG                8,1  1299408 3431669 /usr/bin/urxvtd\nurxvtd  1749 jorge  mem       REG                8,1    51808 3411196 /usr/lib/libnss_files-2.18.so\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-connections-to-a-file","title":"List connections to a file","text":"<pre><code>$ sudo lsof /var/log/Xorg.0.log\nCOMMAND PID USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME\nX       400 root    0w   REG    8,1    30052 7602187 /var/log/Xorg.0.log\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#hup-a-process","title":"HUP a process","text":"<pre><code>$ kill -HUP `lsof -t -c chrome`\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#kill-all-of-a-users-processes","title":"Kill all of a user\u2019s processes","text":"<pre><code>$ kill -9 `lsof -t -u jorge`\n</code></pre>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2013/09/19/introduction-to-lsof/#list-all-open-files-without-a-link","title":"List all open files without a link","text":"<pre><code>$ lsof +L1\n</code></pre> <p>These files have been deleted, but one or several processes are keeping the files open. Though it might appear that the files are deleted from the filesystem, both the files and the blocks are being preserved.</p> <p>These are just a few of the things you can do with lsof. I hope this tutorial has made you a little bit smarter!</p>","tags":["connections","file","filesystem","linux","list","lsof","network","process","tcp","tutorial","udp"]},{"location":"2011/02/09/introduction-to-screen/","title":"Introduction to screen","text":"<p>screen is for many people an unknown program and tool, but those who do know it consider it to be an essential one. This is because of the functionality of the program, that can end up saving you a lot of work and time. You can run any number of console-based applications \u2013 editors, mail clients, browsers, in just a single terminal. Sometimes it\u2019s useful to have a terminal for each console-based application you\u2019re running, but sometimes not, obviously.</p> <p>For my part, the main reason for me using screen is the ability to decouple the terminal emulator from the running programs. In other words, I can detach and reattach things as I please. To put it in simple terms; it\u2019s a tool for session management. Let\u2019s go ahead with an example.</p> <p>You are logged into your remote server via SSH, working on some configuration file, when suddenly you lose connection to it. Almost done, having spent hours, you grab your laptop in anger and smack the closest unfortunate person next to you. Not only have you lost valuable work, but soon enough people with shields, guns and helmets will come after you. Imagine, with screen, it could have been avoided! Had you been editing the configuration file within a screen, and should you have lost connection, the editing would still be in an active screen session, allowing you to detach and reattach the screen to your terminal once you logged back in.</p> <p>Let\u2019s have a closer look at what we can do with screen.</p>"},{"location":"2011/02/09/introduction-to-screen/#starting-screen","title":"Starting screen","text":"<pre><code>screen\n</code></pre> <p>If installed, you probably won\u2019t get a message about having entered a screen session, but I\u2019m sure you have. Everything functions just like a normal shell, except for a few special characters. screen uses the command Ctrl-A as a signal to screen instead of the shell.</p> <p>To see the help page for screen, press Ctrl-A, then press ?. In other words:</p> <pre><code>^A ?\n</code></pre> <p>As you can see here, Ctrl is represented by the ^, A is A, and well, you get the rest.</p> <p>To start a program directly into screen, just type screen . Let\u2019s use top as an example.</p>"},{"location":"2011/02/09/introduction-to-screen/#using-screen","title":"Using screen","text":"<p>Fire it up:</p> <pre><code>screen top\n</code></pre> <p>top is started in the usual way, just inside a screen session. To detach the session and let it run in the background, use Ctrl-a d:</p> <pre><code>Ctrl-a d (^a d)\n</code></pre> <p>Once your session is detached you can list the available screen sessions by using:</p> <pre><code>screen -ls\n</code></pre> <p>The output you\u2019ll see will be something along the lines of:</p> <pre><code>[jorge@cat ~]$ screen -ls\nThere is a screen on:\n    26606.pts-39.cat    (Detached)\n1 Socket in /var/run/screen/S-jorge.\n</code></pre> <p>To reattach the screen session to your current terminal, you can use screen -dr . In this case it would be:</p> <pre><code>screen -dr 26606\n</code></pre> <p>This brings up an interesting question though. How can you differentiate what multiple screen sessions are holding, if you can only read the process number? Easy \u2013 you give each screen session a name. For most people, a name is easier to remember than a number. So, we start a new screen, in which we\u2019re going to open an IRC client called irssi. Let\u2019s use -S:</p> <pre><code>screen -S irc irssi\n</code></pre> <p>Entering irssi, we detach the session with Ctrl-a d, and do a screen -ls to see what we\u2019ve got now:</p> <pre><code>[jorge@cat ~]$ screen -ls\nThere are screens on:\n    26606.pts-39.cat    (Detached)\n    26702.irc    (Detached)\n2 Sockets in /var/run/screen/S-jorge.\n</code></pre> <p>There you clearly see the name irc that we entered earlier, and the session holding top, which we started up even before being able to specify a name. Pretty handy, huh? This is particularly hand if you\u2019re only going to have one application in the screen session. If more, it would probably be better to have a more descriptive session name of some sort.</p>"},{"location":"2011/02/09/introduction-to-screen/#sharing-a-screen","title":"Sharing a screen","text":"<p>If someone else, or you, has created a screen, and would like to share with someone else what you\u2019re doing, then screen -x does the trick. Simply use:</p> <pre><code>screen -x irc\n</code></pre> <p>..if irc is the name of the session, or the process ID. Once done, you should have enabled multi display mode. And if you find out that the screen you have taken part of doesn\u2019t match up to the size of your own terminal, simply use:</p> <pre><code>Ctrl-a F (^a F)\n</code></pre> <p>..to force it to match up to the dimensions.</p>"},{"location":"2011/02/09/introduction-to-screen/#multiple-applications-in-one-session","title":"Multiple applications in one session","text":"<p>Now I\u2019ve introduced you to the basics of using screen. Let\u2019s proceed with using screen with multiple applications. Detach and resume the screen session called irc with:</p> <pre><code>screen -dr irc\n</code></pre> <pre><code>nano\n</code></pre> <p>And the application will start. Let\u2019s give this internal screen session a name. Press Ctrl-a Shift-a (a A). Notice that a is different from A (capital A).</p> <p>You will be asked:</p> <pre><code>Set window's title to:\n</code></pre> <p>Type editor and press enter.</p>"},{"location":"2011/02/09/introduction-to-screen/#navigating-within-the-screens","title":"Navigating within the screens","text":"<p>You can switch between the various applications by pressing Ctrl-a 0-9, so:</p> <pre><code>Ctrl-a 0\n</code></pre> <p>will go to the first application, irssi in this case. Other ways of navigating is by using</p> <pre><code>Ctrl-c Ctrl-n (next window)\n\nCtrl-c Ctrl-p (previous window)\n</code></pre> <pre><code>Ctrl-a \" (^a \")\n</code></pre> <p>You\u2019ll get a list that looks something like:</p> <pre><code>Num Name                                                                   Flags\n\n  0 irssi                                                                      $\n  1 nano                                                                       $\n</code></pre> <p>Use your Up/Down arrows and press enter to select a shell to go to.</p>"},{"location":"2011/02/09/introduction-to-screen/#clearing-destroyed-sessions","title":"Clearing destroyed sessions","text":"<pre><code>screen -wipe\n</code></pre>"},{"location":"2011/02/09/introduction-to-screen/#splitting-windows","title":"Splitting windows","text":"<pre><code>Ctrl-a Shift-s (^a S)\n</code></pre> <pre><code>Ctrl-a TAB (^a TAB)\n</code></pre> <p>Now that you\u2019re in the new area, there\u2019s not much to do but to create another shell, so do it with:</p> <pre><code>Ctrl-a Ctrl-c (^a ^c)\n</code></pre> <p>From here you can start another application in the regular way, and give the internal shell a name of its own.</p> <p>If you want to close the application in the bottom area, do it as normal, then to kill the area, press:</p> <pre><code>Ctrl-a Shift-x (^a X)\n</code></pre> <p>If you want to kill every area EXCEPT then one you\u2019re currently in, you can use:</p> <pre><code>Ctrl-a Shift-q (^a Q)\n</code></pre> <p>And that\u2019s pretty much it when it comes to screen. For more information, check out the command:</p> <pre><code>man screen\n</code></pre> <p>Good luck!</p>"},{"location":"2014/01/19/introduction-to-strace/","title":"Introduction to strace","text":"<p>There will come a time when you will find yourself asking \u201cWhat the heck is that process doing?\u201d. To uncover the mysteries behind the behaviour of a process, we have a tool called strace.</p> <p>The program strace is very handy when you want to debug the execution of a program. It catches and states all the system calls performed called by a process. It will also catch and state any inter-process signals received by this process.</p> <p>Let\u2019s dive into some examples.</p>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#trace-the-execution","title":"Trace the execution","text":"<pre><code>strace ls\n</code></pre> <p>..is the simple straight-forward way to use it. The output might look something like:</p> <pre><code>execve(\"/bin/ls\", [\"ls\"], [/* 32 vars */]) = 0\nbrk(0)                                  = 0x1117000\nmmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fe7c5bc2000\naccess(\"/etc/ld.so.preload\", R_OK)      = -1 ENOENT (No such file or directory)\nopen(\"/etc/ld.so.cache\", O_RDONLY|O_CLOEXEC) = 3\nfstat(3, {st_mode=S_IFREG|0644, st_size=69243, ...}) = 0\nmmap(NULL, 69243, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7fe7c5bb1000\nclose(3)                                = 0\nopen(\"/lib64/libselinux.so.1\", O_RDONLY|O_CLOEXEC) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\240d\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nfstat(3, {st_mode=S_IFREG|0755, st_size=142136, ...}) = 0\nmmap(NULL, 2242712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7fe7c5780000\nmprotect(0x7fe7c57a1000, 2093056, PROT_NONE) = 0\n...\n</code></pre> <p>The output looks a bit messy, but it can provide very useful information like which files does this program use, what is this program doing right now or why does this program not read the config file \u2013 does it even look for it?</p>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#attach-to-an-existing-process","title":"Attach to an existing process","text":"<p>You can run strace on a process that\u2019s already running. Use -p, and provide the Process ID (PID):</p> <pre><code>pidof urxvtd\n772\nstrace -p 772\n</code></pre> <p>The output presented to you is similar to the example above. Notice that you can only trace a process you have access rights to. Multiple -p options will also trace these processes with a limit of 32 processes that strace can attach to.</p>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#trace-child-processes","title":"Trace child processes","text":"<p>Use -f to trace child processes as they are created by currently traced processes. This is useful for debugging a program that spawns children. strace will prepend the pid of the traced process output:</p> <pre><code>strace -f ls\n</code></pre>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#trace-specific-system-calls","title":"Trace specific system calls","text":"<pre><code>strace -e open ls\n</code></pre> <p>The e-flag, along with the call open, displays only open system calls of the ls command, which outputs something along these lines:</p> <pre><code>...\nopen(\"/lib64/libdl.so.2\", O_RDONLY|O_CLOEXEC) = 3\nopen(\"/lib64/libattr.so.1\", O_RDONLY|O_CLOEXEC) = 3\nopen(\"/lib64/libpthread.so.0\", O_RDONLY|O_CLOEXEC) = 3\nopen(\"/proc/filesystems\", O_RDONLY)     = 3\nopen(\"/usr/lib/locale/locale-archive\", O_RDONLY|O_CLOEXEC) = 3\nghost  ghost.zip\n+++ exited with 0 +++\n</code></pre> <p>With the above example, close to the end, you can see two things \u2013 ghost and ghost.zip, a folder and file, which is the actual output of the command ls.</p> <p>A few of the options available after -e trace= are:</p> <ul> <li>open</li> <li>close</li> <li>read</li> <li>write</li> </ul>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#trace-multiple-system-calls","title":"Trace multiple system calls","text":"<p>What if you want to trace multiple system calls in one command though? The option -e trace= can take a comma separated set of systemcalls as argument:</p> <pre><code>strace -e trace=open,read ls\n</code></pre> <p>Which outputs:</p> <pre><code>...\nopen(\"/lib64/libattr.so.1\", O_RDONLY|O_CLOEXEC) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\320\\23\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nopen(\"/lib64/libpthread.so.0\", O_RDONLY|O_CLOEXEC) = 3\nread(3, \"\\177ELF\\2\\1\\1\\0\\0\\0\\0\\0\\0\\0\\0\\0\\3\\0&gt;\\0\\1\\0\\0\\0\\340m\\0\\0\\0\\0\\0\\0\"..., 832) = 832\nopen(\"/proc/filesystems\", O_RDONLY)     = 3\nread(3, \"nodev\\tsysfs\\nnodev\\trootfs\\nnodev\\tr\"..., 1024) = 356\nread(3, \"\", 1024)                       = 0\nopen(\"/usr/lib/locale/locale-archive\", O_RDONLY|O_CLOEXEC) = 3\nghost  ghost.zip\n+++ exited with 0 +++\n</code></pre>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#write-output-to-file","title":"Write output to file","text":"<p>If you\u2019d like to write the output of strace to a file, add a -o:</p> <pre><code>strace -o ls.txt ls\nghost  ghost.zip\n</code></pre> <p>When you print the contents of ls.txt, you\u2019ll see that it contains only the output from strace, and not from the command ls:</p> <pre><code>cat.ls.txt\n...\nwrite(1, \"18.png\\t\\t   Apps  Declarations  d\"..., 164) = 164\nclose(1)                                = 0\nmunmap(0x7f993acb6000, 4096)            = 0\nclose(2)                                = 0\nexit_group(0)                           = ?\nwrite(1, \"18.png\\t\\t   Apps  Declarations  d\"..., 164) = 164\nclose(1)                                = 0\nmunmap(0x7f993acb6000, 4096)            = 0\nclose(2)                                = 0\nexit_group(0)                           = ?\n+++ exited with 0 +++\n</code></pre>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#add-a-timestamp","title":"Add a timestamp","text":"<p>If you add a -t to the command, you\u2019ll be able to add a timestamp to each printed line. You can add up to 3 -t\u2018s. The more you add, the more verbose and detailed the timestamp will be.</p> <p>One -t shows you seconds:</p> <pre><code>strace -t ls\n...\n11:52:20 close(2)                       = 0\n11:52:20 exit_group(0)                  = ?\n11:52:20 +++ exited with 0 +++\n</code></pre> <p>Adding a second -t will display microseconds:</p> <pre><code>strace -tt ls\n...\n11:53:07.593382 close(2)                = 0\n11:53:07.593500 exit_group(0)           = ?\n11:53:07.593651 +++ exited with 0 +++\n</code></pre> <p>A third -t will include the microseconds and the leading portion will be printed as the number of seconds since the epoch.</p> <pre><code>strace -ttt ls\n...\n</code></pre>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#print-relative-timestamp","title":"Print relative timestamp","text":"<p>If you\u2019d like to find out the execution time of each call, -r will certainly do the trick:</p> <pre><code>strace -r ls\n...\n     0.000105 close(2)                  = 0\n     0.000115 exit_group(0)             = ?\n     0.000146 +++ exited with 0 +++\n</code></pre>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2014/01/19/introduction-to-strace/#a-summary-of-system-calls","title":"A summary of system calls","text":"<p>Would you like to have a summary of calls, time, and errors for each system call? -c does this:</p> <pre><code>strace -c ls\nghost  ghost.zip\n% time     seconds  usecs/call     calls    errors syscall\n------ ----------- ----------- --------- --------- ----------------\n100.00    0.000054          11         5           mprotect\n  0.00    0.000000           0         4           read\n  0.00    0.000000           0         1           write\n  0.00    0.000000           0         6           open\n  0.00    0.000000           0         9           close\n  0.00    0.000000           0         1           execve\n  0.00    0.000000           0         1         1 access\n  0.00    0.000000           0         3           brk\n  0.00    0.000000           0         2           ioctl\n  0.00    0.000000           0         2           munmap\n  0.00    0.000000           0        15           mmap2\n  0.00    0.000000           0         7           fstat64\n  0.00    0.000000           0         2           getdents64\n  0.00    0.000000           0         1           set_thread_area\n  0.00    0.000000           0         1           openat\n------ ----------- ----------- --------- --------- ----------------\n100.00    0.000054                    60         1 total\n</code></pre> <p>This option is very useful when trying to find out why a program is running slow.</p>","tags":["calls","linux","signals","strace","system","trace","troubleshooting"]},{"location":"2024/01/11/introduction-to-tmux/","title":"Introduction to tmux","text":"<p>I have been working with Linux for years, and I've always used screen when working in the terminal. I even wrote a small introduction to screen over 10 years ago.</p> <p>So you can imagine my surprise when I at a very late point found out about tmux. It has completely changed the way I work, and boy do I love it.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#so-what-is-tmux","title":"So, what is tmux?","text":"<p>Let's start with the basics. tmux is a terminal multiplexer. A terminal multiplexer is a program that that allows a user, or many users, to run many programs at once. The multiplexer manages 'sessions' - these sessions run the programs, independently of your shell or terminal. And tmux, like screen, works wonderfully if you're working remotely on a server. Simply start a tmux session on the server you're working on, and should you lose your connection some way, the tmux session still remains on the server, ready for you to resume.</p> <p>My current tmux looks something like this:</p> <p></p> <p>How does this differ from screen? Well, for starters, tmux makes it easy to have multiple panes up at the same time, while I found it a bit tedious to do the same with screen.</p> <p>Without going into much further detail, I recommend reading this post on superuser.com, which lists several differences.</p> <p>So now that you have a bit of information about it, let's get cracking using it.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#using-tmux","title":"Using tmux","text":"<p>Using tmux isn't difficult, and it has a lot of other functions than what I mention here, but this is the main way that I use it.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#installation-of-tmux","title":"Installation of tmux","text":"<p>The installation of tmux is pretty straight forward:</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#debianubuntu","title":"Debian/Ubuntu","text":"<pre><code>apt-get install tmux\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#fedora","title":"Fedora","text":"<pre><code>dnf install tmux\n</code></pre> <p>Most Linux distributions should have it in their default repo, so it should be pretty straight forward to install it.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#starting-a-session","title":"Starting a session","text":"<p>To start a tmux session, simply type:</p> <pre><code>tmux\n</code></pre> <p>or if you want to give the session a name:</p> <pre><code>tmux new -s work\n</code></pre> <p>..which gives your session the name 'work'.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#handling-sessions","title":"Handling sessions","text":"","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#view","title":"View","text":"<p>To view tmux sessions currently running, type:</p> <pre><code>tmux ls\n</code></pre> <p>..and the output is something like this:</p> <pre><code>[jorge@jeb-desktop ~]$ tmux ls\nwork: 1 windows (created Wed Jan 10 18:19:37 2024) [120x29] (attached)\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#attach","title":"Attach","text":"<p>If you're only running a single session of tmux, attaching/resuming it only requires you to type:</p> <pre><code>tmux a\n</code></pre> <p>..or if you'd like to specify the session by name, use:</p> <pre><code>tmux a -t work\n</code></pre> <p>Where 'work' is the name of the session.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#detach","title":"Detach","text":"<p>To detach a currently running session, while having tmux up and running, you need to press a combination of keys. In this case it's Ctrl-b d, which means pressing Ctrl-b first, followed up by the letter d. It's often represented in this way:</p> <pre><code>C-b d\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#splitting-panes","title":"Splitting panes","text":"<p>The default way of splitting panes is not intuitive, if you ask me. Particularly if you're using an ISO layout on your keyboard. However, the default ways are:</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#horizontally","title":"Horizontally","text":"<pre><code>C-b %\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#vertically","title":"Vertically","text":"<pre><code>C-b \"\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#my-way","title":"My way","text":"<p>Luckily, it's possible to modify your config so that you can use a different key combination. What I'm currently using, and is in my config for tmux (~/.tmux.conf) is:</p> <pre><code>bind | split-window -h -c \"#{pane_current_path}\"\nbind - split-window -v -c \"#{pane_current_path}\"\n</code></pre> <p>Then the key combination becomes C-b - for horizontal splitting and C-b | for vertical splitting. Neat huh?</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#navigating-panes","title":"Navigating panes","text":"<p>Navigating through panes isn't exacly easy either by default.</p> <pre><code>C-b &lt;Arrow key&gt;\n</code></pre> <p>..meaning that to move up, you have to press C-b Arrow Up to move one pane up, then press C-b Arrow Right to go to the pane to the right. If you hold in Ctrl, you can resize the existing pane. This doesn't work at all for me, particularly if I have to move quickly between the panes. So what I've done is I've added the following lines to my config:</p> <pre><code>bind -n C-M-Left select-pane -L\nbind -n C-M-Right select-pane -R\nbind -n C-M-Up select-pane -U\nbind -n C-M-Down select-pane -D\n</code></pre> <p>This allows me to use Ctrl, Alt/Meta and Arrow Up/Down/Right/Left to quickly switch between panes.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#zoom","title":"Zoom","text":"<p>To maximize/minimize your current pane, so that it fills the entire screen, use:</p> <pre><code>C-b z\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#closing-panes","title":"Closing panes","text":"<p>Closing panes means just killing it. If that's what you want, move your focus to the pane you want to destroy, and enter the following key combination:</p> <pre><code>C-b x\n</code></pre> <p>Confirm killing the pane with Y and Enter.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#configuration","title":"Configuration","text":"<p>If you want to create your own configuration, then you should place your config in the file .tmux.conf in your home directory.</p>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#my-config","title":"My config","text":"<p>That's basically what I need to know to use tmux! If you want to take a look at the configuration I use, see below. Have fun!</p> <pre><code>## tmux.conf\n## Jorge Enrique Barrera &lt;jorge@fbarr.net&gt;\n\n## Settings ##\n\n# 0 is the first number\nset -g base-index 0\n\n# Automatically set window title\nset-window-option -g automatic-rename on\nset-option -g set-titles on\n\n# Set scrollback history to 100000 lines\nset -g history-limit 100000\n\n# Synchronize panes with 'C-b c'\nbind-key c setw synchronize-panes\n\n# Split vertically/horizontally with 'C-b |' and 'C-b -'\nbind | split-window -h -c \"#{pane_current_path}\"\nbind - split-window -v -c \"#{pane_current_path}\"\n\n# Use Ctrl-Alt-Arrow keys without prefix key to switch panes\nbind -n C-M-Left select-pane -L\nbind -n C-M-Right select-pane -R\nbind -n C-M-Up select-pane -U\nbind -n C-M-Down select-pane -D\n\n# Smallest delay after you press the escape key. If you put 0, you'll get\n# errors like '^[[?61;6;7;22;23;24;'\nset -sg escape-time 1\n\n# Reload tmux config with 'C-b r'\nbind r source-file ~/.tmux.conf\n\n# Enables vi mode. Enables searching with / in copy mode.\nsetw -g mode-keys vi\n\n# Default terminal\nset -g default-terminal \"xterm-256color\"\nset -ga terminal-overrides \",*256col*:Tc\"\n\n# SSH sock environment variable\nsetenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock\n\n\n## Style ##\n\n# Status bar format and colours\nset -g window-status-format '#[bg=colour237,fg=#f8f8f2] #I.#(pwd=\"#{pane_current_path}\"; echo ${pwd####*/}): #W#F '\nset -g window-status-current-format '#[bg=colour39,fg=black] #I.#(pwd=\"#{pane_current_path}\"; echo ${pwd####*/}): #W#F '\n\n# Pane border style colour\nset -g pane-border-style fg=colour237\nset -g pane-active-border-style fg=colour39\n\n# Active/Inactive window colour\nset -g window-style 'bg=colour235'\nset -g window-active-style 'bg=colour233'\n\n# Status bar placement\nset -g status-justify centre\nset -g status-left-length 40\nset -g status-right-length 60\nset -g status-position top\n\n# Status bar colours\nset -g status-fg white\nset -g status-bg \"colour234\"\nset -g status-left '#[fg=colour235,bg=colour252,bold] #S \u00bb #I #P '#SessionName\nset -g status-right '#[bg=colour252,fg=colour235,bold] %Y-%m-%d %H:%M:%S #[default]'\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2024/01/11/introduction-to-tmux/#possible-issues","title":"Possible issues","text":"<p>One of the issues I encountered, when it come to colours, was that I couldn't exactly match the color I had on one server to another. There were multiple colours that was not being shown, and that made the terminal look all wonky. I narrowed it down to that it was the terminal itself that didn't have all the colours I wanted. When I ran the command tput, it showed me only 8 colours:</p> <pre><code>[jorge@jeb-desktop ~]$ tput colors\n8\n</code></pre> <p>I need the entire range of 256 colours to make the theme I'm currently using work properly. So I added this to my .bashrc file:</p> <pre><code>export TERM=xterm-256color\n</code></pre> <p>When I then logged completely out of the terminal, and back in, tput showed me 256 colours:</p> <pre><code>[jorge@jeb-desktop ~]$ tput colors\n256\n</code></pre> <p>You can also force tmux to use 256 colours, even if the terminal only says 8, by adding a -2 in the command:</p> <pre><code>tmux -2 new -s work\n</code></pre> <p>To see all the colours available to you, run this oneliner:</p> <pre><code>for i in {0..255}; do printf \"\\x1b[38;5;${i}mcolour${i}\\x1b[0m\\n\"; done\n</code></pre>","tags":["tmux","terminal multiplexer","screen"]},{"location":"2012/06/21/ipad-and-comicbooks/","title":"iPad and Comicbooks","text":"<p>So what can I say. I finally succumbed and bought an iPad. Mainly because my friend Kevin kept nagging me about how wonderful it was. Bastard. Gr\u00edma Wormtongue is his new nickname. I\u2019ve had my iPad for a couple of weeks now.</p> <p>But seriously though, the iPad is doing great stuff for me. I\u2019m using it for all sorts of purposes, and the one I\u2019m going to bring up in this case is reading comicbooks. I use an application called Comic Zeal. Now, I\u2019ve never been a particularly avid reader of comicbooks, but I remember back during my younger years when I sat at the library, reading every edition of Elfquest that I could get my hands on. So years (yeaaaaars) later, I finally wanted to give it a try again. That\u2019s where Comic Zeal comes into play.</p> <p></p> <p>Comic Zeal is an application able to (taken from their site):</p> <ul> <li>Organize your comics using Series and Dividers, don\u2019t look through hundreds to find the one you want.</li> <li>Search and find your comics by title. On the iPad you can tag your comics for even easier searching.</li> <li>Use Comic Zeal\u2018s copy function to organize your collection in amazing ways.</li> <li>When you finish reading one comic, Comic Zeal automatically opens the next one.</li> <li>Avoid seeing the same borders page after page with Comic Zeal\u2019s zoom lock.</li> <li>Load your comics through USB or wi-fi using iTunes file sharing, or other apps like Drop Box!</li> </ul> <p>It really works great, I can truly recommend it.</p> <p>Now, I\u2019ve only come across a few good comicbooks so far, but the ones I can recommend are:</p>"},{"location":"2012/06/21/ipad-and-comicbooks/#american-vampire","title":"American Vampire","text":"<p>The series imagines vampires as a population made up of many different secret species, and charts moments of vampire evolution and inter-species conflict throughout history. The focus of the series is a new American bloodline of vampires, born in the American West in the late 1800s. The first of this new species is a notorious outlaw named Skinner Sweet, who wakes from death, after being infected, to find he has become a new kind of vampire, something stronger and faster than what came before, impervious to sunlight, with a new set of strengths and weaknesses.</p>"},{"location":"2012/06/21/ipad-and-comicbooks/#the-walking-dead","title":"The Walking Dead","text":"<p>The Walking Dead is a monthly black-and-white comic book series chronicling the travels of Rick Grimes, his family, and other survivors of a zombie apocalypse. Shot in the line of duty, Kentucky police officer Rick Grimes wakes from a coma in the hospital to find his town filled with walking corpses.</p>"},{"location":"2012/06/21/ipad-and-comicbooks/#witch-doctor","title":"Witch Doctor","text":"<p>Witch Doctor combines elements of the horror and medical drama genres. The protagonist, Dr. Vincent Morrow, is a maverick doctor who specializes in \u201csupernatural medicine,\u201d supplementing common medical practices with magic. Dr. Morrow\u2019s \u201ccases\u201d predominantly involve infectious supernatural creatures like vampires, demonic possession, as well as elements based on the cosmic horror of H.P. Lovecraft. In the first Witch Doctor mini-series, Dr. Morrow treats (and battles) a vampire, demons possessing a child, faerie changelings, and Deep Ones (crossed with the Creature From the Black Lagoon), among others.</p> <p>So there you have it! If you have any other suggestions (I\u2019ve been recommended Sandman, Fable and Y: The Last Man so far), let me know!</p>"},{"location":"2018/06/08/iterm-and-altbackspace/","title":"iTerm and alt+backspace","text":"<p>I recently changed jobs, going from a Linux environment to macOS. When I worked in the terminal in Linux, I got used to using alt+backspace to delete entire words. Unfortunately, it seems that this function isn\u2019t native to the Terminal application that macOS has.However, in the application iTerm2 it\u2019s possible to add your own key-combinations so that alt+backspace, or in this case cmd+backspace, works as it does in Linux.</p> <p>Just follow these instructions:</p> <ul> <li>Open up iTerm2 and head on over to Preferences</li> <li>Go to Keys -&gt; Key Mappings and press the +.</li> <li>In the Action field, select Send Hex Code.</li> <li>In the field Keyboard Shortcut, just press cmd+backspace.</li> <li>In the field Hex code enter 0x1B 0x08.</li> </ul> <p>And that\u2019s it! cmd+backspace in iTerm2 should now have the same functionality as alt+backspace in Linux!</p>","tags":["alt","backspace","iTerm2","macOS","terminal"]},{"location":"2008/04/16/mac-os-x-105-leopard-on-a-powerbook-g4-12/","title":"Mac OS X 10.5 (Leopard) on a PowerBook G4 12\u201d","text":"<p>I briefly wrote an entry about how getting VLC to be your default DVD-playing application, and how to get it to start viewing a DVD you\u2019ve inserted automatically. I even mentioned that I had installed Mac OS X 10.5 (Leopard) on my Powerbook. I\u2019ll go into further detail about that. The installation went okay, BUT, it took ages. One and a half hour perhaps, and I was tempted to reboot to see if starting the process all over again would do it good. But one thing did occur to me during the installation \u2013 it was 9G with data that was being installed. Not your usual stripped 150MB installation of Debian, eh. So I waited, and waited. And finally it was installed. I actually think my PowerBook was handling Leopard smoother than Tiger. But it\u2019s probably all in my head. The specifications for my Powerbook G4 12?; 1.5Ghz processor, 512MB RAM, 75G disk (just about), you know, a pretty standard Powerbook. I even ordered 1G memory for the Powerbook yesterday, and it\u2019ll hopefully be arriving today, working miracles with my machine. Now, having said that Leopard is working fine so far, the native DVD-playing software isn\u2019t. In fact, by running the application I\u2019m guaranteeing myself a reboot \u2013 really. It locks up the PB so bad, waiting ages doesn\u2019t really help. So what I did was that I just uninstalled the software, along with iTunes and some other crap I didn\u2019t need, downloaded VLC and set that as my default DVD playing software. You gotta love VLC. I haven\u2019t really tested heavy applications on the PowerBook, as I use it as a work/media computer. That means having Terminal, SSHKeychain, Safari, Adium and VLC up and going. Working great so far. Now to see how long it lasts. </p>"},{"location":"2008/04/15/mac-8211-play-dvd-automatically-on-insertion-in-vlc-media-player/","title":"Mac &#8211; Play DVD automatically on insertion in VLC Media Player","text":"<p>So I\u2019ve installed Mac OS X 10.5 on my PowerBook G4 12?, and it\u2019s working quite well so far. Until the native DVD-playing software went haywire that is. Needless to say, I turned to VLC. Now the problem is getting VLC to automatically launch and start playing the DVD when a DVD is inserted. Here\u2019s what you do. Open up the program Script Editor, and place the following in there:</p> <pre><code>tell application \"VLC\"\nOpenURL \"dvdnav:///dev/rdisk1\"\nplay\nnext\nend tell\n</code></pre> <p>Save it, and close the application. Now go to System Preferences -&gt; CDs &amp; DVDs and when pressing When you insert a video DVD, select Run script\u2026 and just use the applescript you just made. Voila, it works!</p>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/","title":"Making your BASH history more efficient","text":"<p>There are several ways to improve how you troubleshoot a system. One of the things I consider to be important is the BASH history. Here you can see what commands were executed. Though as default you can\u2019t see when, or ignore certain things, like duplicate commands. Here\u2019s a little guide to show you how.</p> <p>Notice: To make these features a permanent solution, open up your /etc/profile, and add the lines to the bottom of the file. Save and close it. The next time you log in the functions should be working as you specified them!</p>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#histtimeformat","title":"HISTTIMEFORMAT","text":"<p>A simple yet effective little trick is to change the format of the output the command history spits out. In my case it comes to good use when troubleshooting a system, wanting to find out if errors in the system log match up with commands executed at that time. To enable the feature in your current terminal, run:</p> <pre><code>export HISTTIMEFORMAT=\"%h %d %H:%M:%S&gt; \"\n</code></pre> <p>So the output from history that was looking like this:</p> <pre><code>[jorge@ashitaka ~]$ history\n1 ls\n2 echo \"Hello\"\n3 pwd\n...\n</code></pre> <p>Now looks like this:</p> <pre><code>[jorge@ashitaka ~]$ history\n1 Mar 24 12:53:35&gt; ls\n2 Mar 24 12:53:36&gt; echo \"Hello\"\n3 Mar 24 12:53:37&gt; pwd\n...\n</code></pre>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#histcontrol","title":"HISTCONTROL","text":"<p>The variable HISTCONTROL can do a few things, like ignoring duplicates if they are in a row and erasing duplicates. The difference here is that by ignoring duplicates, it will remove duplicates only if they are in a row, while erasing duplicates, it will remove previous commands from the history file. Let\u2019s give an example:</p>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#ignoredups","title":"ignoredups","text":"<p>First run:</p> <pre><code>export HISTCONTROL=ignoredups\n</code></pre> <p>The output that looked like this:</p> <pre><code>[jorge@ashitaka ~]$ history\n1 pwd\n2 echo \"Hello\"\n3 ls -l\n4 ls -h\n5 pwd\n6 pwd\n...\n</code></pre> <p>Will now look like this:</p> <pre><code>[jorge@ashitaka ~]$ history\n1 pwd\n2 echo \"Hello\"\n3 ls -l\n4 ls -h\n5 pwd\n...\n</code></pre>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#erasedups","title":"erasedups","text":"<p>erasedups means that if you executed the same command previously, that entry will be erased, substituted by the newly run command. Generally not recommended though. If you still wish to do so, it can be done by running the following line:</p> <pre><code>export HISTCONTROL=erasedups\n</code></pre> <p>So a history that looked like this:</p> <pre><code>[jorge@ashitaka ~]$ history\n1 pwd\n2 echo \"Hello\"\n3 ls -l\n4 ls -h\n5 pwd\n...\n</code></pre> <p>After the export, will now look like this when we run the command pwd again:</p> <pre><code>[jorge@ashitaka ~]$ history\n1 echo \"Hello\"\n2 ls -l\n3 ls -h\n4 pwd\n...\n</code></pre>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#ignorespace","title":"ignorespace","text":"<p>If you want full control over which commands will be stored by history and which will not be stored, set HISTCONTROL to ignorespace:</p> <pre><code>export HISTCONTROL=ignorespace\n</code></pre> <p>So out of these commands:</p> <pre><code>ls -la\n du -h\nps\n</code></pre> <p>Only these will show:</p> <pre><code>[jorge@ashitaka ~]$ history\n1 ls -la\n2 ps\n...\n</code></pre>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#ignoredups-and-ignorespace","title":"ignoredups and ignorespace","text":"<p>To use both of these features, simply use:</p> <pre><code>export HISTCONTROL=ignoreboth\n</code></pre>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#histignore","title":"HISTIGNORE","text":"<p>The variable HISTIGNORE will help you tell history which commands to ignore, meaning that they shouldn\u2019t be picked up by the BASH history. For instance, let\u2019s say that I want the commands df and free to be ignored, including optional flags:</p> <pre><code>export HISTIGNORE=\"df*:free*\"\n</code></pre>"},{"location":"2011/03/24/making-your-bash-history-more-efficient/#histsize","title":"HISTSIZE","text":"<p>Setting how many lines of history to store is always a nice feature:</p> <pre><code>export HISTSIZE=10000\n</code></pre> <p>Thanks to pkhamre for suggesting to include HISTCONTROL and HISTIGNORE. ;)</p>"},{"location":"2007/06/02/mount-iso/","title":"Mount iso","text":"<pre><code>mount -t iso9660 -o ro,loop=/dev/loop0 /var/tmp/some.iso /mnt/cdrom\n</code></pre>"},{"location":"2008/09/04/my-15-seconds-of-fame/","title":"My 1.5 seconds of fame","text":"<p>GNU (GNU\u2019s Not Unix) celebrated quite recently (yesterday) a very special birthday. 25 years had passed since everything was started, and even Stephen Fry was eager to make a video, congratulating the project.</p> <p></p> <p>As I may have mentioned before (or not at all), I used to be a GNU webmaster, helping them translate their website to Norwegian. I don\u2019t recall how long I helped out, perhaps a year. I had to give it up though, real life came in the way. With Michael around now, I\u2019m surprised I even have time to check my email when at home. Having left the days with GNU behind me, imagine my surprise when a co-worker made me aware of this:</p> <p></p> <p>Seems my name was in the end credits. :) There you have it, my 1.5 seconds of fame. :)</p> <p>Oh, and happy birthday GNU!</p>"},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/","title":"ncat, a modern implementation of netcat","text":"<p>ncat is a utility that is like the UNIX cat command but for network connections. It\u2019s based on the original netcat and comes with a couple of more modern features.</p> <p>In this short post, we\u2019ll go through a couple of examples to see exactly what uses this tool has. I\u2019m currently using ncat version 7.01, in Ubuntu 16.04. ncat is a part of the nmap package in Ubuntu.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#shiny-new-things","title":"Shiny new things","text":"<p>A couple of the features of ncat, some of which are new, are:</p> <ul> <li>IPv6 Support</li> <li>Chain multiple ncat together</li> <li>Support for SSL</li> <li>Ability to specify specific hosts to allow or deny access to in listen mode</li> </ul> <p>While the new features are great, it\u2019s important to note that ncat is not 100% reverse compatible with the original netcat.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#examples","title":"Examples","text":"<p>Let\u2019s continue with a couple of examples to get you started.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#ipv4-or-ipv6","title":"IPv4 or IPv6?","text":"<p>To force ncat to only use either IPv4 og IPv6, use:</p> <ul> <li><code>-4</code></li> <li><code>-6</code></li> </ul> <p>..as in:</p> <pre><code>ncat -6  10100\n</code></pre> <p>..to connect to a server only through IPv6.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#banner-grabbing","title":"Banner grabbing","text":"<pre><code>ncat -C scanme.nmap.org 80\n</code></pre> <p>..and type in:</p> <pre><code>GET / HTTP/1.0\n</code></pre> <p>..and press enter twice. The result will be something along the lines of:</p> <pre><code>...\nHTTP/1.1 200 OK\nDate: Fri, 25 Nov 2016 09:01:08 GMT\nServer: Apache/2.4.7 (Ubuntu)\nAccept-Ranges: bytes\nVary: Accept-Encoding\nConnection: close\nContent-Type: text/html\n...\n</code></pre> <p>The option -C is used because it requires CRLF line endings.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#chaining","title":"Chaining","text":"<p>An example from nmap\u2019s website; sending a log file from host1 to host3, by way of host2:</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#host3","title":"host3","text":"<pre><code>ncat -l &gt; log.txt\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#host2","title":"host2","text":"<pre><code>ncat -l --sh-exec \"ncat host3\"\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#host1","title":"host1","text":"<pre><code>ncat --send-only host2 &lt; log.txt\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#cloning-partitions-over-the-network","title":"Cloning partitions over the network","text":"<p>One of the more useful tricks is the ability to clone partitions over the network.</p> <p>On the system you\u2019d like to clone the partition from, do:</p> <pre><code>dd if=/dev/sda | ncat -l 10100\n</code></pre> <p>..and on the receiving machine:</p> <pre><code>ncat  10100 | dd of=/dev/sda\n</code></pre> <p>To speed up the process of transfer you can always throw in gzip for compression:</p> <pre><code>dd if=/dev/sda | gzip -9 | ncat -l 10100\n</code></pre> <p>..and:</p> <pre><code>ncat  10100 | gzip -d | dd of=/dev/sda\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#web-server","title":"Web server","text":"<p>Setting up a simple webserver is also easy:</p> <pre><code>ncat -l 8080 -k --sh-exec \"echo -e 'HTTP/1.1 200 OK\\r\\n'; cat index.html\"\n</code></pre> <p>The option -k makes ncat keep listening and accepting more connections after the first one is finished.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#file-transfer-with-ssl","title":"File transfer with SSL","text":"<p>On the machine you want to send the file from:</p> <pre><code>ncat -l 10100 --ssl --send-only &lt; secret.tar.gz\n</code></pre> <p>..and on the receiving end:</p> <pre><code>ncat  10100 --ssl &gt; secret.tar.gz\n</code></pre> <p>The option \u2013send-only does what it says \u2013 it only sends data and ignores received.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#ports","title":"Ports","text":"<p>Need to check if a port is open? Try:</p> <pre><code>nc -z -v -w5  \n</code></pre> <p>This example checks if port 53 is open, with a timeout of 5 seconds. When a port is open:</p> <pre><code>$ nc -z -v -w5 dns.example.com 53\nConnection to dns.example.com 53 port [tcp/domain] succeeded!\n</code></pre> <p>..and when it\u2019s closed:</p> <pre><code>$ nc -z -v -w5 dns.example.com 52\nnc: connect to dns.example.com port 52 (tcp) timed out: Operation now in progress\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#chat-server","title":"Chat server","text":"<p>As far I know, the are two main ways to do this.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#first-way","title":"First way","text":"<p>Start listening on a port of your choice:</p> <pre><code>ncat -l 10100\n</code></pre> <p>..and connect to it from another machine:</p> <pre><code>ncat  10100\n</code></pre> <p>Type in some text and the line will appear on the other machine when you press enter. You won\u2019t be able to see who wrote what, but hey, it\u2019s good enough if you want to communicate with someone.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#second-way","title":"Second way","text":"<p>The new fancier way of starting a chat-server is by using \u2013chat:</p> <pre><code>ncat --chat -l 10100\n</code></pre> <p>Users who then want to connect to the chat:</p> <pre><code>ncat  10100\n</code></pre> <p>The output will be something along the lines of:</p> <pre><code> Hello?\n Is it me you're looking for?\n</code></pre> <p>The user IDs generated by ncat are based on the file descriptor for each connection and must be considered arbitrary. Also, you won\u2019t see <code>in front of the text you type, but others will see it. The main difference when using **\u2013chat** is that you and every user connected to the server will get a</code> tag, making it easier to see who wrote what.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#mail-client","title":"Mail client","text":"<p>ncat also works as a mail client. Expect to type a lot:</p> <pre><code>ncat -C mail.example.com 25\n</code></pre> <p>..followed up by typing:</p> <pre><code>220 mail.example.com ESMTP\nHELO client.example.com\n250 mail.example.com Hello client.example.com\nMAIL FROM:a@example.com\n250 OK\nRCPT TO:b@example.com\n250 Accepted\nDATA\n354 Enter message, ending with \".\" on a line by itself\nFrom: a@example.com\nTo: b@example.com\nSubject: Greetings from ncat\n\nThis short message is brought to you by ncat.\n.\n250 OK\nQUIT\n221 mail.example.com closing connection\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#tcpudp-daytime-server","title":"TCP/UDP daytime server","text":"<p>The daytime service, defined in RFC 867, sends a human-readable date and time string over TCP or UDP port 13. It ignores any input. So, we can use:</p> <pre><code>ncat -l 13 --keep-open --send-only --exec \"/bin/date\"\n</code></pre> <p>Add \u2013udp to create an UDP daytime server instead.</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#access-control","title":"Access control","text":"","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#allow-one-host-deny-others","title":"Allow one host, deny others","text":"<pre><code>ncat -l --allow 10.0.0.2\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#deny-one-host-allow-others","title":"Deny one host, allow others","text":"<pre><code>ncat -l --deny 10.0.0.2\n</code></pre>","tags":["cat","nc","ncat","netcat"]},{"location":"2016/12/10/ncat-a-modern-implementation-of-netcat/#allow-or-deny-hosts-from-file","title":"Allow or deny hosts from file","text":"<pre><code>ncat -l --allowfile trusted-hosts.txt\n</code></pre> <p>Replace \u2013allowfile with \u2013denyfile to deny and trusted-hosts.txt with a file that contains the hosts to be denied.</p> <p>These are just a few of the things that you can do with ncat. Have fun exploring the rest!</p>","tags":["cat","nc","ncat","netcat"]},{"location":"2011/04/03/nginx---error-413---request-entity-too-large/","title":"Nginx - Error 413 - Request entity too large","text":"<p>The default maximum body size of a client request, or maximum file size, that nginx allows you to have, is 1M. So when you try to upload something larger than 1M, you get the following error:</p> <p>413: Request Entity Too Large.</p> <p>Changing your php.ini-settings alone won\u2019t do much. So to fix this problem, follow these steps.</p> <p>Open up your nginx.conf-file, with an editor of your choice:</p> <pre><code>vim /etc/nginx/nginx.conf\n</code></pre> <p>..and add client_max_body_size to the http-section:</p> <pre><code>client_max_body_size 20M;\n</code></pre> <p>Save and close the file, apply the changes to nginx, and reload:</p> <pre><code>/usr/sbin/nginx -t\n/usr/sbin/nginx -s reload\n</code></pre> <p>Try uploading again. Should be working. :)</p>"},{"location":"2010/08/20/nginx-php-mysql-and-wordpress-continued/","title":"Nginx, PHP, MySQL and WordPress continued","text":"<p>So, my machine at home took the plunge. A couple of days ago while I was reorganising the livingroom (I was not bored, I actually love doing that stuff), I placed the server on the floor, as it usually was placed above the TV. Michael then decided to play a little ON/OFF-game with the server. The powersupply was fried, and I can\u2019t really bother to buy a new one at this moment. So, it was finally time for me to buy a VPS from out there somewhere. My decision fell on , and they actually seem pretty good so far, so now to see if it will last.</p> <p>My concern was though, VPS\u2019 (Virtual Private Server) aren\u2019t usually that good, they have limited diskspace and hardware. I don\u2019t need much of diskspace, but after some experience with Apache, I know it\u2019s a huge memory-hog. So what I basically needed was Apache, MySQL, PHP and WordPress. I didn\u2019t think it was going to work out, until a nice co-worker of mine tipped me off about nginx.</p> <p>This was supposedly a very good, and very lightweight webserver, according to him. So I decided to give it a shot. And so far, it\u2019s working wonders.</p> <p>Here I\u2019ll try to explain how to set up your server with nginx, MySQL, PHP and WordPress.</p>"},{"location":"2010/08/20/nginx-php-mysql-and-wordpress-continued/#fastcgi","title":"FastCGI","text":"<p>FastCGI is what your webserver uses to interact with PHP-code, and this is not something that comes packaged with nginx.</p> <p>There are two options you can use, and I have tested both. spawn-fcgi or php-fpm. I ended up using php-fpm, though spawn-fcgi is quicker to set up. I\u2019ll try to explain how to set up both.</p>"},{"location":"2010/08/20/nginx-php-mysql-and-wordpress-continued/#spawn-fcgi","title":"spawn-fcgi","text":"<p>spawn-fcgi, which came with the webserver lighttpd. You usually had to download lighttpd first, compile it, and then grab the program from there. But for your convenience, you can get the spawn-fcgi here, or just go to , and grab the source there to compile on your own (seems to be an own project now).</p> <p>So basically, as root, do the following:</p> <pre><code>wget http://jorge.fbarr.net/files/spawn-fcgi\nmv spawn-fcgi /usr/local/bin\n</code></pre> <p>Now, the next step is to make this program run at boot. For those of you using a RedHat\u2019ish type of system, adding this to the end of /etc/rc.d/rc.local will do the trick. You can add it by running this command:</p> <pre><code>echo '/usr/local/bin/spawn-fcgi -f /usr/bin/php-cgi -a 127.0.0.1 -p 9000 -P /var/run/fastcgi-php.pid -u nginx -g nginx' &gt;&gt; /etc/rc.d/rc.local\n</code></pre> <p>php-cgi is the name of the fcgi-application, which is usually provided by your distribution\u2019s PHP-package (I believe it\u2019s php-common for CentOS/Fedora, so make sure you have it installed), and is referred to by the -f in the command. -a makes you specify which address to listen on, -p is the port (9000 in this case), and -P is the file to place the process ID in when the program is started, which makes it easier to kill the program if necessary.</p> <p>Once placed in the rc.local-file, just run it manually to fire it up:</p> <pre><code>/usr/local/bin/spawn-fcgi -f /usr/bin/php-cgi -a 127.0.0.1 -p 9000 -P /var/run/fastcgi-php.pid -u nginx -g nginx\n</code></pre>"},{"location":"2010/08/20/nginx-php-mysql-and-wordpress-continued/#php-fpm","title":"php-fpm","text":"<p>php-fpm is a patch for php4/5 to greatly improve FastCGI SAPI usage in production. This means that you don\u2019t install php through your distribution\u2019s package manager, but rather download the package from the PHP-website, and the patch from another site. You patch up the sourcecode, compile things, and get it started.</p> <p>One of the dependencies for how we\u2019re going to compile PHP is MySQL, so install that first by typing:</p> <pre><code>yum install mysql mysql-devel\n</code></pre> <p>Then get the PHP-sourcecode by typing:</p> <pre><code>cd /usr/local/src\nwget http://no2.php.net/get/php-5.3.0.tar.bz2/from/no.php.net/mirror\n</code></pre> <p>And the patch itself:</p> <pre><code>wget http://php-fpm.org/downloads/php-5.3.0-fpm-0.5.12.diff.gz\n</code></pre> <p>Then execute the following command:</p> <pre><code>tar -jxvf php-5.3.0.tar.bz2\n</code></pre> <p>Now we patch the newly downloaded PHP:</p> <pre><code>gzip -cd php-5.3.0-fpm-0.5.12.diff.gz | patch -d php-5.3.0 -p1\n</code></pre> <p>And enter the new directory to start compiling things:</p> <pre><code>cd php-5.3.0/\n./configure --enable-fpm --with-mcrypt --enable-mbstring --with-mysql=/usr/include/mysql --with-mysql-sock=/tmp/mysql.sock --with-curl --enable-sockets --with-gd --with-zlib --with-iconv --with-jpeg-dir=/usr/lib\n</code></pre> <p>Notice: If you are using a 64-bit system you have to add in an \u2013with-libdir=64 for it to compile correctly. According to Raja Varma you need to use \u2013with-libdir=lib64 for it to compile properly in a CentOS 64 bit installation. Thanks for the tip Raja!</p> <p>At this point the compile failed quite a bit, as I had to install several more packages. The packages I had to install were the following (a snippet taken from yum.log):</p> <pre><code>Apr 23 08:34:44 Installed: zlib-devel-1.2.3-3.i386\nApr 23 08:34:50 Installed: libxml2-devel-2.6.26-2.1.2.7.i386\nApr 23 08:37:10 Installed: keyutils-libs-devel-1.2-1.el5.i386\nApr 23 08:37:18 Installed: libsepol-devel-1.15.2-1.el5.i386\nApr 23 08:37:23 Installed: libselinux-devel-1.33.4-5.1.el5.i386\nApr 23 08:37:30 Installed: e2fsprogs-devel-1.39-20.el5.i386\nApr 23 08:37:35 Installed: libidn-devel-0.6.5-1.1.i386\nApr 23 08:37:40 Installed: krb5-devel-1.6.1-31.el5_3.3.i386\nApr 23 08:37:46 Installed: openssl-devel-0.9.8e-7.el5.i386\nApr 23 08:38:07 Installed: curl-devel-7.15.5-2.1.el5_3.4.i386\nApr 23 08:40:15 Installed: libjpeg-devel-6b-37.i386\nApr 23 08:41:54 Installed: 2:libpng-devel-1.2.10-7.1.el5_3.2.i386\nApr 23 08:43:38 Installed: libmcrypt-2.5.8-4.el5.centos.i386\nApr 23 08:44:37 Installed: libmcrypt-devel-2.5.8-4.el5.centos.i386\n</code></pre> <p>Once everything compiles successfully, we continue with:</p> <pre><code>make all\nmake install\n</code></pre> <p>Now that everything is ready to go, we only need to modify two lines in the file /usr/local/etc/php-fpm.conf. Simply replace nobody with nginx, and remove the comments, making the lines look like this:</p> <pre><code>            Unix user of processes\n            nginx               \n\n            Unix group of processes\n            nginx\n</code></pre> <p>And that should be it. Fire up php-fpm with:</p> <pre><code>/usr/local/bin/php-cgi --fpm\n</code></pre> <p>Making an init-script for php-fpm is pretty easy \u2013 simply make a symlink that points to /usr/local/php/sbin/php-fpm:</p> <pre><code>cd /etc/rc.d/init.d\nln -s /usr/local/sbin/php-fpm php-fpm\n</code></pre> <p>Now add the following line to /etc/rc.d/rc.local to make php-fpm start up at boot:</p> <pre><code>/usr/local/sbin/php-fpm\n</code></pre> <p>And you\u2019re done!</p> <p>Now to the next item on the list, nginx.</p>"},{"location":"2010/08/20/nginx-php-mysql-and-wordpress-continued/#nginx","title":"nginx","text":"<p>nginx (pronounced as \u201cengine X\u201d) is a lightweight, high performance web server/reverse proxy and e-mail (IMAP/POP3) proxy HTTP server and mail proxy server written by Igor Sysoev.</p> <p>So based on that we\u2019re using CentOS now, we are going to get the necessary package from the EPEL-repository. Run these commands to fetch the package, and to install it:</p> <pre><code>wget http://download.fedora.redhat.com/pub/epel/testing/5/i386/nginx-0.6.38-1.el5.i386.rpm\nyum --nogpgcheck localinstall nginx-0.6.38-1.el5.i386.rpm\n</code></pre> <p>Once installed, we need to configure three files, mainly. /etc/nginx/fastcgi_params, /etc/nginx/nginx.conf and /etc/nginx/conf.d/virtual.conf (if you want to have several virtual domains). The first file, fastcgi_params, we just need to add a little something. Open up the file and add the following line to it, right under SCRIPT_NAME:</p> <pre><code>fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n</code></pre> <p>Save and close the file.</p> <p>This is what my nginx.conf pretty much looks like:</p> <p>Notice: According to :</p> <p>\u2026do not use the given nginx,conf, it is malicious point your server to his site.</p> <p>Let me just say again, this is what MY configuration file looks like. I\u2019ve simply pasted it so that you can see how a working configuration looks. So if you want it to work for you, you need to modify the values to suit your setup. I thought that was needless to say, but guess not. :)</p> <pre><code>#######################################################################\n#\n# This is the main Nginx configuration file.  \n#\n# More information about the configuration options is available on \n#   * the English wiki - http://wiki.codemongers.com/Main\n#   * the Russian documentation - http://sysoev.ru/nginx/\n#\n#######################################################################\n\n#----------------------------------------------------------------------\n# Main Module - directives that cover basic functionality\n#\n#   http://wiki.codemongers.com/NginxMainModule\n#\n#----------------------------------------------------------------------\n\nuser              nginx;\nworker_processes  1;\n\nerror_log         /var/log/nginx/error.log;\n#error_log        /var/log/nginx/error.log  notice;\n#error_log        /var/log/nginx/error.log  info;\n\npid               /var/run/nginx.pid;\n\n#----------------------------------------------------------------------\n# Events Module \n#\n#   http://wiki.codemongers.com/NginxEventsModule\n#\n#----------------------------------------------------------------------\n\nevents {\n    worker_connections  1024;\n}\n\n#----------------------------------------------------------------------\n# HTTP Core Module\n#\n#   http://wiki.codemongers.com/NginxHttpCoreModule \n#\n#----------------------------------------------------------------------\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] $request '\n                      '\"$status\" $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    proxy_read_timeout 300;\n\n    #gzip  on;\n\n    # Load config files from the /etc/nginx/conf.d directory\n    include /etc/nginx/conf.d/*.conf;\n\n    #\n    # The default server\n    #\n    server {\n        listen       80;\n        server_name  chihiro.fbarr.net;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n\n        error_page  404              /404.html;\n        location = /404.html {\n            root   /usr/share/nginx/html;\n        }\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   /usr/share/nginx/html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:20080\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    include        fastcgi_params;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n}\n</code></pre> <p>The only thing I\u2019ve changed here is server_name, which I\u2019ve set to chihiro.fbarr.net. This is like the main server we\u2019re working with. Now I\u2019m going to want to set up the virtual host jorge.fbarr.net on this machine as well. For that we need to configure the file /etc/nginx/conf.d/virtual.conf. This is what mine looks like:</p> <pre><code>#\n# A virtual host using mix of IP-, name-, and port-based configuration\n#\n\n## jorge.fbarr.net\nserver {\n    listen       80;\n    server_name  jorge.fbarr.net;\n\n    port_in_redirect off;\n\n    root   /var/www/jorge.fbarr.net;\n\n    proxy_redirect     off;\n    proxy_redirect     http://jorge.fbarr.net:80/  /;\n\n    access_log /var/log/nginx/jorge.fbarr.net-access.log;\n    error_log  /var/log/nginx/jorge.fbarr.net-error.log;\n\n    include /etc/nginx/fastcgi_params;\n\n    index   index.php;\n\n    if (!-e $request_filename) {\n        rewrite ^(.+)$ /index.php?q=$1 last;\n    }\n\n    location ~ .*\\.php$ {\n        fastcgi_pass 127.0.0.1:9000;\n        fastcgi_index index.php;\n    }\n}\n\n## jorge.ulver.no redirect\n\nserver {\n    listen      80;\n    server_name jorge.ulver.no;\n\n    rewrite ^(.*) http://jorge.fbarr.net$1 permanent;\n}\n</code></pre> <p>That\u2019s pretty much it. Everything should be working just fine by now. :) But we are lacking two things, MySQL and WordPress.</p>"},{"location":"2010/08/20/nginx-php-mysql-and-wordpress-continued/#mysql-and-wordpress","title":"MySQL and WordPress","text":"<p>To install MySQL, type up the following:</p> <pre><code>yum install mysql-server\n</code></pre> <p>As for how to set up MySQL, if you follow these instructions, it will tell you how you need to set up your database to work with WordPress, so I won\u2019t be posting details about that here.</p> <p>For PHP to be able to work with MySQL (if you have chosen to use spawn-fcgi and not php-fpm), you need to install a package called php-mysql. Install the package with yum, kill php-cgi, and start it again by doing these following things:</p> <pre><code>yum install php-mysql\npgrep php-cgi | xargs kill\n/usr/bin/spawn-fcgi -f /usr/bin/php-cgi -a 127.0.0.1 -p 9000 -P /var/run/fastcgi-php.pid -u nginx -g nginx\n</code></pre> <p>Once everything is done, voila! You should now have nginx, PHP, MySQL and WordPress working together. And as you probably notice, nginx is taking a LOT less resources than Apache would have.</p>"},{"location":"2010/08/20/nginx-php-mysql-and-wordpress-continued/#issues-with-php","title":"Issues with PHP","text":"<p>If you notice that errors such as the following are popping up on your site:</p> <p>It is not safe to rely on the system\u2019s timezone settings. Please use the date.timezone setting, the TZ environment variable or the date_default_timezone_set() function.</p> <p>You can do the following:</p> <pre><code>cp /usr/local/src/php-5.3.0/php.ini-production /usr/local/lib/\n</code></pre> <p>Then open up the file php.ini and change:</p> <pre><code>;date.timezone =\n</code></pre> <p>to</p> <pre><code>date.timezone = \"Europe/Oslo\"\n</code></pre> <p>If you happen to live in Oslo. Change it to whatever is right for you really. Also, find the line that says something like:</p> <pre><code>error_reporting = E_ALL &amp; ~E_NOTICE\n</code></pre> <p>And change it to:</p> <pre><code>error_reporting = E_ALL &amp; ~E_DEPRECATED\n</code></pre> <p>Restart php-fpm and nginx and things should be back to normal.</p>"},{"location":"2008/11/27/nifty-firewall/","title":"Nifty firewall","text":"<pre><code>#!/bin/bash\n\nIPTABLES='/sbin/iptables'\n\n# Clear out any existing firewall rules, and any chains that might have\n# been created. Then set the default policies.\n\n$IPTABLES -F\n$IPTABLES -F INPUT\n$IPTABLES -F OUTPUT\n$IPTABLES -F FORWARD\n$IPTABLES -F -t mangle\n$IPTABLES -F -t nat\n$IPTABLES -X\n$IPTABLES -P INPUT DROP\n$IPTABLES -P OUTPUT ACCEPT\n$IPTABLES -P FORWARD ACCEPT\n\n# Begin setting up the rulesets. First define some rule chains to handle\n# exception conditions. These chains will receive packets that we aren't\n# willing to pass. Limiters on logging are used so as to not to swamp the\n# firewall in a DOS scenario.\n#\n# silent       - Just dop the packet\n# tcpflags     - Log packets with bad flags, most likely an attack\n# firewalled   - Log packets that that we refuse, possibly from an attack\n\n$IPTABLES -N silent\n$IPTABLES -A silent -j DROP\n\n$IPTABLES -N tcpflags\n$IPTABLES -A tcpflags -m limit --limit 15/minute -j LOG --log-level 4 --log-prefix '** TCP-Flags ** -- '\n$IPTABLES -A tcpflags -j DROP\n\n$IPTABLES -N firewalled\n$IPTABLES -A firewalled -m limit --limit 15/minute -j LOG --log-level 4 --log-prefix '** Firewalled ** -- '\n$IPTABLES -A firewalled -j DROP\n\n# These are all TCP flag combinations that should never, ever, occur in the\n# wild. All of these are illegal combinations that are used to attack a box\n# in various ways.\n\n$IPTABLES -A INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j tcpflags\n$IPTABLES -A INPUT -p tcp --tcp-flags ALL ALL -j tcpflags\n$IPTABLES -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j tcpflags\n$IPTABLES -A INPUT -p tcp --tcp-flags ALL NONE -j tcpflags\n$IPTABLES -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j tcpflags\n$IPTABLES -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j tcpflags\n\n# Allow selected ICMP types and drop the rest.\n\n$IPTABLES -A INPUT -p icmp --icmp-type 0 -j ACCEPT\n$IPTABLES -A INPUT -p icmp --icmp-type 3 -j ACCEPT\n$IPTABLES -A INPUT -p icmp --icmp-type 11 -j ACCEPT\n$IPTABLES -A INPUT -p icmp --icmp-type 8 -m limit --limit 1/second -j ACCEPT\n$IPTABLES -A INPUT -p icmp -j firewalled\n\n# The loopback interface is inheritly trustworthy. Don't disable it or\n# a number of things will break.\n\n$IPTABLES -A INPUT -i lo -j ACCEPT\n\n# Now allow Internet hosts access to those services we provide. Note that\n# enabling inbound FTP 20 &amp; 21 tcp will also require allowing ports\n# 1024-65534/tcp. Which in itself is good enough reason not to allow FTP\n# connections and to only allow ssh/scp/sftp.\n\n## SSH\n\n# localhost\n$IPTABLES -A INPUT -p tcp --dport 22 -s 127.0.0.1 -j ACCEPT\n\n# example.com\n$IPTABLES -A INPUT -p tcp --dport 22 -s 208.77.188.166 -j ACCEPT\n\n# oidentd\n$IPTABLES -A INPUT -p tcp --dport 113 -j ACCEPT\n\n## HTTP access from anywhere\n\n$IPTABLES -A INPUT -p tcp -s 0/0 --dport 80 -j ACCEPT\n\n# Allow packets that are part of an established connection to pass\n# through the firewall. This is required for normal Internet activity\n# by inside clients.\n\n$IPTABLES -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n\n# Anything not already matched gets firewalled and logged.\n\n$IPTABLES -A INPUT -j firewalled\n</code></pre>"},{"location":"2015/05/22/no-wi-fi-device-found/","title":"No Wi-Fi device found","text":"<p>I just reinstalled one of my machines with Fedora 21. The install went great, but when the machine was done rebooting, and I was trying to set up my access to a wireless network with nmcli (NetworkManager), I got the following error-message:</p> <pre><code># nmcli dev\nDEVICE   TYPE      STATE        CONNECTION \nenp0s25  ethernet  unavailable  --         \nlo       loopback  unmanaged    --         \nwlo1     wifi      unmanaged    --\n</code></pre> <p>..and:</p> <pre><code># nmcli dev wifi rescan\nError: No Wi-Fi device found.\n</code></pre> <p>Spending a lot of time finding what the problem was, I finally found the solution. It seems that Wi-Fi support in NetworkManager has been separated to a plugin. The package NetworkManager-wifi was missing. According to Pablo S. Torralba, who was kind enough to comment on this post, it should be enough to kill NetworkManager and launch it again as root. Should that fail, you can always try the old reboot-trick! Either way, it should hopefully be working.</p>","tags":["error","fedora","linux","NetworkManager","nmcli","no wi-fi"]},{"location":"2008/12/02/one-time-password-calculator-on-fedora/","title":"One Time Password Calculator on Fedora","text":"<p>I have been annoyed SO many times of the lack of OTP-Calculators in Fedora. With Debian and Ubuntu you can find the program donkey. Unfortunately there\u2019s nothing in sight for our beloved distribution. I managed to convert the donkey debian package to an rpm. Here\u2019s how you do it.</p> <p>First off we need to install alien, a package converter that converts between Red Hat rpm, Debian deb, Stampede slp, Slackware tgz, and Solaris pkg file formats.</p> <p>Download the Deb-rpm package and html2text and install them with (as root):</p> <pre><code># rpm --nodeps -Uvh deb-1.10.27-3.i586.rpm\n# rpm --nodeps -Uvh html2text-1.3.2a-3.i586.rpm\n</code></pre> <p>Also install rpmbuild:</p> <pre><code># yum install rpm-build\n</code></pre> <p>Once this is done, you need to download the alien-package and unpack it, then installing it:</p> <pre><code># wget http://content.hccfl.edu/pollock/AUnix1/alien/alien_8.64.tar.gz\n# tar -zxvf alien_8.64.tar.gz\n# cd alien/\n# perl Makefile.PL\n# make PREFIX=/usr\n# make PREFIX=/usr install\n</code></pre> <p>Now download the donkey debian package, and convert it to rpm:</p> <pre><code># wget http://ftp.no.debian.org/debian/pool/main/d/donkey/donkey_0.5-17_i386.deb\n# alien --to-rpm donkey_0.5-17_i386.deb\n# yum --nogpgcheck localinstall donkey-0.5-18.i386.rpm\n</code></pre> <p>And that\u2019s it. :)</p> <p>If you\u2019re not bothered to go through the whole process just to get hold of the donkey-package, you can find it here.</p>"},{"location":"2008/11/04/oracle-tips-and-tricks/","title":"Oracle Tips and Tricks","text":"<p>Finding out if Oracle is running on the machine (Oracle always has a db-writer process running):</p> <pre><code>ps aux | grep dbw\n</code></pre> <p>Finding the name of the database-instance:</p> <pre><code>ps aux | grep -v grep | grep dbw | cut -d _ -f 3\n</code></pre> <p>Logging in as sysdba:</p> <pre><code>sqlplus \"/ as sysdba\"\n</code></pre> <p>Finding out where Oracle places the archive-logs:</p> <pre><code>&gt; show parameter log_archive_dest;\n</code></pre> <p>Show general log information:</p> <pre><code>&gt; show parameter log_archive;\n</code></pre> <p>Setting the archive-log path:</p> <pre><code>&gt; system set log_archive_dest='/path/to/logs/arch';\n</code></pre> <p>Finding out where Oracle places the alert-log:</p> <pre><code>&gt; show parameter background_dump_dest;\n</code></pre> <p>Healthchecking Oracle (if you are able to take down the database):</p> <pre><code>&gt; shutdown abort;\n&gt; startup;\n&gt; shutdown;\n&gt; startup;\n&gt; select sysdate from dual;\n</code></pre> <p>Forcing Oracle to write to the archive-logs:</p> <pre><code>&gt; alter system switch logfile;\n</code></pre> <p>Starting the database if it isn\u2019t running:</p> <pre><code>&gt; alter database open;\n</code></pre>","tags":["oracle","linux","cheatsheet"]},{"location":"2012/04/13/p4-nettradio-p%C3%A5-linux/","title":"P4 nettradio p\u00e5 Linux","text":"<p>Skulle du \u00f8nske \u00e5 h\u00f8re p\u00e5 P4 sin nettradio uten \u00e5 m\u00e5tte ha et nettleservindu \u00e5pen, kan du bare peke din mediaspiller (som f.eks. vlc eller mplayer) direkte til str\u00f8mmen. Hvis vi bruker mplayer:</p> <p>For P4:</p> <pre><code>mplayer mms://mms-cluster2.nextra.no/P4_Norge\n</code></pre> <p>For P4 Bandit</p> <pre><code>mplayer mms://mms-cluster2.nextra.no/P4_bandit\n</code></pre> <p>Bare erstatt mplayer med vlc, eller noe annet, skulle du \u00f8nske \u00e5 endre mediaspiller som benyttes.</p>"},{"location":"2008/07/31/packard-bell-easy-one-dc-on-slackware-100/","title":"Packard Bell Easy One DC on Slackware 10.0","text":"<p>Packard Bell Easy One DC running Slackware Linux 10.0 with Linux kernel 2.4.26</p> <ul> <li>Mobile AMD Duron 700 Mhz</li> <li>VIA Apollo KT133 chipset</li> <li>LCD 12.1\u201d TFT SVGA , 800\u00d7600 pixel</li> <li>192 MB SDRAM (100MHz)</li> <li>6GB HDD</li> <li>ATI Rage Mobility-M1 4MB APG Video Controller</li> <li>Versaglide Touchpad / NX Pad</li> <li>OZ6833 PC-Card Controller</li> <li>VIA 686A PCI Audio Controller</li> <li>Internal 24x CD-ROM drive</li> <li>USB 1.0</li> <li>Askey LT Winmodem (DSP1456/MARS3)</li> <li>2 Internet buttons</li> <li>Super Input/Output Controller SMC FDC37N869</li> </ul> <p>A list of built-in PCI hardware:</p> <pre><code>00:00.0 Host bridge: VIA Technologies, Inc. VT8363/8365 [KT133/KM133] (rev 03)\n00:01.0 PCI bridge: VIA Technologies, Inc. VT8371 [KX133 AGP]\n00:06.0 Communication controller: Lucent Microelectronics LT WinModem\n00:07.0 ISA bridge: VIA Technologies, Inc. VT82C686 [Apollo Super South] (rev 22)\n00:07.1 IDE interface: VIA Technologies, Inc. VT82C586A/B/VT82C686/A/B/VT823x/A/C/VT8235 PIPC Bus Master IDE (rev 10)\n00:07.2 USB Controller: VIA Technologies, Inc. VT6202 [USB 2.0 controller] (rev 10)\n00:07.4 ISA bridge: VIA Technologies, Inc. VT82C686 [Apollo Super ACPI] (rev 30)\n00:07.5 Multimedia audio controller: VIA Technologies, Inc. VT82C686 AC97 Audio Controller (rev 20)\n00:0c.0 CardBus bridge: O2 Micro, Inc. OZ6832/6833 Cardbus Controller (rev 34)\n00:0c.1 CardBus bridge: O2 Micro, Inc. OZ6832/6833 Cardbus Controller (rev 34)\n01:00.0 VGA compatible controller: ATI Technologies Inc Rage Mobility P/M AGP 2x (rev 64)\n</code></pre>"},{"location":"2008/07/31/packard-bell-easy-one-dc-on-slackware-100/#x11r670-xorg","title":"X11R6.7.0 (X.Org)","text":"<p>I configured X11R6.7.0 (xorgconfig) with the ati generic driver and it worked fine.</p> <p>From my Section \u201cDevice\u201d in /etc/X11/xorg.conf</p> <pre><code>Identifier  \"** ATI (generic)               [ati]\"\nDriver      \"ati\"\n</code></pre>"},{"location":"2008/07/31/packard-bell-easy-one-dc-on-slackware-100/#audio","title":"Audio","text":"<p>The built-in audio card is an VIA686 PCI Audio Controller and is supported by the snd-via82xx module in the kernel.</p> <pre><code>ALSA device list:\n#0: VIA 82C686A/B rev20\n</code></pre>"},{"location":"2008/07/31/packard-bell-easy-one-dc-on-slackware-100/#internal-24x-cd-rom-drive","title":"Internal 24x CD-ROM drive","text":"<p>Seems to work fine, and was found by kernel. No problem with playing any movies or sound.</p> <pre><code>hdc: ATAPI 24X CD-ROM drive, 128kB Cache, UDMA(33)\nUniform CD-ROM driver Revision: 3.12\n</code></pre>"},{"location":"2008/07/31/packard-bell-easy-one-dc-on-slackware-100/#modem-pcmcia","title":"Modem / PCMCIA","text":"<p>These are the things I\u2019ve not had the opportunity to test myself, but I\u2019ll attempt to give some information about them below.</p> <ul> <li>The integrated modem seems to be recognized by the kernel.</li> <li>I\u2019ve not had the chance yet to test PCMCIA, but after a few searches on google, it seems like it doesn\u2019t take much to make it work.</li> </ul> <p>Should there be anything you would like to add to this document, please post a comment.</p> <p>Back to Linux-on-Laptops.com</p>"},{"location":"2008/04/26/passed-rhce/","title":"Passed RHCE!","text":"<p>I\u2019ve intentionally been waiting to write this post, as I\u2019ve not been so sure of what to write. I guess it all depended on the outcome of my RHCE-exam that I had yesterday. The results? Well, see for yourself.</p> <pre><code>SECTION I:    TROUBLESHOOTING AND SYSTEM MAINTENANCE\nRHCE requirements:  completion of compulsory items (50 points)\noverall section score of 80 or higher\nRHCT requirements:  completion of compulsory items (50 points)\n\nCompulsory Section I score:                        50.0\nNon-compulsory Section I score:                    50.0\nOverall Section I score:                           100\n\nSECTION II:  INSTALLATION AND CONFIGURATION\nRHCE requirements: score of 70 or higher on RHCT components (100 points)\nscore of 70 or higher on RHCE components (100 points)\n\nRHCT requirement:  score of 70 or higher on RHCT components (100 points)\n\nRHCT components score:                             100.0\nRHCE components score:                             100.0\n\nRHCE Certification:                                PASS\n</code></pre> <p>I just can\u2019t believe that I aced the test! 100% correct, god! I have to tell you, I never ever thought this was possible, but the countless hours I spent studying and practicing for the test was well worth it. :)</p> <p>I\u2019ll be posting some tips and tricks concerning the RHCE-exam soon, so stay tuned.</p>"},{"location":"2009/08/28/password-protecting-folders-with-nginx/","title":"Password protecting folders with nginx","text":"<p>Ever wondered how you can password protect a folder and the underlying content with nginx the same way Apache does? Pretty simple.</p> <p>First create a htpass-file like so:</p> <pre><code>htpasswd -bc htpass NewUser NewPassword\n</code></pre> <p>Edit your site\u2019s configuration file by adding the following lines of code inside the server-block:</p> <pre><code>location ^~ /secret {\n    auth_basic \"Restricted\";\n    auth_basic_user_file /etc/nginx/htpass;\n}\n</code></pre> <p>And your folder should be password protected. :)</p>"},{"location":"2014/01/27/problems-with-wicd-curses-on-fedora-20/","title":"Problems with wicd-curses on Fedora 20","text":"<p>If you\u2019re on Fedora 20, are trying to run wicd-curses, and keep getting errors like the one below:</p> <pre><code>Traceback (most recent call last):\n  File \"/usr/share/wicd/curses/wicd-curses.py\", line 1067, in \n    main()\n  File \"/usr/share/wicd/curses/wicd-curses.py\", line 995, in main\n    ui.run_wrapper(run)\n  File \"/usr/lib64/python2.7/site-packages/urwid/raw_display.py\", line 241, in run_wrapper\n    return fn()\n  File \"/usr/share/wicd/curses/wicd-curses.py\", line 88, in wrapper\n    return func(*args, **kargs)\n  File \"/usr/share/wicd/curses/wicd-curses.py\", line 1003, in run\n    app = appGUI()\n  File \"/usr/share/wicd/curses/wicd-curses.py\", line 548, in __init__\n    self.wiredCB = urwid.Filler(WiredComboBox(wiredL))\n  File \"/usr/share/wicd/curses/wicd-curses.py\", line 378, in __init__\n    self.__super.__init__(use_enter=False)\n  File \"/usr/share/wicd/curses/curses_misc.py\", line 351, in __init__\n    self.focus = focus\nAttributeError: can't set attribute\n</code></pre> <p>..then the fix is simple. Open up the file /usr/share/wicd/curses/curses_misc.py, go to line 360, and paste the following below:</p> <pre><code>    @property\n    def focus(self):\n        return self._focus\n\n    @focus.setter\n    def focus(self, index):\n        self._focus = index\n\n    @focus.deleter\n    def focus(self):\n        del self._focus\n\n    def set_list(self,list):\n        self.list = list\n</code></pre> <p>wicd-curses should be working again. This is currently a bug on Bugzilla (https://bugzilla.redhat.com/show_bug.cgi?id=894646).</p>","tags":["fedora","fedora 20","python error","wicd","wicd-curses"]},{"location":"2014/01/26/problems-with-xbmc-audio-on-apple-tv-2/","title":"Problems with XBMC-audio on Apple TV 2","text":"<p>I have an Apple TV 2 that I\u2019ve installed XBMC on. For a while it was working great, but out of the blue suddenly the sound got choppy. I guess there was an update that changed something. The best description I have for it is that the audio sounded like a machine gun \u2013 very annoying! And made movies unwatchable. Luckily, there\u2019s a way to fix this. You simply need to change some of the XBMC-settings.</p> <p>Go to:</p> <ul> <li>System</li> <li>System</li> <li>Audio output</li> <li>Check/uncheck Dolby Digital AC3 and DTS as capable receivers</li> </ul> <p>This should do the trick! It certainly worked for me, so sure hope it works for you.</p> <p>Continue enjoying your movies and series!</p>","tags":["apple","apple tv","atv","atv2","audio choppy","audio issues","sound issues","sound problems","xbmc"]},{"location":"2008/09/15/projects-projects-projects/","title":"Projects, projects, projects","text":"<p>I get envious when I come upon people that have such a passion for things they do. For instance, my friend Stian, he has so many projects going on it\u2019s insane. He\u2019s been coding an email-client in perl, which he\u2019s named Inlook (brilliant name \u2013 Microsoft\u2019s Outlook, get it?), he also has a music-project, and he\u2019s trying to write a novel. Another friend, Kenneth, is always looking for new stuff to try out, especially when it comes to media \u2013 ripping his own DVD\u2019s, always finding and testing out what the best alternatives are. At last I\u2019ve found something to get me going. I\u2019ve been working on two things of late \u2013 a way to get hold of your passwords through a terminal or SSH, in a safe and easy way, and making an open source pastebin. Here\u2019s a screenshot of both projects:</p> <p> </p> <p>sps is pretty simple \u2013 as not only do you not need a graphical interface to manage it, but it\u2019s dependencies are rather common things. As for the pastebin, the temporary name I\u2019ve given it is code-fu. If it\u2019ll stick or not remains to be seen. But at least I\u2019ve got some things going on. Very exciting. :)</p>"},{"location":"2010/09/15/python-password-generator/","title":"Python password generator","text":"<pre><code>#!/usr/bin/env python\n# Filename: passgen.py\n\nimport random, string\n\nmystr = string.ascii_letters+string.digits\nrandom_string = []\n\nwhile len(random_string) &lt;= 8:\n    random_string.append(random.choice(mystr))\nprint \"\".join(random_string)\n</code></pre>"},{"location":"2008/02/28/quake-wars-and-switchscreen/","title":"Quake Wars and switchscreen","text":"<p>Still being thrilled about having gotten my 22\u201d monitor, after 2 years of nagging (I need to emphasize that I\u2019ve spent TWO years nagging my better half about a damn monitor. Did I mention I spent 2 years?), I briefly spoke to a co-worker of mine about having nothing to play after I quit World of Warcraft. He said that he\u2019d heard about a game called Quake Wars, and that it had a Linux-client. So I took a look at it, downloaded the demo, and now I\u2019m hooked! Not as much as before, but it\u2019s fun nonetheless. Anyway \u2013 playing the game with a 1680\u00d71050 monitor resolution is INSANE! I can just about feel a grenade blowing up in my face. We\u2019re about 3 people at work planning on making a clan, so we just need a few more to make it work. And I am definitely going to buy the full game tomorrow! For more information about Quake Wars, take a look at http://community.enemyterritory.com/.</p> <p>Right, that was that about Quake Wars. Now to my next subject \u2013 a nifty little program named switchscreen. A quote from the website:</p> <p>switchscreen is a command-line utility that moves the X mouse cursor to a given point on a given screen. I wrote it because I could find no other program that can define both the mouse position and screen number.</p> <p>In other words \u2013 you can use your keyboard to navigate between your two monitors instead of your mouse! I find it to be a wicked program that I just had to mention. ;)</p> <p>Update: I forgot to mention yesterday (as I\u2019m typing it\u2019s the 29th) that I nearly got bald and (even more) nuts by not being able to find the \u201cx-devel-\u201d package for SuSe, being that we need libx.h to make switchscreen work. Just fire up YaST and search for xorg-x11-devel, and there you go!</p>"},{"location":"2010/09/16/rapidshare-linux-script-revisited/","title":"Rapidshare Linux script revisited","text":"<p>Update: I just added a new variable in the script, DAYS, which specifies how many days the cookie you create is valid for. Update 2011-09-13: Seems Rapidshare have been tampering with their API, which made the cookie-generating script useless. I basically changed the getaccountdetails_v1 with getaccountdetails, and the script is working fine now. I\u2019ve fixed the script below to reflect this.</p> <p>The code to get the Rapidshare-cookie in my previous post about this subject, Rapidshare Linux Script, unfortunately doesn\u2019t work anymore. It seems that Rapidshare has moved from using https://ssl.rapidshare.com/premzone.html to https://ssl.rapidshare.com/cgi-bin/premiumzone.cgi, so things just don\u2019t work as they used to. This is for people with a premium account.</p> <p>However, there\u2019s a solution. First off, log in to your Rapidshare-account, go to Settings and make sure to check the box named Direct downloads, requested files are saved without redirection via RapidShare.</p> <p>To grab the cookie you need, place the piece of code below in a file, save it, do a chmod +x on it. Just remember to replace MyUserName and MyPassword with your username and password before you run the script:</p> <p>Note: The script requires curl to be installed.</p> <pre><code>#!/bin/bash\n# Script to get your Rapidshare-cookie, nom nom\n# Jorge Enrique Barrera\n\n# Variables you can change\nUSERNAME=\"MyUserName\" # Username to your Rapidshare premium-account\nPASSWORD=\"MyPassword\" # Password\nCOOKIEJAR=\"/home/jorge/.cookies\" # Where the cookies are to be placed\nDAYS=\"30\" # The number of days the cookie is valid for\n\n## Do not change anything below here ##\n\nDATA=\"sub=getaccountdetails&amp;withcookie;=1&amp;type;=prem&amp;login;=$USERNAME&amp;password;=$PASSWORD\"\nCOOKIE_STRING=$(curl -s --data \"$DATA\" \"https://api.rapidshare.com/cgi-bin/rsapi.cgi\" | grep cookie | cut -c 8-)\nCOOKIE=\".rapidshare.com TRUE / FALSE $(($(date +%s)+24*60*60*$DAYS)) enc $COOKIE_STRING\"\n\nif [ ! -d $COOKIEJAR ]; then\n        echo \"Creating the directory $COOKIEJAR.\"\n        mkdir $COOKIEJAR\n        echo \"Done.\"\nfi\n\necho \"$COOKIE\" | tr ' ' '\\t' &gt; $COOKIEJAR/rapidshare\n</code></pre> <p>Now that the cookie is present, you can proceed by downloading the files you want. Which way you do that, is up to you.</p> <p>Either way I will paste two scripts, one with wget and the other one with aria2, and you can then make your pick. Just place the URL of the files you want to download in /home/YourUsername/Downloads/.url, one in each line:</p>"},{"location":"2010/09/16/rapidshare-linux-script-revisited/#wget","title":"wget","text":"<pre><code>#!/bin/bash\nLIST=\"/home/jorge/Downloads/.url\"\ncd ~/Downloads\nfor url in `cat $LIST`\ndo\n    wget -c --load-cookies /home/jorge/.cookies/rapidshare $url\ndone\n</code></pre> <p>Save this file as wrsd.sh and make it executable by doing a:</p> <pre><code>chmod +x wrsd.sh\n</code></pre>"},{"location":"2010/09/16/rapidshare-linux-script-revisited/#aria2","title":"aria2","text":"<pre><code>#!/bin/bash\ncd ~/Downloads\naria2c -j 5 -c --load-cookies=/home/jorge/.cookies/rapidshare -i /home/jorge/Downloads/.url\n</code></pre> <p>Enjoy. :)</p>"},{"location":"2010/03/26/rapidshare-linux-script/","title":"Rapidshare Linux script","text":"<p>Update: Seems this procedure isn\u2019t working anymore, as Rapidshare has switched some things around. Have a look at Rapidshare Linux Script Revisited for updated information.</p> <p>A friend tipped me about Rapidshare, and has been working great ever since I bought a premium account. Thing is though, most addons/download clients are specifically for Windows, and I use Fedora Linux. I searched quite a while before I found an option that makes downloading through a Rapidshare Premium Account damn simple; namely making a script. And it\u2019s really easy!</p> <p>What we first need to do is to grab and save your Rapidshare cookie. This is luckily something you only need to do once. Execute the following command to do so:</p> <pre><code>wget --save-cookies /home/jorge/.cookies/rapidshare --post-data \"login=USERNAME&amp;password=PASSWORD\" -O - https://ssl.rapidshare.com/cgi-bin/premiumzone.cgi &gt; /dev/null\n</code></pre> <p>..replacing USERNAME and PASSWORD with your Rapidshare account details, and /home/jorge with whatever suits you.</p> <p>Once that is done, we proceed with the script itself. Now, most pages will recommend using wget for this, but I personally prefer aria2. This is because aria2 supports multiple files download and it also splits each file in multiple parts for faster downloading. Moreover you can resume the download any time you want just by typing the same command again.</p> <p>Either way I will paste two scripts, one with wget and the other one with aria2, and you can then make your pick.</p>"},{"location":"2010/03/26/rapidshare-linux-script/#wget","title":"wget","text":"<pre><code>#!/bin/bash\nLIST=\"/home/jorge/Downloads/.url\"\ncd ~/Downloads\nfor url in `cat $LIST`\ndo\n    wget -c --load-cookies /home/jorge/.cookies/rapidshare $url\ndone\n</code></pre> <p>Save this file as wrsd.sh and make it executable by doing a:</p> <pre><code>chmod +x wrsd.sh\n</code></pre>"},{"location":"2010/03/26/rapidshare-linux-script/#aria2","title":"aria2","text":"<pre><code>#!/bin/bash\ncd ~/Downloads\naria2c -j 5 -c --load-cookies=/home/jorge/.cookies/rapidshare -i /home/jorge/Downloads/.url\n</code></pre> <p>Save this as arsd.sh and make it executable just like above. Now the file containing the various URLs to download is in my case located in the file ~/Downloads/.url. One URL in each line should do the trick. Open the file, paste a few URLs, save and close it, and run either wrsd.sh or arsd.sh, depending on if you want to use wget or aria2.</p> <p>Enjoy!</p>"},{"location":"2010/08/27/recommended-firefox-addons/","title":"Recommended Firefox addons","text":"<p>This post never gets old. I constantly keep finding new and useful addons for Firefox. Here\u2019s the list of what I consider to be some of the best Firefox addons out there.</p> <ul> <li>Adblock Plus</li> <li>Ever been annoyed by all those ads and banners on the internet that often take longer to download than everything else on the page? Install Adblock Plus now and get rid of them.</li> <li>MediaplayerConnectivity</li> <li>Allow you to launch embed video of website in an external application with a simple click.</li> <li>StartupMaster</li> <li>Asks for the master password at startup (fixes multiple password prompt).</li> <li>Tab Mix Plus</li> <li>Tab Mix Plus enhances Firefox\u2019s tab browsing capabilities. It includes such features as duplicating tabs, controlling tab focus, tab clicking options, undo closed tabs and windows, plus much more. It also includes a full-featured session manager.</li> <li>Tiny Menu</li> <li>Replace the standard menu bar with a tiny menu popup.</li> <li>Tree Style Tab</li> <li>Show tabs like a tree.</li> <li>Xmarks</li> <li>Xmarks is the #1 bookmarking add-on. Install it on all your computers to keep your bookmarks and (optionally) passwords backed up and synchronized. Xmarks also helps you uncover the best of the web based on what millions of people are bookmarking.</li> <li>It\u2019s all Text!</li> <li>Right click on a text area, select \u201cIt\u2019s All Text!\u201d and edit the text in the editor of your choice.</li> <li>Web Developer</li> <li>The Web Developer extension adds a menu and a toolbar with various web developer tools.</li> <li>BarTab</li> <li>BarTab can intercept when tabs are loaded in the background or restored after a browser restart and will only load the content when the tab is actually visited. It also allows you to free memory by unloading already loaded tabs, either manually or automatically.</li> </ul>"},{"location":"2008/04/18/recommended-mac-os-x-software/","title":"Recommended Mac OS X Software","text":"<p>Before I start listing some of my favourite Mac OS X-software, let me just say that my Mac OS X 10.5-frenzy is over.  Some things were just too laggy in Leopard, on my Powerbook 12?, so I decided to go back to Tiger. And with 1.25GB memory on the machine, it\u2019s working with flying colors. Now, on to the software!</p> <ul> <li>Quicksilver</li> <li>Allows users to use the keyboard to rapidly perform tasks such as launching applications, manipulating files and data, running scripts or sending e-mail. It is similar to the Mac OS X applications LaunchBar and Butler, but uses a different interaction paradigm. Although it is a complex application, it is centered on a very simple three-panel interface, called the \u201ccommand window\u201d: the user performs complex tasks using simple, configurable key-combinations. Quicksilver\u2019s icon is based on the alchemical symbol for mercury (quicksilver is another name for mercury).</li> <li>Adium</li> <li>A popular free software instant messaging client for Mac OS X that supports multiple protocols through the libezv (for Bonjour) and the libpurple (all other protocols) libraries. It is written using Mac OS X\u2019s Cocoa API, and it is released under the GNU General Public License, and many other licenses for components that are distributed with Adium.</li> <li>OnyX</li> <li>A popular freeware for Mac OS X developed by French developer Jo\u00ebl Barri\u00e8re. It is a multifunctional tool for maintenance and optimization, and can control many basic UNIX programs already built into OS X. It can also help set hidden preferences otherwise modifed by using plist editors and the command line.[1] It has become a highly praised utility among many in the Mac community, in part due to its extensive language support and excellent help files.</li> <li>VLC</li> <li>A portable multimedia player, encoder, and streamer supporting many audio and video codecs and file formats as well as DVDs, VCDs, and various streaming protocols. It is able to stream over networks and to transcode multimedia files and save them into various different formats. VLC used to stand for VideoLAN Client, but that meaning is now deprecated.</li> <li>AppCleaner</li> <li>A small application which allows you to completely and properly uninstall unwanted apps. It isn\u2019t, in fact, sufficient to just delete an application. Installing an application distributes many files throughout your System using space of your Hard Drive unnecessarily.</li> <li>SSHKeychain</li> <li>You no longer have to cancel your ssh request because you forgot to load your keys. Because SSHKeychain acts as a gateway between you and the agent, it can automatically add keys when you need them. SSH will just pause for a few seconds, and you\u2019ll be on your way. SSHKeychain integrates with the Apple Keychain. All key passphrases can be stored, and you can use all your keys just by unlocking the Keychain.</li> <li>Safariblock</li> <li>The goal of SafariBlock is to provide a seamless extension to Safari Web Browser that supports ad-blocking. It is by design an imitation of Firefox\u2019s AdBlock extension.</li> </ul>"},{"location":"2008/08/04/redirecting-a-webpage-using-301-redirect/","title":"Redirecting a webpage using 301 redirect","text":"<p>Let\u2019s say that someone on the Internet has been linking to one of your webpages, but for some reason you change the system you use (Changing from Drupal to WordPress, for instance), or just ended up moving the page somewhere else. Sending an email to the people linking to your site doesn\u2019t guarantee that they\u2019ll take the time to point to the new URL of the page. So what can YOU do? Use .htaccess and a 301 Redirect. I\u2019ll not explain here where the file is to be placed, or how you configure Apache to take it into consideration.</p> <p>Place the following bit of code in your .htaccess:</p> <pre><code>Redirect 301 /old-location/file.html http://www.new-location.com/file.html\n</code></pre> <p>Easy peasy.</p>"},{"location":"2012/11/29/reducing-pdf-file-size-in-linux/","title":"Reducing PDF file-size in Linux","text":"<p>The other day I downloaded a PDF that ended up being a whole lot bigger than I thought. A \u201cwhopping\u201d 230MB, which is another deal compared to the 30MB PDF\u2019s that I\u2019m accustomed to. So how to reduce the file-size? Ghostscript to the rescue!</p> <p>If you have Ghostscript installed, run the following command to reduce the file-size of your PDF:</p> <pre><code>gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -sOutputFile=new_file.pdf original_file.pdf\n</code></pre> <p>Now you have a few options here under -dPDFSettings:</p> <ul> <li>/screen selects low-resolution output, and the lowest file-size.</li> <li>/ebook selects medium-resolution output, with a medium file-size.</li> <li>/printer and /prepress are both the high-resolution options, which is mainly used for printing PDFs. As you might have guessed, this option gives you the biggest file-size (yes, even bigger than your mother).</li> </ul> <p>The results?</p> <pre><code>[jorge@(ashitaka):~/Downloads/PDF] du -h *\n29M new_file.pdf\n230M original_file.pdf\n</code></pre> <p>What can I say. I\u2019m a cheap bastard when it comes to storage space, no matter how low the price might be. ;)</p>"},{"location":"2008/10/28/remove-comments-and-empty-lines-with-grep/","title":"Remove comments and empty lines with grep","text":"<pre><code>grep -v -e ^# -e ^$ file.txt\n</code></pre>"},{"location":"2009/11/26/removing-your-master-boot-record-mbr/","title":"Removing your Master Boot Record (MBR)","text":"<p>Removing MBR (including the partition table):</p> <pre><code>dd if=/dev/null of=/dev/sdX bs=512 count=1\n</code></pre> <p>Removing MBR (excluding the partition table):</p> <pre><code>dd if=/dev/null of=/dev/sdX bs=446 count=1\n</code></pre> <p>sdX is the device you want to remove the MBR of (like a USB-stick).</p>"},{"location":"2024/01/16/retain-x-amount-of-files/","title":"Retain X amount of files","text":"<p>I encountered an issue today where someone requested that we keep the 10 newest backup files, while the rest of them (the oldest) were deleted. So I made this little script:</p> <pre><code>#!/bin/bash\n\nFILE_DIR=\"/home/jorge/backup/\"\nNUMBER_OF_FILES=\"$(ls -t $FILE_DIR | wc -l)\"\nRETAIN=10\n\nif [ \"$NUMBER_OF_FILES\" -ge \"$RETAIN\" ]; then\n    cd $FILE_DIR\n    ls -t | sed -e \"1,$RETAIN d\" | xargs rm -f\nfi\n</code></pre> <p>This can be modified to match with any type of file or filename.</p>","tags":["linux","retain","files","delete"]},{"location":"2008/04/27/rhctrhce-exam-preparation/","title":"RHCT/RHCE exam preparation","text":"<p>Right, first off let me start by saying that I can\u2019t tell you the contents of the RHCT/RHCE exam. At the beginning of each exam you have to sign a contract that legally binds you to keep silent about it. I can however tell you the methods I used to prepare myself for the exam.</p> <p>If you\u2019re wondering what things you should be studying, this list from Red Hat should always be up to date, as far as I know. So this is, or should be, your only reliable source when it comes to finding out exactly what you need to prepare for.</p> <p>Attending a Red Hat course is brilliant. Even experienced Linux system administrators can learn something new there. I myself attended RH133 (Red Hat Linux System Administration) and RH253 (Red Hat Linux Networking and Security), and there are a lot of things there that will prepare you properly for the exam, IF you pay attention. These courses give you some studymaterial as well, so I used those books for studying also.</p> <p>I can\u2019t emphasize this enough, there is NOTHING like hands-on training. You can read and read all you want, but unless you experience it first-hand, it just won\u2019t sink in. As far as I know, the operating system that\u2019s most similar to Red Hat Enterprise Linux, is CentOS, which means that you can use that for training (and the test-exams!). How to do this, you ask? Easy. Use VirtualBox, or some other software that\u2019s similar, VMWare, Qemu, Paralell if you\u2019re on a mac. You can install a virtual machine and just play around there. That\u2019s what I did. I set up both a client and a server, and from there I tested everything from NFS, NIS, Samba, DNS, HTTP, Squid, and so on. It really helps, believe me.</p> <p>The following point is particularly important. Read the exam properly. That\u2019s right. Out of 8 people in total taking the exam on Friday, including myself, one failed right at the start because he wasn\u2019t properly prepared, and another one failed because she didn\u2019t go through the exam task-list properly, thus made a mistake that just couldn\u2019t be reversed. So take your time, go through the list of tasks you are given, and make some mental notes, or even better, scribble them down on the sheet of paper you are given. It helps to systematically cross out the tasks you\u2019ve done, so keep a clear overview of how much left there is to do. And remember to spend your time wisely. If a task seems too difficult, try another easier task, and get back to the more difficult one when you have time. At least that way you\u2019ll get some things completed, rather than getting stuck on that particular problem, and not really gaining anything.</p> <p>If there\u2019s something you feel confident about, read about it again, and again, and again. You might think you know a lot, or everything, about something, but you don\u2019t. Simple as that. Better to be over-prepared if you ask me.</p> <p>If this sounds like hard work, you\u2019re damn skippy that it is. RHCE isn\u2019t meant to be simple, but I can tell you that the satisfaction of passing is greater than you think. And if you think \u201cI can\u2019t possibly do this\u201d, you can! I myself knew close to nothing about Red Hat-systems a month ago. So what they say is true, if there\u2019s a will, there\u2019s a way.</p> <p>Good luck to you future RHCT/RHCE\u2019s!</p>"},{"location":"2010/02/18/rhythmbox-equalizer-revisited/","title":"Rhythmbox equalizer revisited","text":"<p>June 30th 2009 I wrote about an equalizer-plugin for Rhythmbox which then was just about the only decent thing available. It now seems that that plugin isn\u2019t being worked on anymore. Luckily we have people like Christopher Kruse from . :) He has now released version 1.3 of his Rhythmbox equalizer-plugin, which you can find at .</p> <p>The installation:</p> <pre><code>wget http://rbeq.googlecode.com/files/rbeq-1.3.tar.gz\ntar -zxvf rbeq-1.3.tar.gz -C ~/.gnome2/\n</code></pre> <p>Head on over to  for the main post. Thanks Christopher!</p> <p>And of course, a screenshot of the plugin:</p> <p></p>"},{"location":"2009/06/30/rhythmbox-equalizer/","title":"Rhythmbox equalizer","text":"<p>Update: For a newer and updated equalizer-plugin, check out the post Rhythmbox Equalizer Revisited. Everything below here is outdated.</p> <p>For a while I\u2019ve been using audacious to play my music. No particular reason, other than that it has an equalizer. I\u2019ve heard lots of good things about Rhythmbox though, but lacking an equalizer, I never turned to it. But now, thanks to Teemu Kallio from , I at least am going to start using Rhythmbox.</p> <p>Grab the file from . I used to link to the main site, but it seems that it has been taken down.</p> <p>So, the installation:</p> <pre><code>wget http://jorge.fbarr.net/files/rhythmbox-eq.tar.gz\nmkdir -p ~/.gnome2/rhythmbox/plugins/\ntar -zxvf rhythmbox-eq.tar.gz -C ~/.gnome2/rhythmbox/plugins/\n</code></pre> <p>And that\u2019s pretty much it. Fire up Rhythmbox, go to Edit -&gt; Plugins and select Equalizer. Now press the Configure-button to configure it. If you want the Rock-preset that you usually find in audacious and/or xmms, make the equalizer have the same values as in the screenshot below:</p> <p></p> <p>A big thanks to Teemu Kallio. :)</p>"},{"location":"2023/12/20/scan-for-newly-added-disks/","title":"Scan for newly added disks","text":"<p>To scan for newly added/modified disks, run the following command as root:</p> <pre><code>for f in /sys/class/scsci_host/*; do echo \"---\" &gt; $f/scan; done\n</code></pre>"},{"location":"2010/10/20/select-browser-from-variable-display/","title":"Select browser from variable DISPLAY","text":"<p>I have two monitors at work, which I like to use in a separate X-screen setup. Meaning that each monitor has an own X-server running on it. Thing is though, I like to use Firefox on Monitor 1, while I use Google Chrome on Monitor 2. So with this script, right-clicking a link in Monitor 1 will open it up in Firefox, while if I do so on Monitor 2, it will open it up in Google Chrome. Very nifty. Just go to System -&gt; Preferences -&gt; Preferred Applications (if you\u2019re using GNOME like moi) and select this script instead of a regular browser.</p> <pre><code>#!/bin/bash\n# A little script that selects a browser\n# to show an URL on, based on the variable\n# DISPLAY on a separate X-screen setup.\n# In other words, the active monitor.\n#\n# Jorge Enrique Barrera \n\nif [ \"$DISPLAY\" = \":0.0\" ]; then\n    /usr/bin/firefox $1\nelif [ \"$DISPLAY\" = \":0.1\" ]; then\n    /usr/bin/google-chrome $1\nfi\n</code></pre>"},{"location":"2008/03/27/simple-directory-listing-script/","title":"Simple directory listing script","text":"<pre><code>&lt;?php\n\n/*\n *   Dili is free software; you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published by\n *   the Free Software Foundation; either version 2 of the License, or\n *   (at your option) any later version.\n *\n *   Dili is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *\n *   You should have received a copy of the GNU General Public License\n *   along with Dili; if not, write to the Free Software\n *   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n *\n********************************************************************************\n *  \n * This is the Dili (DIrectory LIsting) script v0.0.1.\n * Place the index.php in the directory you want listed, simple as that. :)\n *  \n * Jorge Barrera Grandon \n * Atlantiscrew \n *\n */\n\n$title = basename(dirname(__FILE__)).'/';\n\n        echo '';\n        echo '';\n        echo '';\n        echo ''.$title.'';\n        echo '';\n        echo '';\n        echo '';\n        echo 'Directory listing of '.$title.'';\n\n        $dir = opendir(\".\");\n\n        while(FALSE !== ($file = readdir($dir))) {\n            if($file != \".\" &amp;&amp; $file != \"..\" &amp;&amp; $file != \"index.php\") {\n                $myFiles[] = \"$file\";\n            }\n        }\n\n        closedir($dir);\n        sort($myFiles);\n        reset($myFiles);\n\n        foreach($myFiles as $value) {\n            if (is_dir($value)) {\n                echo '[d] - '.$value.'/';\n        } else {\n                echo '[f] - '.$value.'';\n            }\n        }\n\n        echo '';\n        echo '';\n            echo '';\n                echo '';\n            echo '';\n            echo '';\n                echo '';\n            echo '';\n        echo '';\n        echo '';\n        echo '';\n?&gt;\n</code></pre>"},{"location":"2017/06/11/simplehttpserver-with-ssl/","title":"SimpleHTTPServer with SSL","text":"<pre><code>python -m SimpleHTTPServer\n</code></pre> <p>and the result:</p> <pre><code>jorge@applepie:~ $ python -m SimpleHTTPServer 8080\nServing HTTP on 0.0.0.0 port 8080 ...\n</code></pre> <p>It listens on all IPv4 interfaces, and binds to the port you specify, which in my case is 8080. The person on the other side will then be able to access the files in the directory from the outside by going to http://server1.example.com:8080, provided that your machine has the hostname server1.example.com, and that you have the port 8080 forwarded to the IP of server1.</p> <p>But what if you want to provide a secure connection, say over SSL? SimpleHTTPServer has no built in way of doing this.</p> <p>But behold ssl, Python\u2019s built in SSL-module!</p> <p>To create a secure connection for your SimpleHTTPServer, first create a self signed certificate by running the following command (if you don\u2019t have a proper SSL-certificate, that is):</p> <pre><code>openssl req -x509 -newkey rsa:4096 -keyout server1.example.com.key -out server1.example.com.pem -days 365 -nodes\n</code></pre> <p>Now create a script named shttps.py that contains the following code:</p> <pre><code>#!/usr/bin/env python\n\nimport BaseHTTPServer, SimpleHTTPServer\nimport ssl\n\n## Variables you can modify\n\nbind_to_address = ''\nserver_port = 8080\nssl_key_file = \"/etc/ssl/certs/localcerts/server1.example.com.key\"\nssl_certificate_file = \"/etc/ssl/certs/localcerts/server1.example.com.pem\"\n\n\n## Don't modify anything below\n\nhttpd = BaseHTTPServer.HTTPServer((bind_to_address, server_port), SimpleHTTPServer.SimpleHTTPRequestHandler)\nhttpd.socket = ssl.wrap_socket (httpd.socket, server_side=True,\n                                keyfile=ssl_key_file,\n                                certfile=ssl_certificate_file)\nhttpd.serve_forever()\n</code></pre> <p>The only thing that needs further explanation is the variable bind_to_address. Fill this in with the text localhost if you want it to only listen to 127.0.0.1. Leave it blank to have it listen to all IPv4 interfaces (0.0.0.0).</p> <p>Now that the certificate and key is all in place, and the script has been created, make it executable with:</p> <pre><code>chmod +x shttps.py\n</code></pre> <p>Go to the folder you\u2019d like to share the contents of, and run the script:</p> <pre><code>jorge@applepie:~ $ ls\nfoo/ shttps.py\njorge@applepie:~ $ cd foo\njorge@applepie:~/foo $ ls\nhello.txt world.txt\njorge@applepie:~/foo $ ../shttps.py\n</code></pre> <p>The result when you visit https://server1.example.com:8080?</p> <p></p> <p>Because there is no third party verification it\u2019s listed as insecure, but it should do the trick well enough for sharing files with others.</p> <p>If you however do want a free SSL certificate for a more permanent setup, I suggest LetsEncrypt! Check out https://letsencrypt.org/getting-started/ for more information.</p>","tags":["basehttpserver","linux","python","simplehttpserver","ssl"]},{"location":"2016/05/20/split-a-file-into-a-number-of-equal-parts/","title":"Split a file into a number of equal parts","text":"<p>As an example, we have a file named primary_data_file.txt that contains 616 lines of data. We want to split this into 4 files, with the equal amount of lines in each.</p> <pre><code>$ wc -l primary_data_file.txt \n616 primary_data_file.txt\n</code></pre> <p>The following command should do the trick:</p> <pre><code>split -da 1 -l $((`wc -l &lt; primary_data_file.txt`/4)) primary_data_file.txt split_file --additional-suffix=\".txt\"\n</code></pre> <p>The option -da generates the suffixes of length 1, as well as using numeric suffixes instead of alphabetical.</p> <p>The results after running the command are the following files:</p> <pre><code>$ wc -l split_file*\n  154 split_file0.txt\n  154 split_file1.txt\n  154 split_file2.txt\n  154 split_file3.txt\n  616 total\n</code></pre>","tags":["equal","linux","parts","split","tricks","tutorial"]},{"location":"2015/02/20/split-and-merge-pdfs-8211-part-2/","title":"Split and merge PDFs &#8211; part 2","text":"<p>A while ago I wrote a post named Split and merge PDFs with pdftk. Unfortunately, pdftk seems no longer to be maintained for Fedora 21. So we have to use another alternative \u2013 poppler-utils:</p> <p>Install the package with:</p> <pre><code>yum install poppler-utils\n</code></pre> <p>..and you can use them to both split and merge files. poppler-utils contains a list of tools that you can use to manipulate PDFs:</p> <ul> <li>pdfdetach \u2014 lists or extracts embedded files (attachments)</li> <li>pdffonts \u2014 font analyzer</li> <li>pdfimages \u2014 image extractor</li> <li>pdfinfo \u2014 document information</li> <li>pdfseparate \u2014 page extraction tool</li> <li>pdftocairo \u2014 pdf to png/jpeg/pdf/ps/eps/svg converter using cairo</li> <li>pdftohtml \u2014 pdf to html converter</li> <li>pdftoppm \u2014 pdf to ppm/png/jpeg image converter</li> <li>pdftops \u2014 pdf to postscript (ps) converter</li> <li>pdftotext \u2014 text extraction</li> <li>pdfunite \u2014 document merging tool</li> </ul> <p>So, we move on to merging and splitting:</p>","tags":["merge","pdf","poppler-utils","split","tool","tutorial"]},{"location":"2015/02/20/split-and-merge-pdfs-8211-part-2/#merge","title":"Merge","text":"<pre><code>pdfunite first_page.pdf second_page.pdf end_document.pdf\n</code></pre>","tags":["merge","pdf","poppler-utils","split","tool","tutorial"]},{"location":"2015/02/20/split-and-merge-pdfs-8211-part-2/#split","title":"Split","text":"<pre><code>pdfseparate -f 1 end_document.pdf %d.pdf\n</code></pre> <p>Check out man pdfseparate for more information about the tool.</p>","tags":["merge","pdf","poppler-utils","split","tool","tutorial"]},{"location":"2010/01/20/split-and-merge-pdfs-with-pdftk/","title":"Split and merge PDFs with pdftk","text":"<p>Update: Unfortunately, pdftk seems no longer to be maintained for Fedora 21. So if you\u2019re having problems getting hold of it, try the alternative utility poppler-utils. You can find the guide at http://jorge.fbarr.net/2015/02/20/split-and-merge-pdfs-part-2/.</p> <p>First install it:</p> <pre><code>yum -y install pdftk\n</code></pre> <p>Then use it:</p>"},{"location":"2010/01/20/split-and-merge-pdfs-with-pdftk/#merge","title":"Merge","text":"<pre><code>pdftk 1.pdf 2.pdf 3.pdf cat output 123.pdf\n</code></pre>"},{"location":"2010/01/20/split-and-merge-pdfs-with-pdftk/#split","title":"Split","text":"<pre><code>pdftk mydoc.pdf burst\n</code></pre> <p>A very handy tool.</p>"},{"location":"2010/09/08/spotify-for-linux-rpm/","title":"Spotify for Linux RPM","text":"<p>I\u2019ve taken the liberty of converting the \u201cSpotify for Linux\u201d-files located at  from .deb to .rpm. For now it can only be used if you have a Premium account.</p> <p>To install it on Fedora 13, do the following:</p> <pre><code>su -\nrpm --nodeps -Uvh http://jorge.fbarr.net/files/spotify-client-gnome-support.noarch.rpm http://jorge.fbarr.net/files/spotify-client-qt.i386.rpm\n</code></pre> <p>And that\u2019s it. Now you can run Spotify as a Linux-application instead of through Wine. :)</p>"},{"location":"2008/08/14/ssh-agent-script/","title":"ssh-agent-script","text":"<p>To be placed in your .bashrc-file:</p> <pre><code>SSHAGENT=\"/usr/bin/ssh-agent\"\nSSHAGENTARGS=\"-s\"\n\nif [ -z \"$SSH_AUTH_SOCK\" -a -x \"$SSHAGENT\" ]; then\n  eval `$SSHAGENT $SSHAGENTARGS`\n    trap \"kill $SSH_AGENT_PID\" 0\nfi\n</code></pre>"},{"location":"2008/07/08/ssh-clean-keys/","title":"ssh-clean-keys","text":"<p>Simple lines of code to clean invalid hosts from your .known_hosts-file.</p> <pre><code>ssh-clean-keys () \n{ \n    for host in $1 $(dig +short $1);\n    do\n        echo \"Cleaning $host\";\n        ssh-keygen -R $host 2&gt;&amp;1 | sed -e 's,^,I,g';\n    done\n}\n</code></pre>"},{"location":"2017/04/22/sysprep-8211-a-fatal-error-occurred/","title":"sysprep &#8211; a fatal error occurred","text":"<p>I\u2019m currently testing out Windows Deployment Services, and while working with sysprep on a Windows 7 Pro client machine, I got the following error:</p> <p></p> <p>Nothing seemed to work, till I tried the following recipe:</p> <p>Open the run-menu, type in regedit and go to HKEY_LOCAL_MACHINE\\SYSTEM\\Setup\\Status\\SysprepStatus. Find GeneralizationState and set the value to 7.</p> <p>Run a command prompt with administrative privileges. Type:</p> <pre><code>msdtc -uninstall\nmsdtc -install\n</code></pre> <p>Open up regedit again and find HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SoftwareProtectionPlatform. Find SkipRearm and set the value to 1.</p> <pre><code>net stop WMPNetworkSvc\n</code></pre> <p>Try running sysprep again now. Hopefully it should work. That\u2019ll save you some time of frustration and hopefully you won\u2019t go bald sooner.</p> <p>Should this not work, check the sysprep-log file at C:\\Windows\\System32\\Sysprep\\Panther\\setuperr.txt.</p>","tags":["error","fatal","solution","sysprep","windows","windows deployment services"]},{"location":"2016/01/07/test-if-a-port-on-a-remote-system-is-reachable/","title":"Test if a port on a remote system is reachable","text":"<p>With telnet:</p> <pre><code>telnet webserver.example.com 80\n</code></pre> <p>With bash:</p> <pre><code>cat &lt; /dev/tcp/webserver.example.com/80\n</code></pre> <p>Replace tcp with udp, depending on what you want.</p> <p>With netcat:</p> <pre><code>nc webserver.example.com 80 &amp;&gt; /dev/null; echo $?\n</code></pre> <p>If the port is open, you will get an output of 0. If it\u2019s closed, it\u2019s a 1.</p>","tags":["bash","linux","netcat","port","telnet","test"]},{"location":"2025/06/12/testing-connectivity-without-netcat/","title":"Testing connectivity without netcat","text":"<p>I encountered a server that did not have netcat or telnet installed, and I needed to check the connectivity against a server on a certain port. How did I solve this? There are multiple options!</p> <p>If you have netcat installed:</p> <pre><code>nc -zv example.com 443\n</code></pre> <p>With bash:</p> <pre><code>timeout 3 bash -c '&lt;/dev/tcp/example.com/443' &amp;&amp; echo \"Port is open\" || echo \"Port is closed\"\n</code></pre> <p>With python:</p> <pre><code>python3 -c \"import socket; s=socket.socket(); s.settimeout(3); s.connect(('example.com', 443))\" &amp;&amp; echo \"Port is open\" || echo \"Port is closed\"\n</code></pre>","tags":["connectivity","netcat","nc","bash","python","linux"]},{"location":"2012/04/03/ubuntu-citrix-and-ssl-error-61/","title":"Ubuntu, Citrix, and SSL-error 61","text":"<p>I just attempted to install the newest Linux Citrix ICA client for a colleague, on Ubuntu, and upon a successful install, an error similar to this one popped up when trying to run the client from Firefox:</p> <p>SSL error Contact your help desk with the following information: You have not chosen to trust\u201d/C=US/ST=/L=/O=Equifax/OU=Equifax Secure Certificate Authority/CN=\u201d, the issuer of the server\u2019s security certificate ((SSL error 61).</p> <p>The solution to this? Make Firefox\u2019s certificates accessible to Citrix, like so:</p> <pre><code>sudo ln -s /usr/share/ca-certificates/mozilla/* /opt/Citrix/ICAClient/keystore/cacerts\n</code></pre> <p>That should do the trick!</p>"},{"location":"2013/02/02/urxvt-and-urllauncher-not-working/","title":"urxvt and urlLauncher not working","text":"<p>I recently found myself having problems with urxvt. In my configuration-file, .Xdefaults, I had the following lines set up:</p> <pre><code>URxvt.perl-ext-common : default,matcher\nURxvt.urlLauncher : /usr/bin/google-chrome\n</code></pre> <p>This would enable urxvt to highlight a link in white, and when clicking it would launch the URL in to a tab of my browser of choice. But one day it suddenly stopped working, for no apparent reason. After a little digging, I found the following in urxvt\u2019s changelog, http://cvs.schmorp.de/rxvt-unicode/Changes:</p> <p>\u2013 INCOMPATIBLE CHANGE: renamed urlLauncher resource to url-launcher.</p> <p>Changing URxvt.urlLauncher to URxvt.url-launcher in .Xdefaults seemed to fix the problem!</p>"},{"location":"2011/01/17/vim-8211-commenting-out-multiple-lines/","title":"Vim &#8211; Commenting out multiple lines","text":"<p>There are two ways to do this without a vim plugin:</p> <ol> <li>Select your lines with VISUAL BLOCK (CTRL-V), then press I to insert before all highlighted lines. Next type your comment character (#, ;, depending on the language), then press ESC twice.</li> </ol> <pre><code>s/^/#\n</code></pre> <p>In other words, substitute the selected start of lines with the # character.</p>"},{"location":"2017/07/17/vim-8211-goodbye-to-set-paste/","title":"vim &#8211; Goodbye to :set paste","text":"<p>I\u2019ve been using vim as my editor of choice ever since I started learning Linux, and something that has been bothering me for a while is how vim handles pasting.</p> <pre><code>:set paste\n</code></pre> <p>When everything is pasted, I turn it off with:</p> <pre><code>:set paste!\n</code></pre> <p>or:</p> <pre><code>:set nopaste\n</code></pre> <p>The command :set paste prevents vim from auto-indenting the code I\u2019ve just pasted.</p> <p>Luckily, as it most often goes, there is a solution. Why I haven\u2019t bothered to actually find the answer till recently is a whole other matter.</p> <p>As it turns out, my terminal of choice (which currently is rxvt-unicode) supports something called bracketed paste mode.</p> <p>In short, when bracketed paste mode is set, pasted text is bracketed with control sequences so that the program can differentiate between pasted text and typed-in text.</p> <p>Let\u2019s stay that I copied the text:</p> <pre><code>Hello World!\n</code></pre> <p>from another program. When I paste it into my terminal, if it supports bracketed paste mode, it actually sends the text:</p> <pre><code>\\e[200~Hello World!\\e[201~\n</code></pre> <p>Now the thing is to let vim know how to watch out for these control sequences, and tell it what to do. Paste the following code into your .vimrc:</p> <pre><code>let &amp;t_SI .= \"\\[?2004h\"\nlet &amp;t_EI .= \"\\[?2004l\"\n\ninoremap   [200~ XTermPasteBegin()\n\nfunction! XTermPasteBegin()\nset pastetoggle=[201~\nset paste\nreturn \"\"\nendfunction\n</code></pre> <p>And that should reduce your use of :set paste quite a bit!</p>","tags":["bracketed paste mode","disable set paste","linux","set paste","vim"]},{"location":"2012/10/10/vim-re-edit-file-as-root/","title":"Vim re-edit file as root","text":"<p>Have you ever found yourself in a situation where you\u2019ve edited a file for quite some time, only to find out that you get a \u201cPermission Error\u201d when trying to save the changes? If vim is your editor, and you have sudo-privileges, try doing this:</p> <pre><code>:w !sudo tee %\n</code></pre> <p>Does the trick. :)</p>"},{"location":"2016/12/12/vmware-i3-and-multiple-monitors/","title":"VMware, i3 and multiple monitors","text":"<p>For a while now I\u2019ve been trying to set up VMware to work with multiple monitors, in a Linux guest. With some windowmanagers it works out of the box without any issue, such as with Unity. I never figured out how to do it with xmonad, and recently I switched to i3 just to try something new. The damn \u201cCycle multiple monitors\u201d button didn\u2019t work here either. When I tried it, a message popped up saying:</p> <p>The virtual machine must have up-to-date VMware Tools installed and running.</p> <p>..which it had! At this point I had installed vmware-tools, which is described as:</p> <p>\u201cA suite of utilities that enhances the performance of the virtual machine\u2019s guest operating system and improves management of the virtual machine\u201d</p> <p>However, I found a solution! Place the following line in your i3 configuration file, whether it be ~/.i3/config or ~/.config/i3/config:</p> <pre><code>exec --no-startup-id vmware-user\n</code></pre> <p>..and that\u2019s it! Reload your i3 configuration, and now you should be able to press the \u201cCycle multiple monitors\u201d button and have dual monitors in your VMware guest!</p> <p>Now, if you\u2019re using open-vm-tools instead of the native vmware-tools, do what Fabian suggested \u2013 use the following line in your config-file instead:</p> <pre><code>exec -\u2013no-startup-id vmware-user-suid-wrapper\n</code></pre> <p>It should work!</p>","tags":["cycle","i3","linux","monitor","open-vm-tools","vmware","vmware-tools"]},{"location":"2011/04/03/wallpaper-concatenation-with-imagemagick/","title":"Wallpaper concatenation with ImageMagick","text":"<p>At both home and work, I have a dual monitor setup. Having recently discovered the windowmanager xmonad, I\u2019ve found a setup that enables me to use Xinerama, and at the same time have the functionality that a separate X screen-setup would provide me. But with Xinerama comes the Twin View-setting that the Nvidia drivers provide, which \u201cmerges\u201d both monitors, and gives me one large virtual desktop. Finding wallpaper for it can be a bit tricky, especially the ones that are designed for one specific resolution. But this is where ImageMagick comes into play. What I want is two images, with different resolutions, side by side. You could of course use something else, like GIMP, but you\u2019d have to align things manually, and why risk it when a simple command can do the trick?</p> <p>First install ImageMagick:</p> <pre><code>yum install ImageMagick\n</code></pre> <p>..then do the magic:</p> <pre><code>montage wallpaper_1920x1080.jpg wallpaper_1680x1050.jpg -tile 2x1 -geometry \"1920x1080+0+0\" -mode concatenate final_wallpaper.jpg\n</code></pre> <p>By setting geometry to \u201c1920\u00d71080+0+0\u201d, we set the preferred size of one of the tiles to be that, thus resizing images that are too large.</p> <p>The results? Well, for me, this was it:</p> <p></p> <p>Enjoy!</p>"},{"location":"2009/08/28/want-to-try-out-chromium-in-fedora-11/","title":"Want to try out Chromium in Fedora 11?","text":"<p>Easy peasy.</p> <p>First we need to create a file called chromium.repo in /etc/yum.repos.d/ and put the following content in it:</p> <pre><code>[chromium]\nname=Chromium Test Packages\nbaseurl=http://spot.fedorapeople.org/chromium/F$releasever/\nenabled=1\ngpgcheck=0\n</code></pre> <p>Save and close the file. When done, execute the following command:</p> <pre><code>yum install chromium\n</code></pre> <p>And you\u2019re done. :)</p>"},{"location":"2009/08/28/want-to-try-out-chromium-in-fedora-11/#getting-flash-to-work-with-chromium-on-a-64-bit-system","title":"Getting Flash to work with Chromium on a 64-bit system","text":"<p>It\u2019s actually not as hard as you think:</p> <pre><code>wget http://download.macromedia.com/pub/labs/flashplayer10/libflashplayer-10.0.32.18.linux-x86_64.so.tar.gz\ncd /usr/lib64/chromium-browser/plugins/\ntar -zxvf /root/libflashplayer-10.0.32.18.linux-x86_64.so.tar.gz\n</code></pre> <p>Now start up Chromium with:</p> <pre><code>chromium-browser --enable-plugins\n</code></pre> <p>Works great!</p>"},{"location":"2024/12/10/while-read/","title":"while read","text":"<p>More than once I find myself opening a file with vim, pasting the contents, saving the file, and then going back to bash to do some magic with it. With this line, you simply run the command, paste in the contents that you want, and end with EOF to end the loop. In this case, I paste in a list of URLs, but only want to grab those that contain the string 'https':</p> <pre><code>while read LINE; do echo $LINE | grep https; done &lt;&lt; EOF   \n</code></pre> <p>..which looks a little something like this:</p> <pre><code>[jorge@jeb-desktop ~]$ while read LINE; do echo $LINE | grep https; done &lt;&lt; EOF\nhttp://example.org/\nhttps://authority.example.com/\nhttps://www.example.com/\nhttp://example.com/\nEOF\nhttps://authority.example.com/\nhttps://www.example.com/\n</code></pre>","tags":["linux","while","read","eof","paste"]},{"location":"2025/06/20/xfce-application-in-workspace-steals-browser-from-another/","title":"XFCE Application in workspace steals browser from another","text":"<p>This problem has been bugging me for some time. I am currently running the XFCE spinoff of Fedora 42, and I have multiple workspaces set up. If I click a link on my workspace that has my e-mail client, it steals the browser my Browser-workspace, and moves it to my e-mail workspace. The fix? Pretty simple.</p> <p>Run the command:</p> <pre><code>xconf-query -c xfwm4 -p /general/activate_action -s switch\n</code></pre> <p>What this does:</p> <ul> <li>xfconf-query \u2014 a command-line tool to query or set Xfce settings.</li> <li>-c xfwm4 \u2014 selects the channel (in this case, settings related to the Xfce Window Manager, xfwm4).</li> <li>-p /general/activate_action \u2014 specifies the property to modify (here: what happens when a window is activated).</li> <li>-s switch \u2014 sets the value of the property to switch.</li> </ul> <p>After you have run the command, links clicked in the e-mail workspace (or whatever workspace) will now switch to the Browser-workspace and open the link there instead of dragging it to where the source was. In my case, the e-mail workspace.</p>","tags":["xfce","browser","xconf-query","xfwm4"]},{"location":"2007/04/24/xsu/","title":"xsu","text":"<pre><code>#!/bin/sh\n\n# Program to run X-programs as root\n# (when you get the \"**WARNING** cannot open display\" message)\n\nsu - -c \"exec env DISPLAY='$DISPLAY'\nXAUTHORITY='${XAUTHORITY-$HOME/.Xauthority}'\n\"'\"$SHELL\"'\" -c '$*'\"\n</code></pre>"},{"location":"archive/2025/","title":"2025","text":""},{"location":"archive/2024/","title":"2024","text":""},{"location":"archive/2023/","title":"2023","text":""},{"location":"archive/2021/","title":"2021","text":""},{"location":"archive/2020/","title":"2020","text":""},{"location":"archive/2018/","title":"2018","text":""},{"location":"archive/2017/","title":"2017","text":""},{"location":"archive/2016/","title":"2016","text":""},{"location":"archive/2015/","title":"2015","text":""},{"location":"archive/2014/","title":"2014","text":""},{"location":"archive/2013/","title":"2013","text":""},{"location":"archive/2012/","title":"2012","text":""},{"location":"archive/2011/","title":"2011","text":""},{"location":"archive/2010/","title":"2010","text":""},{"location":"archive/2009/","title":"2009","text":""},{"location":"archive/2008/","title":"2008","text":""},{"location":"archive/2007/","title":"2007","text":""},{"location":"category/linux/","title":"Linux","text":""},{"location":"category/snippets/","title":"Snippets","text":""},{"location":"category/apple/","title":"Apple","text":""},{"location":"category/windows/","title":"Windows","text":""},{"location":"category/tutorials/","title":"Tutorials","text":""},{"location":"page/2/","title":"Home","text":""},{"location":"page/3/","title":"Home","text":""},{"location":"page/4/","title":"Home","text":""},{"location":"page/5/","title":"Home","text":""},{"location":"page/6/","title":"Home","text":""},{"location":"page/7/","title":"Home","text":""},{"location":"page/8/","title":"Home","text":""},{"location":"page/9/","title":"Home","text":""},{"location":"page/10/","title":"Home","text":""},{"location":"page/11/","title":"Home","text":""},{"location":"page/12/","title":"Home","text":""},{"location":"archive/2010/page/2/","title":"2010","text":""},{"location":"archive/2009/page/2/","title":"2009","text":""},{"location":"archive/2009/page/3/","title":"2009","text":""},{"location":"archive/2008/page/2/","title":"2008","text":""},{"location":"archive/2008/page/3/","title":"2008","text":""},{"location":"category/linux/page/2/","title":"Linux","text":""},{"location":"category/linux/page/3/","title":"Linux","text":""},{"location":"category/linux/page/4/","title":"Linux","text":""},{"location":"category/linux/page/5/","title":"Linux","text":""},{"location":"category/linux/page/6/","title":"Linux","text":""},{"location":"category/linux/page/7/","title":"Linux","text":""},{"location":"category/linux/page/8/","title":"Linux","text":""},{"location":"category/linux/page/9/","title":"Linux","text":""},{"location":"category/snippets/page/2/","title":"Snippets","text":""},{"location":"category/snippets/page/3/","title":"Snippets","text":""}]}